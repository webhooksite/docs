{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"FAQ","text":""},{"location":"index.html#webhooksite-frequently-asked-questions","title":"Webhook.site Frequently Asked Questions","text":""},{"location":"index.html#what-is-a-webhook","title":"What is a webhook?","text":"<p>The term 'webhook' refers to a general method of how Web-based systems talk to each other. </p> <p>In short, many systems (for example, a payment platform and a customer management system) communicate with each other by sending Web requests back and forth, for example, from <code>https://paymentsys.com</code> to  <code>https://customersys.com/order-created</code> and vice-versa.</p> <p>In-depth article about webhooks.</p>"},{"location":"index.html#what-is-webhooksite","title":"What is Webhook.site?","text":"<p>Webhook.site is a tool for building software that not only use webhooks but other types of communication, either by allowing developers to inspect the data that's being sent via a webhook, but also helps users create workflows that respond to and interact with webhooks from various systems.</p> <p>When visiting Webhook.site, users instantly get a free, unique, random URL and e-mail address. Everything that's sent to these addresses are shown instantly. With this address, users can test and debug webhooks and HTTP requests.</p> <p>Additionally, a Webhook.site subscription comes with a suite of cloud services for building Web-based workflows and automations, including Custom Actions, an advanced workflow builder that lets you automate, transform and forward data visually or via scripting languages.</p> <p>Webhook.site is operated by Webhook ApS, a registered corporation in Denmark since August 2020.</p>"},{"location":"index.html#company-information","title":"Company information","text":"<p>Webhook.site company stats as of Feburary 2025: </p> <ul> <li>300.000+ monthly unique users</li> <li>2300+ subscribed customers</li> <li>460 million HTTP requests per day</li> </ul> <p>Webhook.site is operated by Webhook ApS (VAT ID: DK41561718).</p> <p>Address: Skibsbyggerstr\u00e6de 20 5. th, 5000 Odense, Denmark.</p> <p>Company director: Simon Fredsted.</p> <p>Contact information.</p>"},{"location":"index.html#what-are-some-common-uses-for-webhooksite","title":"What are some common uses for Webhook.site?","text":"<ul> <li>Receive Webhooks without needing an internet-facing Web server</li> <li>Creating advanced workflows/automations that run when a URL is requested or an email is received</li> <li>Use Webhook.site as an intermediary or gateway, proxying and forwarding requests and being able to see what was sent in the past</li> <li>Send Webhooks to a server that's behind a firewall or private subnet</li> <li>Transforming Webhooks into other formats, and re-sending them to different systems</li> <li>Connect different computer systems or APIs that aren't compatible</li> <li>Building contact forms that e.g. send emails</li> <li>Instantly build APIs without needing infrastructure</li> </ul> <p>The following video is a quick demo of Webhook.site Custom Actions is used to set up a workflow to post updates from a news page to an X/Twitter account automatically.</p> <p></p><p></p>"},{"location":"index.html#why-should-i-pay-for-a-webhooksite-subscription","title":"Why should I pay for a Webhook.site subscription?","text":"<ul> <li>URLs never expire (free URLs expire after 7 days)</li> <li>No limit on the amount requests, emails, DNSHooks a URL can receive (free URLs accept a max of 100)</li> <li>The data sent to your URLs is protected in your account</li> <li>Custom aliases for your URLs (https://webhook.site/my-alias)</li> <li>You can manage your URLs with our Control Panel</li> <li>Unlimited e-mail support</li> <li>Features like Custom Actions, CSV Export and Schedules</li> <li>Higher rate limits on API endpoints</li> <li>Create Share Links to share data sent to Webhook.site URLs with an unbranded, whitelabel version of Webhook.site</li> </ul> <p>Click here to create a Webhook.site subscription.</p>"},{"location":"index.html#is-my-data-private","title":"Is my data private?","text":"<p>Yes. Per default, all URLs associated with a paid Webhook.site subscription are protected with login. Additionally, users can decide exactly how much (or little) data Webhook.site stores, either by amount of requests/emails, how long a URL stays active or other criteria, like the content of a request or email.</p> <p>For users of the free version of Webhook.site, as the free version operates without a login, data is accessible to anyone who knows the ID of the URL.</p>"},{"location":"index.html#can-i-use-webhooksite-for-production-workloads","title":"Can I use Webhook.site for production workloads?","text":"<p>Yes. Thousands of our customers use Webhook.site to build workflows that help their business, without needing to hire a programmer or pay for and setup servers. We take care of the infrastructure so you can build what you need.</p>"},{"location":"index.html#how-much-data-does-webhooksite-store","title":"How much data does Webhook.site store?","text":"<p>For each URL associated with a subscribed Webhook.site account, Webhook.site makes the latest 10.000 requests or emails available. Old requests are automatically rotated/purged periodically. </p> <p>In other words, A URL associated with an account will keep accepting an unlimited amount of requests and emails, but only the latest 10.000 will be available. (If you want to store data permanently, you can use Custom Actions to transfer data to a storage provider like AWS S3 or Dropbox.)</p> <p>For free users of Webhook.site (URLs not associated with an upgraded account), the URL stops accepting new requests and emails after a limit of 100 requests or emails. However, the limit is automatically removed once the URL is upgraded and associated with a Webhook.site account.</p>"},{"location":"index.html#how-long-is-data-stored-on-webhooksite","title":"How long is data stored on Webhook.site?","text":"<p>For subscribed customers, URLs associated with an account never automatically expire, but data is automatically purged after a maximum of 365 days.</p> <p>For free users, the URL \u2013 and its data \u2013 is automatically removed after 7 days.</p>"},{"location":"index.html#how-do-i-export-the-data-stored-on-webhooksite","title":"How do I export the data stored on Webhook.site?","text":"<p>With a Webhook.site subscription, there's a variety of different ways to export data sent to your URL or email address.</p> <ol> <li> <p>Custom Actions can be used in a variety of ways to export data. Below are listed a few examples of actions that could be used. More info here.</p> <ul> <li>Database Query</li> <li>HTTP Request</li> <li>Run SSH Command</li> <li>Amazon Web Services S3</li> <li>Dropbox</li> </ul> </li> <li> <p>Webhook.site provides a CSV Export functionality, simply click the button in the menu to download all data as a CSV file.</p> <p></p> </li> <li> <p>Data can be retrieved and saved using the Webhook.site API using any programming language.</p> </li> <li> <p>With the Webhook.site CLI (Command-Line Interface), requests can be forwarded directly from Webhook.site to a local workstation or server. More info here </p> </li> </ol>"},{"location":"index.html#how-do-i-forward-webhook-requests","title":"How do I forward webhook requests?","text":"<p>To forward incoming requests to another address, use Webhook.site Custom Actions to create a HTTP Request action. Running on the Webhook.site Cloud, when set to the forward mode, all data is automatically forwarded to the specified URL. </p>"},{"location":"index.html#how-do-i-send-data-to-my-computerlocalhost","title":"How do I send data to my computer/localhost?","text":"<p>There's several ways to accomplish this depending on your needs.</p> <ol> <li> <p>You can periodically fetch the data using the Webhook.site API</p> </li> <li> <p>Requests can also be streamed to a local URL using the Webhook.site CLI, in a similar fashion to e.g. ngrok.</p> </li> <li> <p>Webhook.site also supports the XHR Redirect feature, which uses your browser in order to forward the requests. The endpoint will need to respond with CORS headers in all requests so that the browser will be able to send requests to it. The forwarding will only work as long as the browser window is open.</p> </li> </ol> <p>The following CORS headers should allow Webhook.site to forward requests to your local endpoint via XHR Redirect:</p> <pre><code>Access-Control-Allow-Origin: *\nAccess-Control-Allow-Methods: *\nAccess-Control-Allow-Headers: *\nAccess-Control-Expose-Headers: Content-Length,Content-Range\n</code></pre>"},{"location":"index.html#how-can-i-automatically-remove-data-from-webhooksite","title":"How can I automatically remove data from Webhook.site?","text":"<p>Many businesses have strict requirements on the amount of data that can be stored by third-party companies, and Webhook.site provides full flexibility to handle these data protection and security requirements by limiting the amount of data stored on the Webhook.site Cloud.</p> <p>By amount</p> <p>It is possible to lower or entirely disable the request limit of a Webhook.site URL. The default request history limit is 10.000 requests, emails or DNSHooks. </p> <p>If the value is set to 0, no request history is stored in the Webhook.site Cloud, but Custom Actions will continue to run, requests are streamed to the Webhook.site interface and Webhook.site CLI forwarding will continue to function. </p> <p>To change the request limit, click Edit in the upper-right corner, or use the API via the <code>request_limit</code> parameter.</p> <p>By date</p> <p>Using the Webhook.site API (specifically, the Delete Multiple Requests endpoint) and Schedules, you can easily auto-dete data from Webhook.site URLs with very flexible settings.</p> <p>To set it up, first, create an API Key. </p> <p>Then create a Schedule like the following screenshot. </p> <p>In this example, Webhook.site will remove data older than 14 days every 24 hours. <code>now-12h</code> would be 12 hours. More date format examples.</p> <p>Remember to click the URL Encode button before saving.</p> <ul> <li>URL: <code>https://webhook.site/token/00000000-0000-0000-000000000/request?query=created_at:[* TO now-14d]</code> - replace <code>00000000-0000-0000-000000000</code> with the URL/Token ID.</li> <li>Method: <code>DELETE</code></li> <li>Headers: <code>Api-Key: 00000000-0000-0000-000000000</code> - replace <code>00000000-0000-0000-000000000</code> with your API key.</li> </ul> Automatically removing requests using Webhook.site API and Schedules"},{"location":"index.html#whats-a-webhooksite-token","title":"What's a Webhook.site \"Token\"?","text":"<p>A Token is how a Webhook.site URL is referred to in our API, it's the technical name for it. A Token corresponds to a unique UUID, which is also the Web address, email address and DNSHook address. A Token acts as a container for requests, emails and DNS queries. More about Tokens</p>"},{"location":"index.html#how-do-i-transfer-my-webhooksite-account-and-data","title":"How do I transfer my Webhook.site account and data?","text":"<p>To hand over your account to a different business or individual you essentially only need to change the email address, as it is the only piece of identification we store. However, be aware of the following:</p> <ol> <li> <p>If billing details need to change, make sure to cancel the subscription first. The subscription will continue to work until the expiry date.</p> </li> <li> <p>If 2-Factor Authentication is enabled, disable 2-Factor.</p> </li> <li> <p>For Enterprise users, make sure you delete any extraneous users.</p> </li> <li> <p>Delete any extraneous API keys that you should no longer have access to.</p> </li> <li> <p>Change the account email address to the receiver's email address.</p> </li> <li> <p>You, or the account receiver, can then issue a Password Reset email so they can set their own password.</p> </li> <li> <p>The account receiver can then create a new subscription on the account.</p> </li> </ol> <p>After this, you will no longer have access to your account and it is fully handed over.</p> <p>Alternatively, contact Webhook.site Support for help with transferring data to another Webhook.site account.</p>"},{"location":"index.html#i-want-to-whitelist-webhooksite-in-our-firewall-which-ips-do-you-use","title":"I want to whitelist Webhook.site in our firewall, which IPs do you use?","text":"<p>You'll need to whitelist the following IPs:</p> <ul> <li><code>178.63.67.106</code></li> <li><code>178.63.67.153</code> </li> <li><code>2a01:4f8:121:114d::/64</code> (IPv6)</li> <li><code>2a01:4f8:121:11a5::/64</code> (IPv6)</li> </ul> <p>Both inbound and outbound originate and destinate at these IP addresses.</p> <p>Note that this may change in the future, so sign up for the newsletter to be notified of changes.</p>"},{"location":"index.html#how-do-i-add-authentication-to-my-url","title":"How do I add authentication to my URL?","text":"<p>Basic Auth</p> <p>The easiest way to add authentication is by using the Basic Auth action type. More about the Basic Auth action.</p> <p>Conditions</p> <p>You can also use the Conditions Custom Action to add a quick header based authentication mechanism to your URL. You can also add the Don't Save action as a condition if you don't wish to save the unauthenticated request.</p> <p></p>"},{"location":"index.html#can-i-get-a-push-notification-on-my-phone-when-my-url-receives-a-request","title":"Can I get a push notification on my phone when my URL receives a request?","text":"<p>Via Custom Actions, Webhook.site supports servies like Pushed and Ntfy, both which have free tiers.</p> <p>Alternatively, at least on iPhones, you can use the Send Email custom action and mark the sender address as VIP. This will trigger a push notification when the email is received. </p>"},{"location":"index.html#can-i-pay-via-invoice","title":"Can I pay via invoice?","text":"<p>After you've paid for and created a subscription, you will receive an invoice via email.</p> <p>If you are an enterprise customer that wishes to buy a subscription via bank transfer, please contact Support.</p>"},{"location":"index.html#im-vat-exempt-how-do-i-add-my-vat-number-during-checkout","title":"I'm VAT exempt, how do I add my VAT number during checkout?","text":"<p>Click the \"Add VAT Number\" button:</p> Adding VAT number during checkout"},{"location":"index.html#how-do-i-add-my-company-name-and-details-to-my-invoice","title":"How do I add my company name and details to my invoice?","text":"<p>Go to Control Panel -&gt; Billing, then click View next to an invoice and finally click the \"Add Address &amp; VAT Number\" link. Once the data is entered, it will automatically be used for all forthcoming invoices.</p> Adding company information to invoices"},{"location":"index.html#how-can-i-see-the-pricing-in-my-currency","title":"How can I see the pricing in my currency?","text":"<p>Once you start the checkout process, you will see the amount in your local currency, including any applicable VAT.</p>"},{"location":"index.html#the-json-data-is-in-a-weird-formatcant-be-parsed-by-extract-jsonpath","title":"The JSON data is in a weird format/can't be parsed by Extract JSONPath","text":"<p>The JSON data might have been attached to the request as form data rather than as request body data, which is usually how JSON is sent.</p> <p>The data might look like this on Webhook.site:</p> <p></p> <p>To remediate this in Extract JSONPath, you'll need to set the source field to the form field variable, which is automatically set by Webhook.site. In the screenshot above, the variable name would be <code>$request.form.my_json_data$</code>, which works with Extract JSONPath:</p> <p></p>"},{"location":"index.html#json-data-is-invalid-when-using-the-http-request-action","title":"JSON data is invalid when using the HTTP Request action","text":"<p>If you use any variables in the JSON that could contain e.g. new lines or quote characters, these characters need to be \"escaped\" properly so that the JSON remains valid.</p> <p>Webhook.site provides an easy way to do this with the <code>.json</code> Variable Modifier, which will automatically escape any special JSON characters. More info here.</p> <p>Before:</p> <pre><code>{\n\"message\": \"$request.query.message$\"\n}\n</code></pre> <p>After, with the JSON Escape Variable Modifier:</p> <pre><code>{\n\"message\": \"$request.query.message.json$\"\n}\n</code></pre>"},{"location":"index.html#how-can-i-test-an-ipv6-only-request","title":"How can I test an IPv6-only request?","text":"<p>If you access Webhook.site with the hostname https://ipv6.webhook.site, your URL will only work with IPv6.</p> <p>To use it with a URL, simply replace the <code>webhook.site</code> hostname with <code>ipv6.webhook.site</code>.</p>"},{"location":"index.html#im-getting-a-404-not-found-whats-wrong-when-does-webhooksite-urls-expire","title":"I'm getting a 404 Not Found, what's wrong? / When does Webhook.site URLs expire?","text":"<p>Using the free version of Webhook.site, URLs automatically expire in 7 days. After that, the URL is no longer available and data is deleted.</p> <p>With the paid version, Webhook.site Pro, URLs never expire automatically.</p>"},{"location":"index.html#im-getting-a-405-method-not-allowed-whats-wrong","title":"I'm getting a 405 Method Not Allowed, what's wrong?","text":"<p>You might be copying the URL for the Webhook.site application (by copying the link from your browsers' address bar), and not the actual URL.</p> <p>Webhook.site app (\u26d4\ufe0f wrong):<code>https://webhook.site/#!/view/6dbb3859-4ad5-4e85-acae-e44d6e37ea4a</code></p> <p>Webhook.site url (\u2705 correct):<code>https://webhook.site/6dbb3859-4ad5-4e85-acae-e44d6e37ea4a</code></p>"},{"location":"index.html#im-getting-a-429-too-many-requests-whats-wrong","title":"I'm getting a 429 Too Many Requests, what's wrong?","text":"<p>First, make sure that you have copied the correct URL, see here.</p> <p>For free users: The URL has met the limit of the amount of requests it can receive. To unlock more requests, the URL must be associated with a Webhook.site Pro or Enterprise account. To associate a URL to your account, click Upgrade in the upper-right corner when logged in.</p> <p>For Webhook.site Pro or Enterprise users: If you're getting this error with a Webhook.site URL, the URL may have been automatically blocked due to an extraordinarily large amount of requests, as per the Fair Use guidelines in our Terms of Service. This is done to prevent a decrease in service level for our other customers. For more info, or to request a whitelisting, please contact Support. If you're getting this error with a Webhook.site API endpoint, you have exceeded the API endpoint quota, and should implement e.g. a backoff strategy.</p>"},{"location":"index.html#im-getting-a-413-payload-too-large-whats-wrong-whats-the-request-size-limit","title":"I'm getting a 413 Payload Too Large, what's wrong? / What's the request size limit?","text":"<p>The HTTP body data (e.g. files or JSON data) submitted to Webhook.site must be below 10 megabytes. More than that will cause a HTTP 413 response.</p>"},{"location":"index.html#im-getting-an-access-control-check-error","title":"I'm getting an \"Access Control Check error\"","text":"<p>If you're requesting the Webhook.site endpoint from another domain via JavaScript, you'll need to enable CORS so the browser allows the request.</p> <p>To do this, click Edit in the upper-right corner, check the Add CORS headers checkbox, and click Save.</p>"},{"location":"index.html#what-is-a-dnshook","title":"What is a DNSHook?","text":"<p>For more information about DNSHook, please see here.</p>"},{"location":"index.html#what-does-this-url-has-no-default-content-configured-mean","title":"What does \"This URL has no default content configured\" mean?","text":"<p>This is not an error - when a Webhook.site URL is created, this is simply the default HTTP response it's configured with. On Webhook.site, you can change this by clicking Edit in the upper-right corner, or via the API, using the <code>default_content</code> parameter.</p> <p>With a Webhook.site subscription, you can also use the Modify Response action.</p> <p></p>"},{"location":"index.html#what-happens-when-i-mark-my-custom-domain-as-default","title":"What happens when I mark my Custom Domain as default?","text":"<p>When you've added a custom domain as a Webhook.site Enterprise customer, you can use any of your Webhook.site URLs with both the <code>webhook.site</code> domain and your custom domain(s). </p> <p>When you mark a domain as default, 2 things happen:</p> <ol> <li>The custom domain is shown in the Webhook.site interface, e.g. when copying a URL</li> <li>The custom domain is used for email sending with the Send Email action</li> </ol> <p>Any existing URLs will continue to work with no change.</p>"},{"location":"cli.html","title":"Webhook.site CLI","text":""},{"location":"cli.html#webhooksite-cli","title":"Webhook.site CLI","text":"<p>The Webhook.site Command Line Interface (<code>whcli</code>) listens for requests to a Webhook.site URL and forwards/redirects them to your local computer or server.</p> <p>For example, when a Webhook.site URL is hit, <code>whcli</code> will automatically forward the request to the specified URL, which can be on localhost, the local network or any other URL that can be connected to, and can automatically forward the response back to the Webhook.site URL, acting as a proxy.</p> <p>Under the hood, to listen for requests, <code>whcli</code> uses an automatically reconnecting WebSocket that can stay active indefinitely.</p> <p>Webhook.site CLI is licensed under MIT and source code is available on Github.</p> <p>Star</p> <p></p><p></p>"},{"location":"cli.html#installation","title":"Installation","text":""},{"location":"cli.html#docker","title":"Docker","text":"<p>After installing Docker, you can run Webhook.site CLI via <code>docker run</code>:</p> <p><code>docker run -ti webhooksite/cli -- whcli help</code></p>"},{"location":"cli.html#nodejs","title":"Node.js","text":"<p>Node version 14 or greater required.</p> <p>To install: <code>npm install -g @webhooksite/cli</code></p> <p>Then you can run e.g. <code>whcli help</code></p>"},{"location":"cli.html#environment-variables","title":"Environment variables","text":"<p><code>WH_LOG_LEVEL</code>: Sets log level (silent, trace, debug, info, warn, error, fatal.) Defaults to info.</p> <p><code>NODE_TLS_REJECT_UNAUTHORIZED</code>: Set to <code>\"0\"</code> to disable SSL certificate validation (for e.g. self-signed development certificates) when using the <code>forward</code> command.</p>"},{"location":"cli.html#variable-replacement","title":"Variable replacement","text":"<p>For some commands and arguments, runtime variables can be replaced with the standard Webhook.site Custom Actions syntax (e.g. $variable$). Global Variables are not replaced.</p> <p>The variables that are available are the default base variables and any variables defined in a Custom Action that was run during the request.</p>"},{"location":"cli.html#commands","title":"Commands","text":""},{"location":"cli.html#help-list-commands","title":"<code>help</code>: List commands","text":"<p>Lists commands available to the CLI.</p>"},{"location":"cli.html#forward-forward-requests","title":"<code>forward</code>: Forward requests","text":"<p>The <code>forward</code> commands acts as a bidirectional proxy, listening to incoming traffic to your Webhook.site URL, forwarding it to the <code>target</code> URL, and returning the response back to Webhook.site.</p> Parameter Environment Variable Description <code>--token=</code> <code>WH_TOKEN</code> Required. The Webhook.site URL ID (also called token ID) <code>--api-key=</code> <code>WH_API_KEY</code> An API key, required when using a Token that belongs to a Webhook.site account <code>--target=</code> <code>WH_TARGET</code> Specifies URL where traffic should be forwarded.Default: <code>https://localhost</code> <code>--listen-timeout=</code> <code>WH_LISTEN_TIMEOUT</code> Amount of seconds to wait for a response from the Target URL to send back as a response for the Webhook.site URL.Set to <code>0</code> to disable bidirectional forwarding.Default <code>5</code>. Max <code>10</code>. <code>--keep-url</code> When specified, disables URL merging (see below.) <code>--query</code> <code>WH_QUERY</code> Forwards previously sent requests, filtered by a search query. When left blank, only requests sent after the command runs are forwarded."},{"location":"cli.html#example","title":"Example","text":"<pre><code>whcli forward \\\n--token=1e25c1cb-e4d4-4399-a267-cd2cf1a6c864 \\\n--api-key=ef6ef2f8-3e48-4f77-a54c-3891dc11c05c \\ \n--target=https://localhost:8080\n</code></pre>"},{"location":"cli.html#bidirectional-forwarding","title":"Bidirectional forwarding","text":"<p>Per default, Webhook.site CLI waits for 5 seconds for a response from the target and forwards it to the Webhook.site URL as a response. </p> <p>If you have a Web application that uses absolute paths, you should use your Webhook.site URL as a subdomain rather than a path, e.g. <code>https://1e25c1cb-e4d4-4399-a267-cd2cf1a6c864.webhook.site</code> rather than <code>https://webhook.site/1e25c1cb-e4d4-4399-a267-cd2cf1a6c864</code>.</p> <p>To disable bidirectional forwarding, add parameter <code>--listen-timeout=0</code>.</p>"},{"location":"cli.html#url-merging","title":"URL merging","text":"<p>The request method, headers and any additional path or query string parameters added to the Webhook.site URL is forwarded on to the target. For example, if the target URL is <code>https://example.com</code>, sending a POST request to <code>https://webhook.site/c33f3c3e-6018-4634-b406-65338edee460/example?query=value</code>, the target URL will also receive a POST request on <code>https://example.com/example?query=value</code>.</p> <p>To disable this, use the <code>--keep-url</code> parameter.</p>"},{"location":"cli.html#docker-and-localhost","title":"Docker and Localhost","text":"<p>When running Webhook.site CLI in Docker, to access the host machine, you can't use <code>localhost</code> or <code>127.0.0.1</code>. Instead, you must use the special hostname <code>host.docker.internal</code>. More info here.</p>"},{"location":"cli.html#self-signed-certificates","title":"Self-signed certificates","text":"<p>If the target uses a self-signed certificate, you could get an error message about this. To allow self-signed certs, run <code>whcli</code> with the following environment variable: <code>NODE_TLS_REJECT_UNAUTHORIZED=\"0\"</code></p>"},{"location":"cli.html#forwarding-past-requests","title":"Forwarding past requests","text":"<p>When the <code>--query</code> argument is specified, only past requests are processed, filtered by the specified query. Variable Replacement is not available for past requests.</p> <p>Examples:</p> <ul> <li><code>*</code> - all requests</li> <li><code>content:\"foobar\"</code> - body contents containing the word foobar</li> <li><code>created_at:[now-14d TO *]</code> - date range query (in this example, all requests 14 days old and newer)</li> </ul> <p>More query examples.</p>"},{"location":"cli.html#exec-execute-commands","title":"<code>exec</code>: Execute commands","text":"<p>Allows executing terminal commands for new incoming requests sent to your Webhook.site URL. Custom Action variables are replaced in the <code>--command</code> argument.</p> Parameter Environment Variable Description <code>--token=</code> <code>WH_TOKEN</code> The Webhook.site URL ID (also called token ID) <code>--api-key=</code> <code>WH_API_KEY</code> An API key, if using a Token that belongs to a Webhook.site account <code>--command=</code> <code>WH_COMMAND</code> Specifies which command should be run"},{"location":"cli.html#example_1","title":"Example","text":"<pre><code>whcli exec \\\n--token=1e25c1cb-e4d4-4399-a267-cd2cf1a6c864 \\\n--api-key=ef6ef2f8-3e48-4f77-a54c-3891dc11c05c \\ \n--command='ping $request.ip$'\n</code></pre>"},{"location":"custom-actions.html","title":"Custom Actions","text":""},{"location":"custom-actions.html#custom-actions","title":"Custom Actions","text":"<p>With Custom Actions, it is possible to create a workflow out of a set of actions that are executed whenever a Webhook.site URL receives a request or email. Custom Actions run on the Webhook.site Cloud.</p> <p>Using this functionality, you can connect APIs that aren't compatible, convert a HTTP request to an email or vice versa, build workflows that would otherwise require a developer, and much, much more.</p> <p>The general principle of Custom Actions is that they are always executed in a chain. As they run, Variables are exchanged between them.</p> <p>Additionally, the Conditions action can define certain conditions that are used to decide whether specific actions run or not. </p> <p>Even though actions are run in a chain, it's still possible to branch out and run actions in an asynchronous manner via queued actions, or loop over sets of data using actions that can be repeated.</p> <p>On each request, the output for all the different actions is collected so you can go back and see what happened. If the action sends HTTP Requests, both the request and response details are shown.</p> Action output shown on individual requests along with HTTP Request data <p>If actions fail, the request they ran on is marked. It is possible to set up notifications for when actions (and Schedules) fail. In Control Panel, Error Log provides a convenient way to search for errors occurring across all URLs and Schedules associated with the Webhook.site account. </p> <p>With Replay, it's possible to run the actions again, e.g. for actions that failed previously.</p> Error Log is a convenient way to monitor Schedules and Custom Actions"},{"location":"custom-actions.html#shortcut-keys","title":"Shortcut Keys","text":"<p>The following shortcut keys can be used in the Custom Actions editor.</p> <ul> <li>Alt-R - test action</li> <li>Alt-S - save/create action</li> </ul>"},{"location":"custom-actions.html#demos","title":"Demos","text":""},{"location":"custom-actions.html#javascript-x-and-schedules","title":"JavaScript, X and Schedules","text":"<p>In this video I'm doing a quick demo of how I used Webhook.site to set up a workflow to post updates from my news page automatically to my X/Twitter account. I used the actions JavaScript, Conditions, X Post, and Store Global Variable. </p> <p></p><p></p>"},{"location":"custom-actions.html#jsonpath-and-google-sheets","title":"JSONPath and Google Sheets","text":"<p>In the following demo, webshop order details are received in a webhook. We then use Extract JSONPath and Google Sheets actions to insert their name in a Google Sheet. It also shows how variables interact with downstream actions.</p> <p></p><p></p>"},{"location":"custom-actions.html#forward-to-multiple-endpoints-looping","title":"Forward to multiple endpoints, Looping","text":"<p>A quick demo of how to use the Split Text action to loop over a list of URLs and forward the incoming request to them.</p> <p></p><p></p>"},{"location":"custom-actions.html#mock-openapi-and-swagger-specifications-using-mock-action","title":"Mock OpenAPI and Swagger specifications using Mock action","text":"<p>The Mock action lets you upload an OpenAPI or Swagger specification, and your Webhook.site URL will automatically act as a mock server, creating responses based on the paths and schemas in the specification.</p> <p></p><p></p>"},{"location":"custom-actions.html#templates","title":"Templates","text":"<p>If you use the same set of Custom Actions often, you can create a Template that contains a copy of one or more Custom Actions, along with a set of Predefined Variables. </p> <p>You can then use this template by creating an Import Template action.</p>"},{"location":"custom-actions.html#creating-a-template","title":"Creating a Template","text":"<p>To create a Template, click the Create Template button in the Custom Actions editor. Then enter a name for the template and select which actions should be copied to the template. If your template actions e.g. depend on variables pre-existing, like configuration data, you can add one or more Predefined Variables. These are available to the actions in the Template, but also to any subsequent actions coming after the Import Template action.</p> <p>Predefined Variables can be updated in the Control Panel.</p> <p>Changes to the actions that the Template was created from do not automatically carry over to the template. Instead, Templates can be updated post-creation by overwriting them with a new set of actions.</p> <p>Templates can also be managed using the Template API.</p>"},{"location":"custom-actions.html#repeating-actions","title":"Repeating Actions","text":"<p>Webhook.site allows some action types to be repeating, which makes Webhook.site \"loop over\" one or more values without needing to use scripts.</p> <p></p><p></p> <p>Repetition is supported by the Extract JSONPath, Extract Regex and Split Text action types.</p> <p>The maximum amount of items that are supported is 100 to prevent abuse. </p> <p>The repeating action must be ordered before the actions that are to be repeated.</p>"},{"location":"custom-actions.html#queued-actions","title":"Queued Actions","text":"<p>By checking the Queued checkbox when creating a Custom Action, Webhook.site will run the action in an asynchronous background queue. </p> <p>This is useful when:</p> <ul> <li>a Webhook.site URL should respond quickly, but a Custom Actions flow takes a long time to run. For example, if a Webhook.site URL should respond in 5 seconds, but an endpoint with a HTTP Request action that responds in 10 seconds is called, you can queue the HTTP Request action so it's run in the background queue.</li> <li>a Custom Actions flow takes longer than 30 seconds to run. As Webhook.site's timeout for Webhook.site URLs is 30 seconds, to run flows longer than that, you can mark the action as Queued to let it run for up to 120 seconds.</li> </ul> <p>Additionally, you can specify an amount of seconds to wait until the action is executed. To do this, enter an amount of seconds in the Seconds textbox next to the Queue checkbox.</p> <p>As the queued action will inherit the execution scope up until the action, there are some things that are important to be aware of when using Queued Actions:</p> <ul> <li>Variables defined by a queued action are not available to non-queued actions. You cannot, for example, mark a HTTP Request action as queued and use the response in a Modify Response action (which can't be queued.)</li> <li>Variables defined in non-queued actions ordered before the queued action will be available to the action.</li> <li>If several consecutive actions are marked as queued, and their delay is identical, they are considered a group and will pass variables and execute in order.</li> <li>The amount of time until the queued actions are executed can vary by a few seconds.</li> <li>Groups of queued actions have a total timeout of 120 seconds, at which the execution will be terminated.</li> </ul>"},{"location":"custom-actions.html#replay","title":"Replay","text":"<p>With Replay, you can easily run Custom Actions again for either all or a subset of incoming requests. </p> <p>For example, if you've made changes to your flow, want to import data again, fixed an error \u2013 there's a lot of reasons you might want to run your flow again for the requests on your Webhook.site URL, and now you can do it in Webhook.site with a few easy clicks. </p> <p>If the filter matches more than 50 requests, a warning will be shown.</p> <p> </p> <p>Existing action output stored on a request is overwritten by the replay action output.</p> <p>Actions that are marked as queued will also be run as queued when replaying actions.</p> <p>While Webhook.site starts processing oldest requests first, actions are run in batches and execution order is not guaranteed.</p>"},{"location":"database.html","title":"Databases","text":""},{"location":"database.html#webhooksite-databases","title":"Webhook.site Databases","text":"<p>Store and process data in the Webhook.site Cloud using Databases. Built right in to Webhook.site, Databases provide a fully-featured PostgreSQL-compatible database. You can create and remove tables, create columns and run queries in the Console. </p> Create Database <p>With Webhook.site Custom Actions, you can interact with your Database to store, update, retrieve and remove data by SQL Query whenever a Webhook.site URL or E-mail Address receives a hit.</p> <p>Additionally, with Webhook.site's simple API, you can manage your Database, including running SQL queries.</p> Webhook.site Database Console Webhook.site Database in Custom Action editor"},{"location":"database.html#under-the-hood","title":"Under the hood","text":"<p>Webhook.site Databases are powered by CockroachDB, providing a fault-tolerant, secure and highly available PostgreSQL-compatible environment for your data. With Webhook.site Databases, you don't have to worry about maintenance, uptime, backups as Webhook.site Cloud continually manages and scales the database clusters upon demand to ensure performance.</p>"},{"location":"database.html#pricing-and-availability","title":"Pricing and availability","text":"<p>News</p> <p>As an introductory offer, each Webhook.site Pro &amp; Enterprise subscription automatically comes with a <code>DB-S</code> Webhook.site Database instance included. Additional databases can be ordered by contacting Support.</p>"},{"location":"database.html#pricing-table","title":"Pricing Table","text":"<code>DB-S</code> Small <code>DB-M</code> Medium <code>DB-L</code> Large <code>DB-X</code> Custom Storage 100 mb 5 gb 20 gb Custom Tables 1 3 10 Custom Pricing $0/mo $10/mo ($100/year) $25/mo ($250/year) Contact Support <p>To purchase or provision a Database, go to Databases in Control Panel.</p> <p>To upgrade a database instance, Contact Support.</p>"},{"location":"dnshook.html","title":"DNSHook","text":""},{"location":"dnshook.html#dnshook-by-webhooksite","title":"DNSHook by Webhook.site","text":""},{"location":"dnshook.html#what-is-dnshook","title":"What is DNSHook?","text":"<p>Webhook.site DNSHook is a type of hook, like webhooks and emailhooks, that on Webhook.site will automatically show all DNS requests to a unique DNS name and all its subdomains. </p> <p>DNSHooks can be used to send data solely via DNS. DNSHooks can also be used as a canary token as DNS can be useful in cases where it can bypass firewalls, for example.</p> <p></p>"},{"location":"dnshook.html#create-dns-workflows-with-custom-actions","title":"Create DNS workflows with Custom Actions","text":"<p>You can even create workflows from DNSHook requests with Custom Actions. </p> <p>For example, you can send a notification to your phone whenever a specific subdomain has had its DNS looked up via the Ntfy action.</p>"},{"location":"dnshook.html#receive-data-via-dns","title":"Receive data via DNS","text":"<p>As all subdomains are also logged and shown on Webhook.site, you can send data in DNSHooks by e.g. base64-encoding a subdomain. For example, the string <code>hello world</code> can be encoded in a DNS lookup as the following.</p> <pre><code>aGVsbG8gd29ybGQ.47bb8761-e40b-42c2-8c98-a448f492df70.dnshook.site\n</code></pre> <p>(In this case, <code>aGVsbG8gd29ybGQ</code> base64-decodes to <code>hello world</code> and <code>47bb8761-e40b-42c2-8c98-a448f492df70</code> is the ID of the Webhook.site token/URL.)</p> <p>Indeed, you can even use different record types, like CNAME and MX, as flags to transfer information to Webhook.site.</p>"},{"location":"dnshook.html#send-dns-response","title":"Send DNS Response","text":"<p>You can also set the DNS response dynamically by using the URL response in the following format. You can return one or more responses.</p> <pre><code>[\n{\n\"type\": \"a\",\n\"value\": \"127.0.0.1\"\n},\n{\n\"type\": \"cname\",\n\"value\": \"example.com.\"\n},\n{\n\"type\": \"txt\",\n\"value\": \"hello world\"\n}\n]\n</code></pre> <p>To set the response, either enter the JSON in Edit \u2192 Content, or use the Modify Response Custom Action and setting the Response Body field.</p> <p></p> <p><code>type</code> can be one of the following:</p> <ul> <li><code>a</code></li> <li><code>cname</code></li> <li><code>txt</code></li> </ul> <p>Note: If the response isn't valid (e.g. invalid JSON, using a domain name in an A record), no response is returned. It is currently not possible to be notified of DNS parsing errors, so make sure to test this well.</p> <p>For <code>txt</code> responses, multiple lines can be sent by separating with <code>\\n</code> (newline).</p>"},{"location":"form-builder.html","title":"Webhook.site Form Builder","text":""},{"location":"form-builder.html#form-builder-by-webhooksite","title":"Form Builder by Webhook.site","text":"<p>Form Builder is an easy way to create HTML forms with custom functionality for Web sites, like contact forms, registration forms, etc.</p> <p>Simply drag and drop the desired components onto the form, enter your Webhook.site URL and copy the HTML code to your Web site editor. </p> Go to Webhook.site Form Builder <p>Below is a quick video demo that shows how to use Form Builder to create a flow that emails recipients a generated PDF file using Custom Actions.</p> <p></p><p></p>"},{"location":"jobs.html","title":"Webhook.site Jobs","text":""},{"location":"jobs.html#webhooksite-jobs","title":"Webhook.site Jobs","text":"<p>Webhook.site is a small startup that's fully remote. We believe in absolute trust in our employees. What's important to us is your work output and communication, not how many hours you spend. You'll be working at a company with a lot of dedicated and passionate customers that use the product to solve real problems in their work.</p>"},{"location":"jobs.html#ui-ux-designerfrontend-engineer","title":"UI &amp; UX Designer/Frontend Engineer","text":"<p>Updated 20 Jun 2025</p> <p>We are looking for a project employee/agency with experience in designing complex software-as-a-service Web applications. </p> <p>Among our 350,000 monthly unique users and 2,800 active customers there's a wide variety of users, from Fortune 500 companies to individuals, that use our platform to solve a wide variety of problems that relate to making Web-based software systems talk to each other.</p> <p>We want to improve on the overall look of Webhook.site, make it more seamless and quick to use as well as making our subscription features more prominent in our users' minds. We want the design of Webhook.site to signify a stable, enterprise-ready application for building Web-based tools. We want to make it easier and more fluid to build workflows with Custom Actions. </p> <p>We want to keep the no-registration, no-popups, zero-clicks-to-copy-a-URL concept that our users know and love. We want to fix problems with existing elements gradually and avoid launching a big redesign that alienates users. The priorities are: 1) tweak and cleanup frontend UI, 2) improvements to Custom Actions builder, 3) improve landing page.</p> <p>If you're interested in working with us, please reach out to jobs@webhook.site with a portfolio. You can also book a call with Simon Fredsted, Webhook.site founder.</p>"},{"location":"news.html","title":"News & Changelog","text":""},{"location":"news.html#news","title":"News","text":"<p>Follow @webhook.site on X to receive regular updates.</p> <p>Subscribe below to receive updates about improvements and new features on Webhook.site as well as infrastructure changes like new IP addresses for e.g. firewall whitelisting. Expect a newsletter a few times a year at most.</p> <p></p>"},{"location":"news.html#29-october-2025","title":"29 October 2025","text":"<ul> <li>As part of our path to deprecating token passwords in favor of Share Links, setting passwords has been removed from the UI. API support is still available.</li> <li>Added automatic JSON syntax highlighting</li> <li>Added Location details (city, region country) for each incoming request.</li> <li>Conditions action: Added is null/is not null operators</li> <li>Send Email (SMTP): Now uses 8bit encoding instead of base64, which is not widely supported.</li> <li>Variables list now shows proper values for null, false, etc.</li> <li>Time to token expiry is now shown in menu bar.</li> <li>Action API: Add <code>error_notifications</code> option on Execute endpoint.</li> </ul>"},{"location":"news.html#9-october-2025","title":"9 October 2025","text":"<ul> <li>Added support for Webhook.site Databases in JavaScript. More info here.</li> <li>Fixed an error when adding invalid header data to the Modify Response action.</li> <li>Fix Docs navigation/sidebar on Mobile.</li> </ul>"},{"location":"news.html#8-october-2025","title":"8 October 2025","text":"<ul> <li>Added support for Webhook.site Databases in WebhookScript. More info here.</li> <li>Added <code>params</code> to the Database Query API.</li> <li>Increased maximum row count in Database actions to 1000.</li> </ul>"},{"location":"news.html#1-october-2025","title":"1 October 2025","text":"<ul> <li>New Feature: Webhook.site Databases, our new built-in database service hosted on the Webhook.site Cloud, is released to all users, and as an introductory offer, all Webhook.site Subscribers can create 1 DB-S instance for free. More info here.  Create your Database now in Control Panel \u2192 Databases.</li> <li>Added Database API for managing Webhook.site Databases.</li> <li>Added autocomplete for Database action. For Webhook.site Databases, the editor autocompletes tables and columns as well.</li> </ul>"},{"location":"news.html#29-september-2025","title":"29 September 2025","text":"<ul> <li>Added Users API for inviting and managing users.</li> </ul>"},{"location":"news.html#22-september","title":"22 September","text":"<ul> <li>Added <code>$error.[action]$</code> variable that is automatically created whenever an action result in an error.</li> <li>Email notifications should now support dark mode in Apple Mail on iOS.</li> </ul>"},{"location":"news.html#5-august-2025","title":"5 August 2025","text":"<ul> <li>Added Open In function to view requests in RapidAPI and Postman clients</li> <li>Copy As: Now added copying a request as API URL</li> <li>Replay: Fixed an issue where requests would be skipped</li> <li>Log action: It is now possible to mark a Log action as an error</li> <li>HTTP action: Added Bearer Token authentication method</li> <li>JavaScript action: Maximum runtime when marked as Queued increased to 120 seconds</li> <li>Fixed an issue where expiry would not be set when creating it via the New URL dialog</li> <li>Fixed bad error messages when creating URLs via the New URL dialog</li> <li>Fixed an issue where Member users could not create URLs when they're in a group</li> <li>Fixed an issue where binary data would prevent a Queued action from being run</li> <li>In request details, form values are now being sorted by name</li> <li>Fixed Total count in Control Panel</li> <li>SAML SSO: Fixed an issue where login wouldn't work for some Entra users</li> </ul>"},{"location":"news.html#30-may-2025","title":"30 May 2025","text":"<ul> <li>New Action: Validate JSON, a quick way to validate JSON \u2013 optionally against a JSON Schema.</li> </ul>"},{"location":"news.html#27-may-2025","title":"27 May 2025","text":"<ul> <li>Added <code>--query</code> flag to Webhook.site CLI, allowing forwarding of past requests. More info here</li> </ul>"},{"location":"news.html#9-may-2025","title":"9 May 2025","text":"<ul> <li>Underscores are now allowed in Token Aliases</li> <li>Re-added Variables list to Custom Actions editor</li> <li>Added new \"matches regex\" operator to Conditions action</li> </ul>"},{"location":"news.html#30-april-2025","title":"30 April 2025","text":"<ul> <li>Custom Domains no longer have a separate <code>email.</code> subdomain for email sending and receiving. If you have already created a Custom Domain you'll need to delete and add it again.</li> </ul>"},{"location":"news.html#25-april-2025","title":"25 April 2025","text":"<ul> <li>Webhook.site now supports SAML 2.0 Single Sign-On (SSO) for Enterprise customers. More info here.</li> </ul>"},{"location":"news.html#23-april-2025","title":"23 April 2025","text":"<ul> <li>Fixed an issue where queued actions wouldn't run if the request contains e.g. binary form/multipart data.</li> <li>HTTP action: Fixed an issue where form/multipart data wouldn't be properly forwarded due to invalid boundary in the content-type header.</li> <li>Fixed an issue where action error notifications wouldn't be sent for queued actions.</li> <li>Fixed an issue where action output wouldn't be saved for queued actions.</li> </ul>"},{"location":"news.html#22-april-2025","title":"22 April 2025","text":"<ul> <li>HTTP action: Timeout raised to 60 seconds when action is in Queue mode.</li> </ul>"},{"location":"news.html#15-april-2025","title":"15 April 2025","text":"<ul> <li>Updates to Replay<ul> <li>Replay will automatically use the query from searching requests</li> <li>It is now shown how many results the Replay search query returns</li> <li>Fixed an issue with progress bar going to 100% immediately</li> </ul> </li> </ul>"},{"location":"news.html#14-april-2025","title":"14 April 2025","text":"<ul> <li>Updates to Custom Actions editor<ul> <li>Variables dropdown has been moved to the top, fills the whole screen and shows variable values</li> <li>Variables dropdown now has a search field to easily find a specific variable \u2013 both variable name and value is searched</li> <li>Since the Variables dropdown has improved, the output section no longer shows Variables</li> <li>Output section is now a resizable panel, allowing output and action configuration to be shown simultaneously</li> <li>Removed the bottom part of Custom Actions modal to conserve space for editor</li> </ul> </li> </ul>"},{"location":"news.html#1-april-2025","title":"1 April 2025","text":"<ul> <li>HTTP: Fixed Content-Type parameter not being replaced with Custom Variables.</li> <li>Custom Domains: Verification Success emails are now sent.</li> <li>Webhook.site now shows a warning as a (free) URL is near its expiry date.</li> </ul>"},{"location":"news.html#27-feburary-2025","title":"27 Feburary 2025","text":"<ul> <li>Extract JSON now supports Repeat, and automatically extracts variables when interating over objects and arrays.</li> <li>Shortcut keys <code>Alt-R</code> (test) and <code>Alt-S</code> (save/update) now work everywhere in Custom Actions editor.</li> </ul>"},{"location":"news.html#21-feburary-2025","title":"21 Feburary 2025","text":"<ul> <li>Action AI beta released for all Webhook.site customers, letting you generate actions via AI. We plan to run this beta for a limited time and collecting feedback amongst the users who've used it.</li> </ul> <ul> <li>Added is true/is false operators to Conditions action.</li> </ul>"},{"location":"news.html#19-feburary-2025","title":"19 Feburary 2025","text":"<ul> <li>It's now possible to manage Groups in Control Panel.</li> <li>Added Clone button in Custom Actions editor.</li> <li>Default response now has link to edit response.</li> </ul>"},{"location":"news.html#12-feburary-2025","title":"12 Feburary 2025","text":"<ul> <li>Variables can now be escaped via backslashes.</li> <li>The <code>upper</code> and <code>lower</code> variable modifiers have been fixed.</li> <li>Added new <code>json_format</code> variable modifier.</li> <li>SSH-based actions now have a timeout of 30 seconds.</li> </ul>"},{"location":"news.html#30-january-2025","title":"30 January 2025","text":"<ul> <li>Database Query action now supports positional parameters and autofilling parameters from the statement. More info here</li> </ul>"},{"location":"news.html#21-january-2025","title":"21 January 2025","text":"<ul> <li>New Action: OpenAPI/Swagger Mock, which lets your Webhook.site URL act as a mock server and automatically generates Web responses according to the specification. More info here</li> </ul> <ul> <li>Renamed the AutoJSON action to Extract JSON.</li> </ul>"},{"location":"news.html#7-january-2025","title":"7 January 2025","text":"<ul> <li>Set Variable action now supports Math Mode, allowing powerful math expressions without scripting.</li> </ul>"},{"location":"news.html#11-december-2024","title":"11 December 2024","text":"<ul> <li>Fixed an issue where a JavaScript Custom Action running from incoming emails with attachments would cause an error.</li> </ul>"},{"location":"news.html#10-december-2024","title":"10 December 2024","text":"<ul> <li>It's now easier to find requests with Custom Action errors \u2013 now they're highlighted in the request sidebar.</li> <li>There's now a button to find recently accessed Webhook.site URLs in far left of the menu bar.</li> </ul>"},{"location":"news.html#12-november-2024","title":"12 November 2024","text":"<ul> <li>Updates for Schedules:<ul> <li>It's now possible to attach Schedules to Groups. With Roles, you can limit which Schedules can be viewed by certain users.</li> <li>Schedules now supports alerting based on HTTPS certicate expiry, when expiry is less than a selected amount of days. </li> <li>Fixed sorting on Schedule Logs page.</li> </ul> </li> </ul>"},{"location":"news.html#7-november-2024","title":"7 November 2024","text":"<ul> <li>RabbitMQ Publish action: Added support for header properties like <code>x-message-ttl</code></li> <li>JavaScript action: Added libraries <code>node-fetch</code> and <code>form-data</code>.</li> </ul>"},{"location":"news.html#16-october-2024","title":"16 October 2024","text":"<ul> <li>New Features in User Management: <ul> <li>User Roles, allowing administrators of a Webhook.site team account to limit users to URLs associated with specific groups. </li> <li>A new user type, Member, is introduced which gives users access to create and modify Webhook.site URLs, but excludes access to User Management, Billing and other settings.</li> <li>Member users can create API keys, but can only see their own API keys. The Member-generated API keys can only access URLs in the groups they have access to.</li> </ul> </li> <li>When creating a URL, it's possible to select a Group to create it in.</li> </ul>"},{"location":"news.html#30-september-2024","title":"30 September 2024","text":"<ul> <li>New Feature: Share Links. We've often had customers asking us about how to share a Webhook.site URL and the data it has received with others. With Share Links, you can now quickly share a view-only, whitelabel access link to a Webhook.site URL. If you're a Webhook.site Enterprise customer with a Custom Domain, the share link will use that domain per default. Share Links can be regenerated as needed to reset access.    </li> <li>The ability to disable the setting <code>Require login to view URLs</code> has been removed. As of 1 November 2024, the setting will be removed so all URLs will require login, API key or a Share Link to be viewed. We will send out a newsletter about this to the small number of affected accounts that has disabled this setting.</li> <li>We are also deemphasizing and sunsetting the password functionality for Tokens/URLs (not for user accounts!), as we believe Share Links will replace this function. We expect to remove Token Passwords completely in 2025.</li> </ul>"},{"location":"news.html#25-september-2024","title":"25 September 2024","text":"<ul> <li><code>moment</code> library added to the JavaScript Custom Action. More info here</li> </ul>"},{"location":"news.html#10-september-2024","title":"10 September 2024","text":"<ul> <li>When creating a date variable using the Set Variable action, it's now possible to specify an output timezone format.</li> <li>We've had to remove the spreadsheet selector dropdown due to changes in Google's API terms. It's still possible to copy/paste a spreadsheet URL and select it like that.</li> </ul>"},{"location":"news.html#30-august-2024","title":"30 August 2024","text":"<ul> <li>New Feature: Replay Custom Actions. Replaces the Run Now button. Easily run Custom Actions again for either all or a subset of incoming requests. More info here </li> <li>Requests API: It's now possible to see and search for which Custom Actions returned an error using the new <code>custom_action_errors</code> field in the API. More info here</li> <li>Actions API: The Execute Action endpoint has been changed so that the output and errors are now saved (overwritten) on the specified request. Additionally, error notification emails are disabled when running actions using the endpoint.</li> </ul>"},{"location":"news.html#29-august-2024","title":"29 August 2024","text":"<ul> <li>Webhook.site had partial downtime from approx 01:19 to 05:23 UTC. We've identified the fault to be the MariaDB \"max connect errors\" configuration option, which per default blocks a server IP after very a low number of errors, causing Webhook.site Web servers to lose contact to the DB servers. We've also identified an information leak in an error message which has also been remediated. We apologize.</li> </ul>"},{"location":"news.html#26-august-2024","title":"26 August 2024","text":"<ul> <li>New Operators added to Conditions action: is variable defined, is int, is json, is email, etc. Full list here.</li> <li>New output variables for Database action: <code>*.rows</code> and <code>*.error</code>, to allow e.g. making conditions actions based in the success of the database query. More info here.</li> <li>Added <code>.upper</code> and <code>.lower</code> Variable Modifiers. More info here.</li> </ul>"},{"location":"news.html#10-august-2024","title":"10 August 2024","text":"<ul> <li>NATS and Supabase clients added to JavaScript sandbox. More info here</li> </ul>"},{"location":"news.html#2-august-2024","title":"2 August 2024","text":"<ul> <li>As we're planning to add more capacity, the Webhook.site IPs have partially changed. The IP <code>88.99.82.58</code> is no longer used by us. The full list of IPs that need to be whitelisted are the following: <code>178.63.67.106</code>, <code>178.63.67.153</code>. </li> </ul>"},{"location":"news.html#23-july-2024","title":"23 July 2024","text":"<ul> <li>New Custom Actions: FTP(S) and SFTP Download, in addition to existing Upload actions.</li> </ul>"},{"location":"news.html#17-july-2024","title":"17 July 2024","text":"<ul> <li>New Feature: Webhook.site Form Builder, a quick way to build HTML forms with custom fields that send data to your Webhook.site URL. Makes it easy to create e.g. a Contact Form in conjunction with Custom Actions. Go to Form Builder.</li> </ul>"},{"location":"news.html#16-july-2024","title":"16 July 2024","text":"<ul> <li>New Custom Action: Generate PDF, working with either Markdown or HTML content, can be used in e.g. Send Email, Modify Response actions. More info here</li> </ul>"},{"location":"news.html#15-july-2024","title":"15 July 2024","text":"<ul> <li>As of version 0.2.0, the Webhook CLI <code>forward</code> command now works bidirectionally, forwarding the response back to your Webhook.site URL, acting as a proxy. More info here</li> <li>Webhook.site URLs can now also be used as subdomains. <code>https://webhook.site/my-url</code> and <code>https://my-url.webhook.site</code> are now equivalent. Custom domains are currently not supported.</li> </ul>"},{"location":"news.html#9-july-2024","title":"9 July 2024","text":"<ul> <li>New Custom Action: HubSpot Create Contact, which lets you easily create new leads in the HubSpot CRM system. More info here</li> </ul>"},{"location":"news.html#28-june-2024","title":"28 June 2024","text":"<ul> <li>Database Action: Added support for Microsoft SQL Server (<code>sqlsrv</code>), in addition to existing support for MySQL/MariaDB and PostgresQL.</li> <li>Fixed an issue in CSV export where lines containing the string <code>\\\"</code> would cause the CSV to be formatted incorrectly.</li> <li>We've been seeing some issues with our CDN provider, Cloudflare. We've added a link to disable CDN at the top of the page in case CDN-hosted resources (scripts and stylesheets) won't load.</li> </ul>"},{"location":"news.html#25-june-2024","title":"25 June 2024","text":"<ul> <li>JavaScript editor now has autocomplete and snippets for common structures (if, while, etc.)</li> <li>When downloading files (multipart, email attachments, etc.), the original filename is now used when possible</li> <li>In Control Panel, individual URLs are now marked with a unique color so they're easier to find</li> </ul>"},{"location":"news.html#21-june-2024","title":"21 June 2024","text":"<ul> <li>It's now possible to add a note to individual requests both via the app and the API</li> <li>In Control Panel, URL list now has ordering capabilities</li> <li>In Custom Actions editor, default variables (e.g. $request.uuid$) are ordered last</li> <li>Fixed copying DNSHook to clipboard</li> <li>Fixed Custom Actions editor layout problems</li> </ul>"},{"location":"news.html#10-june-2024","title":"10 June 2024","text":"<ul> <li>We've moved Tokens to a new datastore. The switch should have been unnoticable, but if you've started to see bugs in e.g. Control Panel or Tokens API, please contact support.</li> <li>It's now possible to search your URLs in Control Panel by ID and Alias.</li> <li>Fixed an issue where Error Log was not loading when a Token was deleted.</li> <li>Fixed an issue where Global Variables couldn't be edited in Control Panel.</li> <li>Fixed an issue where the correct group wouldn't be selected when editing a Token.</li> <li>A proper error is now returned when an API Key is invalid.</li> </ul>"},{"location":"news.html#7-may-2024","title":"7 May 2024","text":"<ul> <li>New Feature: Error Log, which lets you see the latest errors for your URLs and Schedules in a single, searchable, list. Go to Error Log</li> </ul>"},{"location":"news.html#3-may-2024","title":"3 May 2024","text":"<ul> <li>New Action Type: Basic Auth, for easily adding secure authentication to your Webhook.site URL. More info here</li> <li>It's now possible to hide requests marked as Don't Save from the UI. Simply click More and select Hide \"Don't Save\" Requests.</li> </ul>"},{"location":"news.html#1-may-2024","title":"1 May 2024","text":"<ul> <li>Webhook.site Newsletter May 2024 has been released.</li> </ul>"},{"location":"news.html#25-april-2024","title":"25 April 2024","text":"<ul> <li>Retry functionality has been added to the HTTP Request action. When enabled, Webhook.site will retry a HTTP request in case of timeouts. A status code can be specified as a retry condition. More info here</li> <li>The timeout of Queued actions have been increased to 120 seconds. This means that a series of queued actions have 120 seconds to complete.</li> </ul>"},{"location":"news.html#24-april-2024","title":"24 April 2024","text":"<ul> <li>For incoming emails, in addition to text and raw content, HTML content is now shown separately.</li> <li>New Base Variable for emails: <code>$request.html_content$</code> which contains only the HTML content of the e-mail.</li> </ul>"},{"location":"news.html#22-april-2024","title":"22 April 2024","text":"<ul> <li>If a default Custom Domain is specified and is validated for email, it's now used as the sender address in the Send Email action (applies to new URLs only.)</li> <li>Improved display of text content of incoming emails - links are now clickable and quotes are indented.</li> <li>Fixed \"401 Missing Password\" error when saving configuration of Tokens that have a password set.</li> </ul>"},{"location":"news.html#15-april-2024","title":"15 April 2024","text":"<ul> <li>Webhook.site now uses the domain <code>emailhook.site</code> for email receiving and sending. The old domain, <code>email.webhook.site</code>, continues to work.</li> <li>JavaScript action now supports Global Variables via the built-in <code>store()</code> and <code>global()</code> functions. More info and examples here</li> <li>JavaScript action no longer considered in beta.</li> <li>New API: Global Variables. More info here</li> <li>Webhook.site CLI forward command now defaults to <code>https://localhost</code> for the <code>--target</code> parameter.</li> </ul>"},{"location":"news.html#9-april-2024","title":"9 April 2024","text":"<ul> <li>Action Editor improvements: drag and drop to change order of actions is now supported, improved renaming of actions, textboxes have been set to proper sizes</li> </ul>"},{"location":"news.html#18-march-2024","title":"18 March 2024","text":"<ul> <li>New Feature: DNSHooks, which will automatically show all DNS requests to your unique DNS name, and all its subdomains. It can be used to send data solely via DNS, or as a canary token. More info here</li> </ul>"},{"location":"news.html#13-march-2024","title":"13 March 2024","text":"<ul> <li>HTTP headers with underscores are no longer ignored. However, underscores are converted to dashes due to a technical limitation.</li> <li>When a search query is set, Webhook.site will now only show incoming requests and emails that match the search query. </li> <li>Search queries are now stored in the browser's local storage, so it will be saved even after closing the browser.</li> </ul>"},{"location":"news.html#1-march-2024","title":"1 March 2024","text":"<ul> <li>Fixed a bug where the <code>$request.query$</code> Base Variable not being generated.</li> </ul>"},{"location":"news.html#29-feburary-2024","title":"29 Feburary 2024","text":"<ul> <li>Webhook.site now automatically decompresses <code>gzip</code> encoded request bodies.</li> </ul>"},{"location":"news.html#26-feburary-2024","title":"26 Feburary 2024","text":"<ul> <li>New features for \"Set Variable\" action: The Set Variable action can now generate random strings, date strings and timestamps. More info here</li> </ul>"},{"location":"news.html#20-feburary-2024","title":"20 Feburary 2024","text":"<ul> <li>New Feature: Templates, which are created out of existing Custom Actions, and can be reused via the Import Template Custom Action. More info here Template API</li> <li>Webhook.site CLI: Better logging and can now be used for free users without API key.</li> </ul>"},{"location":"news.html#7-feburary-2024","title":"7 Feburary 2024","text":"<ul> <li><code>faker</code> library added to the JavaScript Custom Action. More info here</li> </ul>"},{"location":"news.html#6-feburary-2024","title":"6 Feburary 2024","text":"<ul> <li>Tokens now support timeouts up to 30 seconds, from 10 before, which allows more flexibility when testing application timeouts. </li> <li>Tokens with timeouts are now have a dynamic rate limit. More info here</li> <li>Updates to our Terms of Service and Privacy Policy. Summary:<ul> <li>Adding language specifically prohibiting submitting illegal content to Webhook.site</li> <li>Fair Use policy has been updated to a \"requests per minute\" metric (from 10000 requests per day), and a guideline for 100 Tokens created per day when the \"expiry\" option is used</li> <li>Added language about intellectual property rights, disclaimer of warranties, limitation of liability, indemnification, modification of terms, termination and governing law and jurisdiction.</li> </ul> </li> </ul>"},{"location":"news.html#29-january-2024","title":"29 January 2024","text":"<ul> <li>Split Text action now supports repeating. More info here</li> <li>Split Text action now recognizes the string <code>\\n</code> as a newline, allowing splitting strings by line.</li> </ul>"},{"location":"news.html#15-january-2024","title":"15 January 2024","text":"<ul> <li>Dynamic Request Limits: Webhook.site URLs/Tokens can now have custom request limits, from 1 to 10000, which is great when you're concerned about the data stored on Webhook.site. With this, you can limit the request history to the amount you choose.</li> </ul>"},{"location":"news.html#11-january-2024","title":"11 January 2024","text":"<ul> <li>New <code>$request.path$</code> (contains any subpath after the Webhook.site URL ID) and <code>$request.query$</code> (contains the query string) variables added. More info here</li> <li>Don't Save, Rate Limit and Modify Response actions can no longer be marked as Queued.</li> </ul>"},{"location":"news.html#10-january-2024","title":"10 January 2024","text":"<ul> <li>Requests API: It's now possible to delete a subset of requests using the <code>date_from</code>, <code>date_to</code>, and <code>query</code> parameters. More info here.</li> </ul>"},{"location":"news.html#9-january-2024","title":"9 January 2024","text":"<ul> <li>HTTP Request action: Fixed an issue where headers wouldn't be forwarded when using the <code>Forward</code> mode.</li> </ul>"},{"location":"news.html#3-january-2024","title":"3 January 2024","text":"<ul> <li>Happy New Year :-)</li> <li>Webhook.site now supports 2-factor authentication via TOTP. To enable, go to Control Panel -&gt; User Profile.</li> </ul>"},{"location":"news.html#27-december-2023","title":"27 December 2023","text":"<ul> <li>New WebhookScript function: <code>http()</code>, which replaces the <code>request()</code> function and allows for more flexibility as well as sending e.g. form/multipart requests as the new HTTP Request Custom Action also allows. More info here</li> </ul>"},{"location":"news.html#22-december-2023","title":"22 December 2023","text":"<ul> <li>The new Custom Action HTTP Request has replaced Send Request, which has several benefits:<ul> <li>HTTP Request has different modes: text, multipart, etc., which lets you build more forms of HTTP requests that couldn't be done using Send Request.</li> <li>The Forward mode is now able to forward Multipart requests.</li> <li>Both the request and response are now saved so you can see exactly what was sent to the URL in HTTP Request.</li> <li>The HTTP Request has a handy Format JSON button.</li> </ul> </li> <li>It is still possible to make changes to existing Send Request actions, but it is no longer possible to create new Send Request actions.</li> </ul>"},{"location":"news.html#7-december-2023","title":"7 December 2023","text":"<ul> <li>Image files are now previewed in the file list, e.g. for email attachments</li> <li>Binary requests with content-types including <code>image/*</code>, <code>video/*</code> and <code>application/pdf</code> are now shown as linked files in the file list, not binary data.</li> </ul>"},{"location":"news.html#6-december-2023","title":"6 December 2023","text":"<ul> <li>Token (URL) expiry is now configurable with an amount of seconds. More info here</li> </ul>"},{"location":"news.html#28-november-2023","title":"28 November 2023","text":"<ul> <li>New Custom Action: JavaScript. It is now possible to run JavaScript/Node.js code in your Custom Actions. This action is marked as beta as some limitations apply. More info and examples here</li> </ul>"},{"location":"news.html#7-november-2023","title":"7 November 2023","text":"<ul> <li>New Custom Actions: Microsoft Excel. Webhook.site now allows using your Microsoft account to append and retrieve data from Excel worksheets in your OneDrive account.</li> <li>New Custom Actions: Microsoft OneDrive. With Webhook.site, you can now use your Microsoft account to upload and download files in your OneDrive account.</li> <li>It's now possible to test IPv6-only traffic using the <code>ipv6.webhook.site</code> hostname. More info here</li> </ul>"},{"location":"news.html#31-october-2023","title":"31 October 2023","text":"<ul> <li>New feature when testing actions: Test Until Here, which allows testing only the actions up until and including the currently selected action. This is useful when, for example, testing a flow that extracts data and sends an email, but you just want to test how data is extracted, and not sending the email (which is usually the last action.)</li> </ul>"},{"location":"news.html#25-october-2023","title":"25 October 2023","text":"<ul> <li>Schedules now have support for requirements which will send an error notification emails when they don't pass, making it an easy option for e.g. uptime monitoring. Currently supported requirements are \"Response body must contain\" and \"Response status code must be in range\". More info here</li> <li>Webhook.site will now highlight the last viewed URL after logging in.</li> </ul>"},{"location":"news.html#19-october-2023","title":"19 October 2023","text":"<ul> <li>Queued Custom Actions that share the same delay are now run in groups, so they can share data and variables. This makes it possible to create more advanced workflows that run in the future.</li> </ul>"},{"location":"news.html#12-october-2023","title":"12 October 2023","text":"<ul> <li>New Custom Action: Auto JSON. Automatically converts JSON data into Webhook.site Variables. More info here</li> </ul>"},{"location":"news.html#11-october-2023","title":"11 October 2023","text":"<ul> <li>Custom Actions editor modal dialog has been changed to an overlay, which allows for more space to edit actions.</li> <li>Moved Delete Action button to avoid accidentally deleting actions.</li> <li>WebhookScript editor and action output panel can now be resized.</li> </ul>"},{"location":"news.html#22-september-2023","title":"22 September 2023","text":"<ul> <li>New update for Webhook.site CLI, a tool for interacting with the Webhook.site API and allows forwarding requests from your Webhook.site URL to your local network. More info here</li> </ul>"},{"location":"news.html#21-september-2023","title":"21 September 2023","text":"<ul> <li>New Custom Action: Split Text. Takes a source, delimiter and variable name prefix and splits text into X amount of variables.</li> <li>New Custom Action: Map Text. Takes a source, an operator (like the Conditions action) and a series of mappings and sets the resulting variable name to whether one of the mappings are a match to the source text.</li> </ul>"},{"location":"news.html#15-september-2023","title":"15 September 2023","text":"<ul> <li>It's now possible to name individual Custom Actions, so you can keep track of which action does what. To change the name of an action, click the dashed name at the top of the action editor when creating or editing an action.</li> <li>The Variables dropdown shows all available variables after clicking the Test button.</li> <li>Variables section of the Custom Actions editor now allows copying each variable name.</li> </ul>"},{"location":"news.html#14-september-2023","title":"14 September 2023","text":"<ul> <li>New Custom Action: SFTP Upload</li> <li>The Run SSH Command action now supports regular password authentication in addition to standard keypair authentication.</li> </ul>"},{"location":"news.html#30-august-2023","title":"30 August 2023","text":"<ul> <li>Send Email action: It's now possible to add attachments to the email being sent. </li> <li>Send Email (SMTP) action: It's now possible to add attachments to the email being sent. </li> <li>WebhookScript: The json_encode function now allows disabling JSON formatting.</li> </ul>"},{"location":"news.html#11-august-2023","title":"11 August 2023","text":"<ul> <li>WebhookScript: New delete() function added for deleting Global Variables.</li> </ul>"},{"location":"news.html#4-august-2023","title":"4 August 2023","text":"<ul> <li>Improvements to Dark Mode.</li> </ul>"},{"location":"news.html#29-july-2023","title":"29 July 2023","text":"<ul> <li>Custom Actions: Maintenance was carried out on the underlying database system storing Custom Actions, and this may have resulted in 500 errors for around a minute starting 14:10 UTC.</li> </ul>"},{"location":"news.html#20-july-2023","title":"20 July 2023","text":"<ul> <li>New WebhookScript function: <code>multipart()</code>, for sending HTTP multipart requests. More info here.</li> <li>Webhook.site can now send browser notifications to alert you of new emails or requests.</li> <li>Added \"Mark all as read\" button.</li> </ul>"},{"location":"news.html#29-june-2023","title":"29 June 2023","text":"<ul> <li>For teams using Custom Domains, it's now possible to specify a default domain in Control Panel that will be shown anywhere the Webhook.site URL can be copied, for example.</li> </ul>"},{"location":"news.html#16-june-2023","title":"16 June 2023","text":"<ul> <li>Dark Mode has been added to the user interface for Webhook.site.</li> </ul>"},{"location":"news.html#7-june-2023","title":"7 June 2023","text":"<ul> <li>New Custom Action: Send Push Notification via ntfy.sh. Allows you to easily send push notifications to your browser, phone, watch, etc. Simply download the ntfy.sh app, subscribe to your topic name and send a message to the topic name via this Custom Action. No account required.</li> </ul>"},{"location":"news.html#22-may-2023","title":"22 May 2023","text":"<ul> <li>Webhook.site was down from approximately 10:45 to 11:30 UTC. The cause was a customer abusing the Delay Action feature which caused a buildup of data. As a result, we've had to reset the \"delayed action\" queue, meaning that any delayed actions not executed at 10:00 UTC today have been lost. Any newly created delayed actions will still be run as of 12:00 UTC. We apologize for the inconvenience.</li> </ul>"},{"location":"news.html#21-may-2023","title":"21 May 2023","text":"<ul> <li>We've carried out an upgrade of some of the underlying software powering Webhook.site. As a result, Webhook.site should generally perform faster.Beginning 10:45 UTC, there may have been instances of increased error rates. As of 12:00 UTC, these issues have been resolved. We apologize for the inconvenience. As always, if you experience issues with your Webhook.site URLs, Custom Actions, etc., please let us know at support.webhook.site.</li> </ul>"},{"location":"news.html#20-may-2023","title":"20 May 2023","text":"<ul> <li>Custom Domains now show the exact error reason in Control Panel.</li> </ul>"},{"location":"news.html#18-may-2023","title":"18 May 2023","text":"<ul> <li>Fixed an issue where the Custom Domain setup email wouldn't show the correct DNS entries.</li> </ul>"},{"location":"news.html#28-april-2023","title":"28 April 2023","text":"<ul> <li>Free URLs now accept a maximum of 500 requests in total. Deleting requests won't allow the URL to accept more requests. We encourage upgrading to Webhook.site Pro or Enterprise to avoid these limitations.</li> </ul>"},{"location":"news.html#26-april-2023","title":"26 April 2023","text":"<ul> <li>New API for Groups. More info here.</li> <li>It's now possible to use Unicode characters like emojis in user names, group names, etc.</li> <li>WebhookScript: <code>xml2array()</code> logs more helpful errors.</li> </ul>"},{"location":"news.html#16-april-2023","title":"16 April 2023","text":"<ul> <li>New WebhookScript function: <code>xml2array()</code>. More info here.</li> <li>Conditions action: It's now possible to delete individual conditions.</li> </ul>"},{"location":"news.html#21-march-2023","title":"21 March 2023","text":"<ul> <li>Repeat: Fixed a bug where only the last output of a repeated action would be shown in the action's output. </li> <li>Fixed link to Extract JSONPath examples.</li> <li>Added example for making queries using fields that contain spaces.</li> </ul>"},{"location":"news.html#14-march-2023","title":"14 March 2023","text":"<ul> <li>WebhookScript: Fixed issue where floats would be parsed as strings (and not numbers, as they're supposed to), in some instances.</li> </ul>"},{"location":"news.html#3-march-2023","title":"3 March 2023","text":"<ul> <li>New WebhookScript string functions: <code>string_random()</code>, <code>uuid()</code>. More info here.</li> </ul>"},{"location":"news.html#23-febuary-2023","title":"23 Febuary 2023","text":"<ul> <li>For WebhookScript actions, the first line of the script is now shown in the action list. It allows easily adding a title to the script by making the first line a comment.</li> </ul>"},{"location":"news.html#6-feburary-2023","title":"6 Feburary 2023","text":"<ul> <li>New WebhookScript cryptography functions: <code>sign()</code>, <code>digest()</code>, <code>verify()</code>. More info here. JWT example here.</li> <li>New WebhookScript base64 functions: <code>base64url_encode()</code>, <code>base64url_decode()</code>. More info here.</li> </ul>"},{"location":"news.html#1-feburary-2023","title":"1 Feburary 2023","text":"<ul> <li>New Custom Action: Send Email (SMTP) - send an email using your own email provider.</li> </ul>"},{"location":"news.html#20-january-2023","title":"20 January 2023","text":"<ul> <li>XPath: Improvements to the XPath action have been made so that it's now able to parse both XML and HTML-style documents.</li> <li>WebhookScript: Fixed a bug in the set_response() function where it wasn't possible to set the response headers.</li> <li>WebhookScript: Fixed a bug where internal errors would be returned when using array functions on arrays containing specific strings.</li> <li>CSV Export: When exporting to CSV, the search query is now used so you get the same items in the CSV as you see in the request list.</li> <li>WebhookScript: Added <code>array_splice</code> and <code>array_range</code> functions. More info here</li> </ul>"},{"location":"news.html#14-december-2022","title":"14 December 2022","text":"<ul> <li>Fixed a bug where Extract XPath and WebhookScript <code>xpath</code> functions would not match correctly in all cases.</li> </ul>"},{"location":"news.html#30-november-2022","title":"30 November 2022","text":"<ul> <li>WebhookScript: stop() function now stops entire Custom Action flow and returns respond rather than simply exiting the current script.</li> </ul>"},{"location":"news.html#28-november-2022","title":"28 November 2022","text":"<ul> <li>Discord: Added an Embed URL action to Discord Custom Action for attaching videos, images, articles, etc.  to a chat message.</li> </ul>"},{"location":"news.html#10-november-2022","title":"10 November 2022","text":"<ul> <li>Schedules: Control Panel now shows Schedule IDs.</li> <li>Removed \"Amount of requests to keep for Auto Cleanup\" (configuring this didn't actually do anything.) As an alternative, you could use the Don't Save Custom Action.</li> <li>Send Request: Header Names are replaced with Variables.</li> <li>Global Variables: It's now possible to search for Global Variables.</li> </ul>"},{"location":"news.html#6-november-2022","title":"6 November 2022","text":"<ul> <li>Schedules/API: It's now possible to fetch Schedule Logs. More info here</li> <li>Schedules: Added \"Run Now\" button to all Schedules.</li> </ul>"},{"location":"news.html#31-october-2022","title":"31 October 2022","text":"<ul> <li>Control Panel: Category selector dropdown now sorted by name.</li> </ul>"},{"location":"news.html#26-october-2022","title":"26 October 2022","text":"<ul> <li>Improvements to Schedules</li> <li>Ability to rename Groups</li> <li>Group selection is now automatically remembered</li> </ul>"},{"location":"news.html#30-september-2022","title":"30 September 2022","text":"<ul> <li>New WebhookScript function: <code>is_empty()</code> More info here</li> <li>New WebhookScript function: <code>is_null()</code> - handy for checking if a value is null without type checking issues. More info here</li> </ul>"},{"location":"news.html#21-september-2022","title":"21 September 2022","text":"<ul> <li>API: It's now possible to sort tokens returned by the Get Tokens endpoint. More info here: More info here</li> </ul>"},{"location":"news.html#8-september-2022","title":"8 September 2022","text":"<ul> <li>Fixed a bug in Webhook.site CLI (\"TypeError: Echo is not a constructor\" error.) - please upgrade the NPM package to 0.1.5.</li> <li>Please do not use async-http-client (User-Agent AHC/2.1.) It is abandoned and contains bugs that creates too many HTTP requests. We may block users of this package in the future. </li> </ul>"},{"location":"news.html#17-august-2022","title":"17 August 2022","text":"<ul> <li>As a result of customer abuse, we have decided to introduce rate limits on creation of URLs. The rate limit will be initially set to 10 per minute. After reaching this limit, the POST /token endpoint will return a <code>429 Too Many Requests</code> response.</li> </ul>"},{"location":"news.html#28-june-2022","title":"28 June 2022","text":"<ul> <li>New Custom Action Type: Send push messages with Pushed.co. More info here.</li> </ul>"},{"location":"news.html#24-june-2022","title":"24 June 2022","text":"<ul> <li>New WebhookScript function: preg_match() - allows matching regex with custom regex options More info here</li> <li>New WebhookScript function: html_to_text() - converts html to text. A more aggressive version of html_strip_tags() More info here</li> <li>WebhookScript: regex_extract_first() now has a default parameter that is returned when there's no matches. The function still returns <code>false</code> by default when this third parameter is not set. More info here</li> </ul>"},{"location":"news.html#21-may-2022","title":"21 May 2022","text":"<ul> <li>New Custom Actions feature: It is now possible to delay queued actions by a specified amount of seconds. More info here</li> </ul>"},{"location":"news.html#20-may-2022","title":"20 May 2022","text":"<ul> <li>New WebhookScript function: is_numeric(). More info here</li> <li>Rate Limit Custom Action: It is now possible to specify a key to let you rate limit on a custom parameter. The request IP address (<code>$request.ip$</code>) is still the default key.</li> <li>Action and Schedule error reports now specify the name, ID or alias of the Schedule or URL in question.</li> <li>Fixed a bug with Webhook.site Enterprise Custom Domain email validation.</li> </ul>"},{"location":"news.html#19-april-2022","title":"19 April 2022","text":"<ul> <li>Fixed a bug that prevented action error notifications from being sent to the users.</li> </ul>"},{"location":"news.html#14-april-2022","title":"14 April 2022","text":"<ul> <li>It is now possible to search requests and emails, using either the frontend or the API. The data can be filtered by a wide range of fields, queries. More info here.</li> </ul>"},{"location":"news.html#30-march-2022","title":"30 March 2022","text":"<ul> <li>Added documentation for the Test Action endpoint.</li> </ul>"},{"location":"news.html#20-march-2022","title":"20 March 2022","text":"<ul> <li>New Variables for Files: <code>$request.file.[name].id$</code> and <code>$request.file.[name].link$</code> (which returns direct link to download the file.)</li> </ul>"},{"location":"news.html#14-march-2022","title":"14 March 2022","text":"<ul> <li>Added <code>num2hex</code>, <code>hex2num</code> and <code>hex2bin</code> functions.</li> </ul>"},{"location":"news.html#19-january-2022","title":"19 January 2022","text":"<ul> <li>New Custom Actions: RabbitMQ Get &amp; Publish, allows consuming and publishing to RabbitMQ Queues via Webhook.site Custom Actions.</li> </ul>"},{"location":"news.html#21-december-2021","title":"21 December 2021","text":"<ul> <li>Improved handling of binary data received from Send Request actions. </li> <li>Added a <code>group_id</code> parameter when creating or updating Tokens.</li> <li>Fixed an issue with the Twitter Custom Action.</li> <li>Requests to <code>/token/:tokenId/requests</code> are now throttled at 60 requests/minute.</li> </ul>"},{"location":"news.html#24-november-2021","title":"24 November 2021","text":"<ul> <li>WebhookScript: Fixed an issue that would cause strings to be interpreted as integers when encoding JSON.</li> </ul>"},{"location":"news.html#30-october-2021","title":"30 October 2021","text":"<ul> <li>Webhook.site's requests to itself, e.g. via Send Request action or Schedules by Webhook.site, now shows more clearly as coming from Webhook.site in the request list. Outgoing requests are now sent with a User-Agent header of <code>Webhook.site/1.0</code>, which can be overwrited if specifying a User-Agent header manually.</li> <li>Error deleting Global Variables fixed.</li> <li>It is now possible for Webhook.site Enterprise customers to manage their Custom Domains from the control panel.</li> </ul>"},{"location":"news.html#15-october-2021","title":"15 October 2021","text":"<ul> <li>Fix invalid charset configurations causing issues saving requests.</li> </ul>"},{"location":"news.html#4-october-2021","title":"4 October 2021","text":"<ul> <li>Webhook.site now supports multiple sub-users on an account, with different access permissions, available to Webhook.site Enterprise users. For more information, please contact us.</li> </ul>"},{"location":"news.html#29-september-2021","title":"29 September 2021","text":"<ul> <li>Webhook.site CLI: New minor version, fixes a bug causing <code>Invalid namespace</code> errors.</li> </ul>"},{"location":"news.html#17-september-2021","title":"17 September 2021","text":"<ul> <li>New Custom Action Variable Modifiers: <code>.html_decode</code>, <code>.url_encode</code>, and <code>.url_decode</code>. More info here</li> </ul>"},{"location":"news.html#12-september-2021","title":"12 September 2021","text":"<ul> <li>New WebhookScript function: array_merge(), that merges two arrays into one. More info here</li> <li>New WebhookScript function: array_chunk(), that splits an array into chunks. More info here</li> <li>Functions dd(), dump() and echo() can now take a variable amount of arguments. More info here</li> <li>New WebhookScript date function: now(), which returns the current date in ISO format. More info here</li> <li>The date_interval() and date_interval_human() functions now defaults to \"now\" if the second parameter isn't specified.</li> <li>Script editor now has more space for outputs in full screen mode.</li> </ul>"},{"location":"news.html#18-august-2021","title":"18 August 2021","text":"<ul> <li>New API Endpoint: Get tokens, which returns a list of all tokens belonging to the account. More info here</li> <li>Fixed a bug that caused logins to be slow on especially older accounts.</li> <li>Fixed a bug that caused the FTP Upload action to error when the Port field was missing.</li> </ul>"},{"location":"news.html#12-august-2021","title":"12 August 2021","text":"<ul> <li>Google Sheet actions that consistently cause errors are now disabled automatically. Users are sent an email when this occurs.</li> </ul>"},{"location":"news.html#30-july-2021","title":"30 July 2021","text":"<ul> <li>New WebhookScript function: hmac(), which allows easily verifying strings using the HMAC method.  More info here</li> </ul>"},{"location":"news.html#14-july-2021","title":"14 July 2021","text":"<ul> <li>New Custom Action: Replace Text, which allows easily making text replacements from variable input, and either overwrites an existing variable or creates a new one with the replaced content.</li> </ul>"},{"location":"news.html#4-july-2021","title":"4 July 2021","text":"<ul> <li>Fixed bug causing the \"Use Request Content\" checkbox in the Send Email action to not work.</li> </ul>"},{"location":"news.html#15-june-2021","title":"15 June 2021","text":"<ul> <li>New Custom Action: Twitter, so you can easily send tweets using Webhook.site.</li> <li>New WebhookScript functions: convert_kana(), string_slice(), string_upper(), string_lower(), string_title() More info here.</li> </ul>"},{"location":"news.html#10-june-2021","title":"10 June 2021","text":"<ul> <li>Individual Custom Actions can now be set as queued, which causes them to be run in the background, or asynchronously. More info here</li> </ul>"},{"location":"news.html#7-june-2021","title":"7 June 2021","text":"<ul> <li>Raised the limit for the amount of items processed by repeating actions to 100.</li> <li>Fixed a bug that would cause an error when updating notification settings in Control Panel.</li> <li>Fixed a bug where emails containing attachments would be stored.</li> </ul>"},{"location":"news.html#23-may-2021","title":"23 May 2021","text":"<ul> <li>API: It's now possible to filter requests by date. More info here</li> </ul>"},{"location":"news.html#13-may-2021","title":"13 May 2021","text":"<ul> <li>Documented <code>clone_from</code> option when using the API to create Tokens (URLs)</li> <li>WebhookScript: <code>json_decode</code> / <code>json_encode</code> now output error messages if they fail due to e.g. bad data.</li> </ul>"},{"location":"news.html#1-may-2021","title":"1 May 2021","text":"<ul> <li>Webhook.site Schedules now has an API. More info here</li> <li>Fixed a bug where URLs could be in two groups at the same time.</li> </ul>"},{"location":"news.html#20-april-2021","title":"20 April 2021","text":"<ul> <li>Added base64 encoding and decoding variable modifiers. More info here</li> </ul>"},{"location":"news.html#11-april-2021","title":"11 April 2021","text":"<ul> <li>New Custom Action and WebhookScript function: Don't Save, which marks the request so it is not saved in Webhook.site. The request can still be seen when it comes in, but will not be available through through the app later, or through the API. </li> <li>New Custom Action: Stop, which immediately stops Custom Action execution and returns the default response.</li> <li>The Extract Regex now supports the Repeat function. More info here.</li> </ul>"},{"location":"news.html#7-april-2021","title":"7 April 2021","text":"<ul> <li>New powerful feature: Repeating actions. Currently supported by the Extract JSONPath action, it is now possible to \"loop over\" items in a JSON array. More info here</li> </ul>"},{"location":"news.html#2-april-2021","title":"2 April 2021","text":"<ul> <li>It is now possible to enable or disable Custom Actions on a specific Token with the API. More info here or here.</li> <li>When exporting CSVs, the sorting selected in the application is now used automatically.</li> </ul>"},{"location":"news.html#28-march-2021","title":"28 March 2021","text":"<ul> <li>Today we've released the first version of the Webhook.site Command-line Interface (CLI), which allows you to forward requests from your Webhook.site URL to your local machine. More info here</li> </ul>"},{"location":"news.html#24-march-2021","title":"24 March 2021","text":"<ul> <li>WebhookScript: Added <code>array_sort</code>, <code>array_join</code> and <code>json_escape</code> functions.</li> <li>Added modifiers for variables. More info here</li> </ul>"},{"location":"news.html#23-march-2021","title":"23 March 2021","text":"<ul> <li>Control Panel: It's now possible to clone URLs, including their Custom Actions and other configuration.</li> <li>Control Panel: URLs with a password can be deleted more easily.</li> </ul>"},{"location":"news.html#13-march-2021","title":"13 March 2021","text":"<ul> <li>Control Panel: It's now possible to set a password for a Webhook.site URL in the Control Panel. Additionally, it's now possible to easily select and delete multiple URLs at once.</li> </ul>"},{"location":"news.html#11-march-2021","title":"11 March 2021","text":"<ul> <li>API: It's now possible to specify an alias when creating a URL via the API. More info here</li> </ul>"},{"location":"news.html#6-march-2021","title":"6 March 2021","text":"<ul> <li>New Action: Database Query - allows running database queries on PostgreSQL and MySQL servers, inserting, changing and fetching data in specific variables or JSON format. More info here</li> </ul>"},{"location":"news.html#3-march-2021","title":"3 March 2021","text":"<ul> <li>Webhook.site Premium has changed name to Webhook.site Pro. Functionality, pricing and everything else remains the same; it's a cosmetic change.</li> <li>More currencies are now supported for Webhook.site Pro subscriptions: GBP and EUR. To change the currency of an existing subscription, please contact Webhook.site Support.</li> <li>Custom Action output is now included in CSV Exports.</li> </ul>"},{"location":"news.html#17-feburary-2021","title":"17 Feburary 2021","text":"<ul> <li>New Action: FTP(S) Upload - allows easy file upload to FTP servers.</li> </ul>"},{"location":"news.html#5-feburary-2021","title":"5 Feburary 2021","text":"<ul> <li>New WebhookScript functions: html_strip_tags, html_decode, html_encode, markdown_to_html. For more information, see here.</li> </ul>"},{"location":"news.html#1-feburary-2021","title":"1 Feburary 2021","text":"<ul> <li>Webhook.site has had intermittent downtime today due abuse from a user. We've identified them and blocked them from our systems. We're very sorry for the inconvenience.</li> </ul>"},{"location":"news.html#31-january-2021","title":"31 January 2021","text":"<ul> <li>We have discontinued support for subscriptions via Patreon, who will need to create a new subscription. For more information please contact support.</li> </ul>"},{"location":"news.html#19-january-2021","title":"19 January 2021","text":"<ul> <li>Happy new year!</li> <li>New Action Type: Conditions 2.0. Now supports adding multiple conditions in a single action.</li> <li>New Action Type: Set Variable. Working similarly to the Store Global Variable action, this action sets a runtime variable that is not persisted.</li> <li>Actions can now individually be executed depending on a previous set of conditions.</li> <li>The Debug Output section in the Custom Actions builder now shows the action number and type from where it came.</li> <li>The Modify Response action now supports returning the response immediately.</li> </ul>"},{"location":"news.html#5-december-2020","title":"5 December 2020","text":"<ul> <li>Added new Custom Action: Store Global Variable, which does what it says on the tin.</li> <li>Bug fix: In Control Panel, the update date for each Global Variable now actually updates when a Global Variable is updated.</li> </ul>"},{"location":"news.html#26-november-2020","title":"26 November 2020","text":"<ul> <li>Webhook.site had downtime during the night. The problem has been fixed.</li> </ul>"},{"location":"news.html#25-november-2020","title":"25 November 2020","text":"<ul> <li>WebhookScript: It's now possible to store non-string values in set(). If the value is an array, however, it is JSON encoded first.</li> <li>WebhookScript: Added more examples for the date functions.</li> </ul>"},{"location":"news.html#1-november-2020","title":"1 November 2020","text":"<ul> <li>Added new Custom Action: Rate Limit, which lets you specify the maximum amount of requests in a given duration per IP to allow to request the Webhook.URL.</li> <li>Dates shown in the application now include seconds.</li> </ul>"},{"location":"news.html#29-october-2020","title":"29 October 2020","text":"<ul> <li>Added new Custom Action: Run SSH Command, which allows you to run SSH commands on your server.</li> </ul>"},{"location":"news.html#22-october-2020","title":"22 October 2020","text":"<ul> <li>WebhookScript: Added <code>array_keys</code> and <code>array_values</code> functions. For more information, see here.</li> </ul>"},{"location":"news.html#19-october-2020","title":"19 October 2020","text":"<ul> <li>It's now possible to set a timeout for the Send Request action. A new <code>timeout</code> parameter can also be given to the <code>request()</code> function in WebhookScript. Both places accept a value in seconds, with decimals.</li> <li>When exporting Custom Actions, if the URL has an alias, this is now used for the resulting filename.</li> </ul>"},{"location":"news.html#11-october-2020","title":"11 October 2020","text":"<ul> <li>It's now possible to export and import Custom Actions to a file using the new Import/Export buttons in the Custom Actions builder.</li> </ul>"},{"location":"news.html#7-october-2020","title":"7 October 2020","text":"<ul> <li>Added documentation for managing Custom Actions via the API. For more information, see here.</li> <li>Fixed a bug causing the Operator of an action to be reset to \"is equal to\" when testing.</li> </ul>"},{"location":"news.html#6-october-2020","title":"6 October 2020","text":"<ul> <li>Action output is no longer displayed twice when testing Condition actions.</li> </ul>"},{"location":"news.html#24-september-2020","title":"24 September 2020","text":"<ul> <li>New feature: Customize Auto-Cleanup threshold. This lets you specify how many requests or emails to keep for your URLs, if you want to keep fewer than the default amount of 10.000 for e.g. data protection reasons. Available from the brand new Settings page in Control Panel. The setting applies to all URLs that have the Auto Cleanup feature enabled - click Edit on a URL to enable it.</li> <li>New feature: URL groups, which lets you categorize your URLs into groups. Available from the URLs page in Control Panel. Click Edit on a URL to change its group.</li> <li>The URLs page in Control Panel has a new design which is less cluttered and allows you to more quickly change certain settings, URL aliases, and the description of a URL.</li> </ul>"},{"location":"news.html#23-september-2020","title":"23 September 2020","text":"<ul> <li>Regrettably, we saw a long period of downtime again from approx 20:00 to 05.40 UTC. The cause of the downtime was a user flooding their Webhook.site URLs with many gigabytes of data, causing the system to be overloaded. The same user was responsible for the downtime at 15 September 2020 and we've now terminated their license to use Webhook.site. We are also going prioritize changes that will automatically limit this kind of abuse, as well as move to another database system that will be more resilient.</li> </ul>"},{"location":"news.html#15-september-2020","title":"15 September 2020","text":"<ul> <li>We've seen spurious instances of downtime in the last 24 hours, the longest one lasting from approx. 14:00 to 14:50 UTC. We apologize for the inconvenience.</li> </ul>"},{"location":"news.html#13-september-2020","title":"13 September 2020","text":"<ul> <li>WebhookScript: Added <code>override</code> parameter to request(), which prevents content from the source request from being included.</li> </ul>"},{"location":"news.html#3-september-2020","title":"3 September 2020","text":"<ul> <li>WebhookScript: It is now possible to set a default for the <code>var()</code> function.</li> </ul>"},{"location":"news.html#29-august-2020","title":"29 August 2020","text":"<ul> <li>A bug in the Extract JSONPath action has been fixed so that it is now also possible to filter for keys containing punctuation, e.g. <code>.data[?(@.Employee.FirstName)]</code>.</li> </ul>"},{"location":"news.html#18-august-2020","title":"18 August 2020","text":"<ul> <li>WebhookScript: The <code>to_date</code> and <code>date_format</code> functions have been improved with timezone handling capabilities.</li> </ul>"},{"location":"news.html#15-august-2020","title":"15 August 2020","text":"<ul> <li>It's now possible to set a custom timeout for Schedules, up to 30 seconds.</li> </ul>"},{"location":"news.html#8-august-2020","title":"8 August 2020","text":"<ul> <li>You can now specify a custom Cron expression for your Webhook.site Schedule, in addition to the predefined intervals. This lets you decide exactly the hour, day and minute, etc., of when the schedule runs (based on UTC time.)</li> <li>It's now possible to enable email notifications for whenever a Schedule run fails to execute. To enable this, simply check the checkbox in Notification Settings..</li> </ul>"},{"location":"news.html#7-august-2020","title":"7 August 2020","text":"<ul> <li>It's now possible to change the name of your Provider accounts to e.g. something that's easier to remember.</li> </ul>"},{"location":"news.html#5-august-2020","title":"5 August 2020","text":"<ul> <li>Webhook.site had an unplanned outage starting at 03.30 UTC. The site was down for around an hour.</li> </ul>"},{"location":"news.html#2-august-2020","title":"2 August 2020","text":"<ul> <li>It is now possible to specify a default value in the Extract JSONPath, Extract Regex and Extract XPath actions, so that if the extraction could not find the item, the variable is set to the default value that is defined. This field also takes variables.</li> <li>Request list is now sorted by Newest First per default.</li> <li>Custom Action number and type is now shown next to the output in the request details. If the Action was deleted, the UUID is shown instead.</li> </ul>"},{"location":"news.html#1-august-2020","title":"1 August 2020","text":"<ul> <li>It is now possible to enable email notifications for whenever a Custom Action encountered an error. To enable this, simply check the checkbox in Notification Settings..</li> </ul>"},{"location":"news.html#29-july-2020","title":"29 July 2020","text":"<ul> <li>New WebhookScript function: <code>trim(string)</code>, which removes space, newline and tab characters from the beginning and end of a string, similar to PHP's own trim() function.</li> <li>New Schedule intervals: weekly (every monday), monthly (every 1st day of month)</li> </ul>"},{"location":"news.html#25-july-2020","title":"25 July 2020","text":"<ul> <li>New WebhookScript function: <code>action(action_type, parameters)</code>, to run Custom Actions inside a WebhookScript. More info here.</li> <li>It's now possible to download email attachments or uploaded files directly from the Webhook.site app.</li> <li>When sending a request using either the Send Request Custom Action or the request() function, the response is now truncated if the response content is over 20KiB. This means the whole contents is not visible in the app, but is still available to Actions.</li> </ul>"},{"location":"news.html#16-july-2020","title":"16 July 2020","text":"<ul> <li>Better file handling for emails: attached files are now also extracted as variables</li> <li>New file management functions for WebhookScript: <code>files()</code> retrieves a an array of all files, <code>file_content(fileId)</code> returns the content of a specific file. More info here.</li> </ul>"},{"location":"news.html#5-july-2020","title":"5 July 2020","text":"<ul> <li>New \"Resize Image\" action added for resizing images from either a file upload, email attachment or other Action. </li> <li>Better handling of downloaded files: the contents won't be shown in the debug overlay to prevent very large files from crashing the browser.</li> <li>Fixed a bug in the Dropbox provider returning creating an empty variable when downloading large files.</li> </ul>"},{"location":"news.html#3-july-2020","title":"3 July 2020","text":"<ul> <li>Webhook.site was down for about 30 minutes starting 07:20 UTC due to a memory upgrade.</li> <li>Max request size has been increased to 10 MB from 2 MB.</li> </ul>"},{"location":"news.html#23-june-2020","title":"23 June 2020","text":"<ul> <li>Added new Dropbox Custom Actions: Create Folder, Download, Upload, Delete, Get Link. </li> </ul>"},{"location":"news.html#14-june-2020","title":"14 June 2020","text":"<ul> <li>WebhookScript editor syntax highlighting improved with regards to multiline strings, escape characters and more</li> <li>New WebhookScript editor keyboard shortcut for saving (Mac: Cmd-S, Windows: Ctrl-S.)</li> <li>Fix WebhookScript fullscreen mode not being disengaged when saving</li> <li>URLs can now accept file uploads via multipart. File contents are available via variables: <code>request.file.&lt;formname&gt;.content</code>, <code>request.file.&lt;formname&gt;.size</code>, <code>request.file.&lt;formname&gt;.filename</code></li> <li>New WebhookScript function: <code>csv_to_array()</code>, which converts a CSV file from a string to an array that can easily be parsed.</li> <li>Added an example script demoing file uploads and CSV parsing</li> </ul>"},{"location":"news.html#7-june-2020","title":"7 June 2020","text":"<ul> <li>Added new Slack Send Message Custom Action, which lets you send Slack messages via a Slack Webhook URL.</li> </ul>"},{"location":"news.html#5-june-2020","title":"5 June 2020","text":"<ul> <li>Added \"Formula Mode\" checkbox for Add and Update Row Google Sheets actions, which parses values like entered in a cell, and allows inserting formulas.</li> </ul>"},{"location":"news.html#4-june-2020","title":"4 June 2020","text":"<ul> <li>Added new endpoints to fetch the content and information about the latest request on a URL. See here and here.</li> </ul>"},{"location":"news.html#2-june-2020","title":"2 June 2020","text":"<ul> <li>Added Amazon Web Services CloudFront Cache Invalidation Custom Action.</li> <li>Added ability to toggle Auto Cleanup, which automatically cleans up requests/emails.</li> </ul>"},{"location":"news.html#30-may-2020","title":"30 May 2020","text":"<ul> <li>Added Discord Custom Action for sending messages. Read more in the docs</li> </ul>"},{"location":"news.html#29-may-2020","title":"29 May 2020","text":"<ul> <li>New set of date functions added to WebhookScript, namely: <code>to_date()</code>, <code>date_format()</code>, <code>date_to_array()</code>, <code>date_interval()</code>, <code>date_interval_human()</code>. Read more in the docs</li> </ul>"},{"location":"news.html#25-may-2020","title":"25 May 2020","text":"<ul> <li>New set of Amazon Web Services S3 actions: Create Bucket, Put Object, Delete Object and Get Object (which retrieves object contents to a Variable.)</li> </ul>"},{"location":"news.html#22-may-2020","title":"22 May 2020","text":"<ul> <li>New Schedule intervals: every 1 minute and every 10 minutes, in addition to the already existing ones.</li> </ul>"},{"location":"news.html#17-may-2020","title":"17 May 2020","text":"<ul> <li>New WebhookScript function: <code>delay()</code>, which lets you delay and execute WebhookScript code a set amount of seconds in the future.</li> <li>New WebhookScript function: <code>exec()</code>, which lets you dynamically execute code in a string.</li> <li>New WebhookScript function: <code>import()</code>, which downloads and executes code from a URL - great if you want to reuse your code, just put it on Github and import it with the URL!</li> </ul>"},{"location":"news.html#16-may-2020","title":"16 May 2020","text":"<ul> <li>It's now possible to set a Token (URL or email address) to expire automatically, even for Premium users. This is useful for creating tokens for automated testing.</li> </ul>"},{"location":"news.html#3-may-2020","title":"3 May 2020","text":"<ul> <li>New Google Sheets Custom Actions (Beta). 3 initial actions are available: Append Row, Update Row and Get Values, which allow you to manipulate or retrieve the values of a Google Sheet without writing any code.</li> </ul>"},{"location":"news.html#24-april-2020","title":"24 April 2020","text":"<ul> <li>New fullscreen mode in WebhookScript editor</li> <li>Ability to edit your user profile</li> <li>New WebhookScript functions: <code>base64_encode()</code>, <code>base64_decode()</code>.</li> </ul>"},{"location":"news.html#21-april-2020","title":"21 April 2020","text":"<ul> <li>New WebhookScript function: store() - creates or updates an existing Global Variable</li> </ul>"},{"location":"news.html#20-april-2020","title":"20 April 2020","text":"<ul> <li>New Global Variables section in Control Panel.</li> </ul>"},{"location":"news.html#19-april-2020","title":"19 April 2020","text":"<ul> <li>New WebhookScript math functions: max(), min(), mod(), pi(), rand() - for more, see the Reference</li> </ul>"},{"location":"news.html#28-march-2020","title":"28 March 2020","text":"<ul> <li>New feature: Webhook.site Schedules lets you request any URL \u2013 including Webhook.site URLs \u2013 automatically on an interval, so you can for example run Custom Actions every 5 minutes, or make a health check for your Web site.</li> <li>Send Request action request timeout has been raised from 5 to 10 seconds. Applies to both the Custom Action and the WebhookScript request() function.</li> </ul>"},{"location":"news.html#24-march-2020","title":"24 March 2020","text":"<ul> <li>New feature: API Keys can now be created so you can use the API with URLs that have the \"Require Authentication\" or \"Password\" options set.</li> <li>Fix: It's now possible to test Send Email actions before creating them. Prior to this, the Test button would not do anything for the Send Email action.</li> </ul>"},{"location":"news.html#6-march-2020","title":"6 March 2020","text":"<ul> <li>New feature: Extract XPath Custom Action with accompanying xpath() WebhookScript function. Read more.</li> </ul>"},{"location":"news.html#29-feburary-2020","title":"29 Feburary 2020","text":"<ul> <li>Values are no longer required for Condition actions, so it's possible to compare an empty string or missing value.</li> <li>Fixed an issue where a tooltip in the Custom Actions modal would not disappear.</li> <li>Removed Beta label from WebhookScript.</li> </ul>"},{"location":"news.html#27-feburary-2020","title":"27 Feburary 2020","text":"<ul> <li>Fixed a bug where slashes at the end of Webhook.site Single Page App URLs didn't work.</li> <li>Fixed a bug where Copy To CURL sometimes wouldn't return a valid CURL command.</li> </ul>"},{"location":"news.html#26-feburary-2020","title":"26 Feburary 2020","text":"<ul> <li>It's no longer a requirement to specify a variable for the Send Request action.</li> </ul>"},{"location":"news.html#25-feburary-2020","title":"25 Feburary 2020","text":"<ul> <li>New feature: It's now possible to receive emails, which are treated like Webhooks \u2013 so you can automate emails with Custom Actions on Webhook.site. You can also test email deliverability using DKIM, DMARC and SPF validation.</li> <li>JSON formatting is now always enabled per default.</li> <li>The requests view is cleared after deleting the last request, and the tutorial text is shown.</li> </ul>"},{"location":"news.html#16-feburary-2020","title":"16 Feburary 2020","text":"<ul> <li>WebhookScript: Added <code>regex_extract</code> and <code>regex_extract_first</code> functions.</li> </ul>"},{"location":"news.html#15-feburary-2020","title":"15 Feburary 2020","text":"<ul> <li>WebhookScript: Added <code>hash</code> function.</li> </ul>"},{"location":"news.html#14-feburary-2020","title":"14 Feburary 2020","text":"<ul> <li>New feature: Export to CSV lets you export all requests on a given URL to a CSV file.</li> <li>Fixed a bug where duplicate in-app notifications would appear on new requests.</li> </ul>"},{"location":"news.html#12-feburary-2020","title":"12 Feburary 2020","text":"<ul> <li>WebhookScript: Added <code>url_encode</code>, <code>url_decode</code>, and <code>query</code> functions.</li> </ul>"},{"location":"news.html#8-febuary-2020","title":"8 Febuary 2020","text":"<ul> <li>New Custom Action type: Condition, which lets you conditionally stop a set of actions based on comparisons.</li> </ul>"},{"location":"news.html#28-january-2020","title":"28 January 2020","text":"<ul> <li>WebhookScript now supports newline literals (<code>\\\\n</code>) in strings, escaped by 2 backslashes.</li> </ul>"},{"location":"news.html#25-january-2020","title":"25 January 2020","text":"<ul> <li> <p>Global Variables are now available in the Control Panel, which lets you keep configuration like API keys in a separate place from your Custom Actions and scripts while managing them at a central place.</p> </li> <li> <p>Changed the font of the WebhookScript editor, which resulted in uneven selection of text.</p> </li> </ul>"},{"location":"news.html#23-january-2020","title":"23 January 2020","text":"<ul> <li>You can now specify a source variable for JSONPath and Regex actions, so you can extract text from not only the request content.</li> </ul>"},{"location":"news.html#12-january-2020","title":"12 January 2020","text":"<ul> <li>Switched to using Ace as editor for WebhookScript.</li> </ul>"},{"location":"open-source.html","title":"Install","text":""},{"location":"open-source.html#webhooksite-open-source","title":"Webhook.site Open Source","text":""},{"location":"open-source.html#about-the-open-source-version","title":"About the Open Source version","text":"<p>There are two separate editions of Webhook.site: </p> <ul> <li> <p>The code for the completely open-source, MIT-licensed version described on this page is available on https://github.com/webhooksite/webhook.site, and can be self-hosted using e.g. Docker, is great for testing Webhooks, but doesn't include Webhook.site Pro features like Custom Actions.</p> </li> <li> <p>The cloud version of Webhook.site at https://webhook.site which has more features, some of them requiring a paid subscription.</p> </li> </ul> <p>You can choose to run the Open Source version of Webhook.site either via Docker, or install it on any Web server with PHP7 support. </p>"},{"location":"open-source.html#realtime-updates","title":"Realtime updates","text":"<p>laravel-echo-server or Pusher can be used to enable realtime updates. Take a look at the <code>.env.example</code> to see the environment variables required to configure it.</p> <p>For <code>laravel-echo-server</code>, the app expects socket.io to be available at the <code>/socket.io</code> path relative to the index page. This can be done with nginx like so:</p> <pre><code>    location /socket.io {\n        proxy_pass http://127.0.0.1:6001;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n    }\n</code></pre>"},{"location":"open-source.html#installation","title":"Installation","text":""},{"location":"open-source.html#docker-recommended","title":"Docker (Recommended)","text":"<p>The provided Docker Compose file sets up a complete environment that runs the Webhook.site image and all dependencies (Redis, Laravel Echo Server, etc.). Note that if running this in production, you should probably run a Redis server that persists data to disk. The Docker image is also not tuned for large amounts of traffic.</p>"},{"location":"open-source.html#installation-guide","title":"Installation Guide","text":"<ol> <li>Run <code>docker-compose up</code></li> <li>The app will be available on http://127.0.0.1:8084.</li> </ol>"},{"location":"open-source.html#kubernetes","title":"Kubernetes","text":"<p>A set of Helm configuration files can be found in the <code>helm</code> subfolder. </p>"},{"location":"open-source.html#web-server","title":"Web Server","text":""},{"location":"open-source.html#requirements","title":"Requirements","text":"<ul> <li>PHP 7</li> <li>Redis</li> <li>Composer</li> <li>Web server \u2013 e.g. nginx, apache2</li> </ul> <p>DigitalOcean has a guide on how to configure nginx.</p>"},{"location":"open-source.html#installation-guide_1","title":"Installation Guide","text":"<ol> <li>Run the following commands:</li> <li><code>composer install</code></li> <li><code>cp .env.example .env</code> - adjust settings as needed</li> <li><code>php artisan key:generate</code></li> <li>Setup virtual host pointing to the <code>/public</code> folder. </li> </ol>"},{"location":"premium.html","title":"Premium","text":""},{"location":"premium.html#webhooksite-premium","title":"Webhook.site Premium","text":"<p>Webhook.site Pro was formerly known as Premium. For more information, see here.</p>"},{"location":"pro.html","title":"Webhook.site Pro and Enterprise","text":""},{"location":"pro.html#webhooksite-basic-pro-and-enterprise","title":"Webhook.site Basic, Pro and Enterprise","text":"<p>With Webhook.site Basic, Pro and Webhook.site Enterprise subscriptions, you get more features that allows you to do more with your URL, as well as keep the data contained private and secure.</p> Free Basic Pro Enterprise URLs n/a 1 Unlimited Unlimited Schedules n/a 1 Unlimited Unlimited Custom Actions \u274c \u2705 \u2705 \u2705 Schedules \u274c \u2705 \u2705 \u2705 Custom Addresses \u274c \u2705 \u2705 \u2705 Secure Data \u274c \u2705 \u2705 \u2705 Permanent URLs \u274c \u2705 \u2705 \u2705 CSV Export \u274c \u2705 \u2705 \u2705 Free Email Support \u274c \u2705 \u2705 \u2705 Custom Domain \u274c \u274c \u274c \u2705 Multi-User Support &amp; SAML SSO \u274c \u274c \u274c \u2705 Max Requests per URL 100 Unlimited Unlimited Unlimited Request History per URL 100 10.0002 10.0002 10.0002 URL/Email Address expiry 7 days1 Never expires Never expires Never expires Data storage duration 7 days1 365 days 365 days 365 days Pricing3 $9/month $90/year (save 20%) $18/month $180/year (save 20%) $69/month $699/year (save 20%) Subscribe Now <ol> <li>Free URLs and email addresses automatically expire and are permanently deleted after 7 days.</li> <li>Pro and Enterprise URLs accept an unlimited amount of requests or emails, but only the latest 10.000 are available. Older requests are removed periodically.</li> <li>All pricing in USD and excluding VAT. Local currency can be used at checkout.</li> </ol>"},{"location":"pro.html#pro-features","title":"Pro features","text":""},{"location":"pro.html#create-workflows-with-custom-actions","title":"Create workflows with Custom Actions","text":"<p>Extract data, send emails and HTTP requests, upload files, run scripts and much more with Custom Actions that are run on each incoming request or email, with the Webhook.site Custom Actions builder. </p> <p>Native integrations for AWS, Google Sheets, Slack, Dropbox, MySQL and others. </p> <p>Read more</p>"},{"location":"pro.html#schedules","title":"Schedules","text":"<p>Use Schedules by Webhook.site to send requests any URL or run your Custom Actions automatically on an interval. Use it for monitoring your Web site, clearing caches, and much more. Supports <code>cron</code> syntax, in addition to predefined intervals.</p> <p>Read more</p>"},{"location":"pro.html#custom-urls-and-emails","title":"Custom URLs and Emails","text":"<p>Get an address that's easy to remember:</p> <p><code>webhook.site/my-alias</code></p> <p><code>my-alias@email.webhook.site</code></p> <p>(With Webhook.site Enterprise, you can even use your own domain name.)</p>"},{"location":"pro.html#security","title":"Security","text":"<p>Your data is secured in your account, and can be accessed by API Key or login. With the free version of Webhook.site, others can freely view the requests sent to your URL.</p>"},{"location":"pro.html#permanent-urls","title":"Permanent URLs","text":"<p>The URLs stay in your account forever, the 7-day auto expiration of the free version is removed.</p>"},{"location":"pro.html#store-more-than-100-requests-or-emails","title":"Store more than 100 requests or emails","text":"<p>With the free version, URLs stop taking in new requests or emails after the 100 request limit is reached. With Pro, the limit of max 100 requests or emails per URL is removed and raised to 10.000 requests or emails, which are then rotated automatically.</p>"},{"location":"pro.html#unlimited-urls","title":"Unlimited URLs","text":"<p>Create as many upgraded URLs or email addresses as you need at no extra cost.</p>"},{"location":"pro.html#csv-export","title":"CSV Export","text":"<p>Export all requests and emails to a CSV file.</p>"},{"location":"pro.html#localhost-forwarding","title":"Localhost Forwarding","text":"<p>Forward requests to your Webhook.site URL to your local network via Webhook.site CLI.</p>"},{"location":"pro.html#email-support","title":"Email Support","text":"<p>We\u2019ll help you troubleshoot and set up your Custom Actions and workflows.</p>"},{"location":"pro.html#enterprise-features","title":"Enterprise features","text":"<p>In addition to all Pro features, Enterprise also contains the following features:</p>"},{"location":"pro.html#custom-domain","title":"Custom Domain","text":"<p>Use a your own (sub)domain for URLs and emails: </p> <p><code>mydomain.com/my-alias</code></p> <p><code>my-alias@email.mydomain.com</code></p> <p>Additionally, Webhook.site provides an SSL certificate which is included free of charge with your Enterprise subscription.</p>"},{"location":"pro.html#multi-user-support","title":"Multi-User Support","text":"<p>Ideal for larger organizations, share URLs, schedules, and other data with the rest of the organization. Configure individual users' access with User Types like Administrator, Member and Viewer as well as with Roles, giving users access to specific groups of URLs so they can see and interact with exactly the data they need.</p>"},{"location":"pro.html#saml-20-single-sign-on","title":"SAML 2.0 Single Sign-On","text":"<p>Webhook.site supports SSO for providers like Google Workspace, Microsoft Entra and any other provider that supports SAML 2.0 SSO.</p>"},{"location":"schedules.html","title":"Schedules","text":""},{"location":"schedules.html#webhooksite-schedules","title":"Webhook.site Schedules","text":"<p>Included in your Webhook.site subscription is Webhook.site Schedules, a feature that enables you to periodically send requests to specified URLs (including your Webhook.site URLs, so your Custom Actions can be executed periodially) with a custom method, headers, and interval.</p> <p>Schedules can be used for a variety of purposes, including cache warming, uptime monitoring, automatic data transfer, etc.</p> <p>After creating the Schedule, you can view the logs for the last 100 scheduled requests.</p> <p>Per default, the timeout for the Schedule requests is 5 seconds, but can range from 1 to 30 seconds. </p> <p>A timeout or server error will trigger a Schedule error notification email, if enabled in Control Panel -&gt; Settings.</p> <p>Schedules can also be managed using the Schedules API.</p> <p></p>"},{"location":"schedules.html#uptime-monitoring-requirements","title":"Uptime monitoring &amp; Requirements","text":"<p>If you create a Schedule and enable the When an error happens during a Schedule run setting, Webhook.site will automatically send an email notification when a URL has a timeout longer than the one specified, or when one of the requirements aren't met. It is possible to specify requirements for the response body containing a string, and the response status code being within a certain range.</p>"},{"location":"schedules.html#schedule-intervals","title":"Schedule Intervals","text":"<p>In addition to be able to use a custom <code>cron</code>-style expression string, Schedules can be executed at the following preset intervals:</p> <ul> <li>1 minute</li> <li>5 minutes</li> <li>10 minutes</li> <li>1 hour</li> <li>24 hours (at 00:00)</li> <li>Every week (mondays at 00:00)</li> <li>Every month (1st day at 00:00)</li> </ul> <p>Schedule intervals are based on UTC time.</p> <p>For building cron-style expressions, we recommend https://crontab.guru.</p>"},{"location":"alternative-to/zapier.html","title":"Webhook.site as Zapier alternative","text":""},{"location":"alternative-to/zapier.html#webhooksite-as-zapier-alternative","title":"Webhook.site as Zapier alternative","text":"<p>Zapier is a workflow automation program that lets customers build workflows in a graphical manner. Often these automations are triggered by underlying webhooks.</p> <p>With Webhook.site, you can also build workflow using Custom Actions. The following benefits are available when using Webhook.site compared to Zapier:</p> <ul> <li>Flat-rate billing - Zapier an get expensive as each time the workflow runs is charged. Webhook.site only charges a flat-rate subscription fee.</li> <li>More flexibility - Zapier can be cumbersome to work with. Webhook.site allows you to customize your workflow in a more advanced manner and see exactly what's going on.</li> <li>Integrate with any app - you can integrate with any platform using Webhook.site. We support a wide range of connectivity: HTTP APIs, Databases, SSH, email, push notifications - you name it.</li> <li>More advanced workflows - you can also run scripts with e.g. JavaScript or WebhookScript.</li> <li>Easier debugging - with Webhook.site, you can go back in time and see the data that was received and the logs for each action that's run.</li> </ul>"},{"location":"api/about.html","title":"Usage & Authentication","text":""},{"location":"api/about.html#webhooksite-api","title":"Webhook.site API","text":"<p>The Webhook.site API is public, free and easy to use. If you have a Webhook.site Account, you should authorize via an Api-Key.</p>  View, fork and modify in Postman:"},{"location":"api/about.html#general-usage","title":"General Usage","text":"<p>Base URL: <code>https://webhook.site</code>.</p> <p>You must set the <code>Accept</code> and <code>Content-Type</code> headers to <code>application/json</code>.</p> <p>You must set the <code>Api-Key</code> header if you have a Webhook.site account.</p>"},{"location":"api/about.html#common-uses","title":"Common Uses","text":"<ul> <li>Create a Webhook.site URL</li> <li>Fetch or search data sent to a Webhook.site URL</li> </ul>"},{"location":"api/about.html#things-to-note","title":"Things to Note","text":"<ul> <li>In this documentation, replaceable URL parameters are highlighted. For example, <code>tokenId</code> indicates a parameter that must be replaced with a token ID.</li> <li>A Token ID refers to the ID of the Webhook.site URL/e-mail address, i.e., when your Webhook.site URL is <code>https://webhook.site/00000000-0000-0000-0000-000000000000</code>, the Token ID is then <code>00000000-0000-0000-0000-000000000000</code>.</li> <li>In API URLs, you cannot use Token Aliases in place of the Token ID.</li> <li>Webhook.site API Keys must be specified using the <code>Api-Key</code> HTTP header.</li> <li>Fair use guidelines, rate limits, and other limitations apply as described by the Terms of Service.</li> </ul>"},{"location":"api/about.html#api-key","title":"API Key","text":"<p>While many endpoints of the Webhook.site API are public and work without any authentication, some endpoints do require authentication, or will return a <code>401 Unauthorized</code> status code. Resources that are associated with a Webhook.site account always require an API Key.</p> <p>API Keys have the same privileges as the user who created them.</p> <p>API Keys must be specified in the <code>Api-Key</code> HTTP header.</p> Create API Key"},{"location":"api/about.html#common-usages","title":"Common Usages","text":""},{"location":"api/about.html#get-data-sent-to-url","title":"Get data sent to URL","text":"<p>To retrieve the data that's sent to a Webhook.site URL or Email, you'll want to use the Get Requests endpoint.</p>"},{"location":"api/about.html#create-new-urlemail-address","title":"Create new URL/email address","text":"<p>To create a new token programmatically, you can use the API like this:</p> <pre><code>$ curl -X POST https://webhook.site/token\n</code></pre> <p>This will return information about the token in JSON format, including its UUID. Your URL will be available at the endpoint <code>https://webhook.site/[token uuid]</code>.</p> <p>If you are a Webhook.site Pro or Enterprise customer, you should provide an API key in order to associate the created token with your account automatically:</p> <pre><code>$ curl -X POST -H 'Api-Key: 00000000-0000-0000-0000-000000000000' https://webhook.site/token\n</code></pre> <p>More info here.</p>"},{"location":"api/action-types.html","title":"Action types","text":"<p>The following is a list of the API names for Action Types, along with a list of parameters, and their validation requirements.</p>"},{"location":"api/action-types.html#auth_basic","title":"<code>auth_basic</code>","text":"<ul> <li><code>username</code>: string</li> <li><code>password</code>: required, string</li> </ul>"},{"location":"api/action-types.html#auto_json","title":"<code>auto_json</code>","text":"<ul> <li><code>source</code>: string</li> <li><code>jsonpath</code>: string</li> <li><code>variable_name</code>: string</li> </ul>"},{"location":"api/action-types.html#aws_cf_invalidate","title":"<code>aws_cf_invalidate</code>","text":"<ul> <li><code>provider_id</code>: required, int</li> <li><code>distribution_id</code>: required, string</li> <li><code>paths</code>: required, string</li> </ul>"},{"location":"api/action-types.html#aws_s3_create_bucket","title":"<code>aws_s3_create_bucket</code>","text":"<ul> <li><code>provider_id</code>: string, required</li> <li><code>region</code>: string, required</li> <li><code>bucket_name</code>: string, required</li> <li><code>canned_acl</code>: string, in:private,public-read,public-read-write,authenticated-read</li> </ul>"},{"location":"api/action-types.html#aws_s3_delete_object","title":"<code>aws_s3_delete_object</code>","text":"<ul> <li><code>provider_id</code>: string, required</li> <li><code>region</code>: string</li> <li><code>bucket_name</code>: string, required</li> <li><code>object_key</code>: string, required</li> </ul>"},{"location":"api/action-types.html#aws_s3_get_object","title":"<code>aws_s3_get_object</code>","text":"<ul> <li><code>provider_id</code>: string, required</li> <li><code>region</code>: string</li> <li><code>bucket_name</code>: string, required</li> <li><code>object_key</code>: string, required</li> <li><code>variable_name</code>: string, required, min:1</li> </ul>"},{"location":"api/action-types.html#aws_s3_put_object","title":"<code>aws_s3_put_object</code>","text":"<ul> <li><code>provider_id</code>: string, required</li> <li><code>region</code>: string, required</li> <li><code>bucket_name</code>: string</li> <li><code>object_key</code>: string, required</li> <li><code>body</code>: string, required</li> <li><code>canned_acl</code>: string, in:private,public-read,public-read-write,authenticated-read</li> </ul>"},{"location":"api/action-types.html#condition","title":"<code>condition</code>","text":"<ul> <li><code>input</code>: string</li> <li><code>operator</code>: required, string, in:eq,neq,sw,ew,ct,nct,gt,gte,lt,lte,ex,false,true,num,int,float,json,email,domain,url</li> <li><code>value</code>: string</li> <li><code>action</code>: required, string, in:stop,continue,noop</li> </ul>"},{"location":"api/action-types.html#conditions","title":"<code>conditions</code>","text":"<ul> <li><code>conditions</code>: required, array</li> <li><code>mode</code>: required, string, in:one,all,none</li> <li><code>action</code>: required, string, in:stop,continue,noop</li> </ul>"},{"location":"api/action-types.html#database","title":"<code>database</code>","text":"<ul> <li><code>type</code>: required, in:mysql,pgsql,sqlsrv</li> <li><code>host</code>: required, string</li> <li><code>port</code>: number, min:1, max:65535</li> <li><code>database</code>: required, string</li> <li><code>password</code>: string</li> <li><code>username</code>: required, string</li> <li><code>statement</code>: required, string</li> <li><code>params</code>: array</li> <li><code>variable_name</code>: string</li> <li><code>charset</code>: string</li> </ul>"},{"location":"api/action-types.html#discord_send_message","title":"<code>discord_send_message</code>","text":"<ul> <li><code>provider_id</code>: required, string</li> <li><code>content</code>: required, string</li> <li><code>username</code>: string</li> <li><code>avatar_url</code>: url</li> <li><code>embed_type</code>: string, in:link,image,video</li> <li><code>embed_url</code>: url</li> </ul>"},{"location":"api/action-types.html#dont_save","title":"<code>dont_save</code>","text":"<p>No parameters for <code>dont_save</code>.</p>"},{"location":"api/action-types.html#dropbox_create_folder","title":"<code>dropbox_create_folder</code>","text":"<ul> <li><code>provider_id</code>: string, required</li> <li><code>path</code>: string, required</li> </ul>"},{"location":"api/action-types.html#dropbox_delete","title":"<code>dropbox_delete</code>","text":"<ul> <li><code>provider_id</code>: string, required</li> <li><code>path</code>: string, required</li> </ul>"},{"location":"api/action-types.html#dropbox_download_file","title":"<code>dropbox_download_file</code>","text":"<ul> <li><code>provider_id</code>: string, required</li> <li><code>path</code>: string, required</li> <li><code>variable_name</code>: string, required</li> </ul>"},{"location":"api/action-types.html#dropbox_get_link","title":"<code>dropbox_get_link</code>","text":"<ul> <li><code>provider_id</code>: string, required</li> <li><code>path</code>: string, required</li> <li><code>variable_name</code>: string</li> <li><code>type</code>: string, in:share_link,temporary</li> <li><code>share_audience</code>: string, in:public,team,no_one</li> </ul>"},{"location":"api/action-types.html#dropbox_upload_file","title":"<code>dropbox_upload_file</code>","text":"<ul> <li><code>provider_id</code>: string, required</li> <li><code>path</code>: string, required</li> <li><code>body</code>: string, required</li> <li><code>mode</code>: string, required, in:add,overwrite,update</li> </ul>"},{"location":"api/action-types.html#extract_jsonpath","title":"<code>extract_jsonpath</code>","text":"<ul> <li><code>jsonpath</code>: required, string</li> <li><code>variable_name</code>: required, string</li> <li><code>source</code>: string</li> <li><code>default</code>: string</li> <li><code>repeat</code>: boolean</li> </ul>"},{"location":"api/action-types.html#extract_regex","title":"<code>extract_regex</code>","text":"<ul> <li><code>regex</code>: required, string</li> <li><code>variable_name</code>: required, string</li> <li><code>source</code>: string</li> <li><code>default</code>: string</li> <li><code>repeat</code>: boolean</li> </ul>"},{"location":"api/action-types.html#extract_xpath","title":"<code>extract_xpath</code>","text":"<ul> <li><code>xpath</code>: required, string</li> <li><code>variable_name</code>: required, string</li> <li><code>source</code>: string</li> <li><code>default</code>: string</li> </ul>"},{"location":"api/action-types.html#ftp_download","title":"<code>ftp_download</code>","text":"<ul> <li><code>host</code>: required, string</li> <li><code>port</code>: number, min:1, max:65535</li> <li><code>password</code>: required, string</li> <li><code>username</code>: required, string</li> <li><code>path</code>: required, string</li> <li><code>ssl</code>: bool</li> <li><code>passive</code>: bool</li> <li><code>variable_name</code>: string</li> </ul>"},{"location":"api/action-types.html#ftp_upload","title":"<code>ftp_upload</code>","text":"<ul> <li><code>host</code>: required, string</li> <li><code>port</code>: number, min:1, max:65535</li> <li><code>password</code>: required, string</li> <li><code>username</code>: required, string</li> <li><code>path</code>: required, string</li> <li><code>content</code>: required, string</li> <li><code>ssl</code>: bool</li> <li><code>passive</code>: bool</li> </ul>"},{"location":"api/action-types.html#google_sheets_add_row","title":"<code>google_sheets_add_row</code>","text":"<ul> <li><code>provider_id</code>: string, required</li> <li><code>spreadsheet_id</code>: string, required</li> <li><code>range</code>: string, required</li> <li><code>values</code>: string, required</li> <li><code>formula_mode</code>: bool</li> </ul>"},{"location":"api/action-types.html#google_sheets_get_values","title":"<code>google_sheets_get_values</code>","text":"<ul> <li><code>provider_id</code>: string, required</li> <li><code>spreadsheet_id</code>: string, required</li> <li><code>range</code>: string, required</li> <li><code>variable_name</code>: required, string</li> </ul>"},{"location":"api/action-types.html#google_sheets_update_row","title":"<code>google_sheets_update_row</code>","text":"<ul> <li><code>provider_id</code>: string, required</li> <li><code>spreadsheet_id</code>: string, required</li> <li><code>range</code>: string, required</li> <li><code>values</code>: string, required</li> <li><code>formula_mode</code>: bool</li> </ul>"},{"location":"api/action-types.html#http","title":"<code>http</code>","text":"<ul> <li><code>url</code>: required, string</li> <li><code>content</code>: nullable, string</li> <li><code>method</code>: nullable, in:POST,GET,OPTIONS,PUT,DELETE,PATCH,TRACE</li> <li><code>mode</code>: nullable, in:text,json,multipart,urlencoded,forward</li> <li><code>auth</code>: nullable, array</li> <li><code>auth.mode</code>: nullable, string, in:basic,digest,ntlm</li> <li><code>auth.username</code>: string</li> <li><code>auth.password</code>: string</li> <li><code>multipart</code>: array, required_if:mode,multipart</li> <li><code>multipart.*.name</code>: string</li> <li><code>multipart.*.filename</code>: string</li> <li><code>multipart.*.content-type</code>: string</li> <li><code>multipart.*.content</code>: string</li> <li><code>urlencoded</code>: array</li> <li><code>urlencoded.*.name</code>: string, required_if:mode,urlencoded</li> <li><code>urlencoded.*.value</code>: string, required_if:mode,urlencoded</li> <li><code>headers</code>: nullable, string</li> <li><code>skip_ssl_verification</code>: nullable, bool</li> <li><code>variable_name</code>: string</li> <li><code>timeout</code>: nullable, numeric, max:15</li> <li><code>retry</code>: array</li> <li><code>retry.enabled</code>: nullable, bool</li> <li><code>retry.retries</code>: nullable, numeric, min:1, max:10</li> <li><code>retry.delay</code>: nullable, numeric, min:0, max:10</li> <li><code>retry.require_status</code>: nullable, string</li> </ul>"},{"location":"api/action-types.html#hubspot_create_contact","title":"<code>hubspot_create_contact</code>","text":"<ul> <li><code>provider_id</code>: required, string</li> <li><code>properties</code>: required, array</li> </ul>"},{"location":"api/action-types.html#image_resize","title":"<code>image_resize</code>","text":"<ul> <li><code>source</code>: string, required</li> <li><code>width</code>: string, required_without:height</li> <li><code>height</code>: string, required_without:width</li> <li><code>aspect_ratio</code>: bool, required</li> <li><code>variable_name</code>: string</li> </ul>"},{"location":"api/action-types.html#javascript","title":"<code>javascript</code>","text":"<ul> <li><code>script</code>: required, string</li> </ul>"},{"location":"api/action-types.html#log","title":"<code>log</code>","text":"<ul> <li><code>text</code>: required, string</li> </ul>"},{"location":"api/action-types.html#microsoft_drive_download","title":"<code>microsoft_drive_download</code>","text":"<ul> <li><code>provider_id</code>: required, string</li> <li><code>path</code>: required, string</li> <li><code>variable_name</code>: string</li> </ul>"},{"location":"api/action-types.html#microsoft_drive_upload","title":"<code>microsoft_drive_upload</code>","text":"<ul> <li><code>provider_id</code>: required, string</li> <li><code>path</code>: required, string</li> <li><code>content_type</code>: string</li> <li><code>content</code>: string</li> <li><code>variable_name</code>: string</li> </ul>"},{"location":"api/action-types.html#microsoft_excel_add_rows","title":"<code>microsoft_excel_add_rows</code>","text":"<ul> <li><code>provider_id</code>: required, string</li> <li><code>path</code>: string</li> <li><code>table</code>: string</li> <li><code>index</code>: int</li> <li><code>values</code>: required, array</li> </ul>"},{"location":"api/action-types.html#microsoft_excel_get_values","title":"<code>microsoft_excel_get_values</code>","text":"<ul> <li><code>provider_id</code>: required, string</li> <li><code>path</code>: required, string</li> <li><code>worksheet</code>: required, string</li> <li><code>range</code>: required, string</li> <li><code>variable_name</code>: required, string</li> </ul>"},{"location":"api/action-types.html#modify_response","title":"<code>modify_response</code>","text":"<ul> <li><code>content</code>: string</li> <li><code>status</code>: string</li> <li><code>headers</code>: string</li> <li><code>stop</code>: bool</li> </ul>"},{"location":"api/action-types.html#ntfy","title":"<code>ntfy</code>","text":"<ul> <li><code>topic</code>: string, required</li> <li><code>title</code>: string</li> <li><code>icon</code>: string</li> <li><code>message</code>: string, required</li> </ul>"},{"location":"api/action-types.html#pdf_generate","title":"<code>pdf_generate</code>","text":"<ul> <li><code>content</code>: string</li> <li><code>mode</code>: string, in:html,markdown</li> <li><code>paper</code>: string, in:a4,letter</li> <li><code>orientation</code>: string, in:portrait,landscape</li> <li><code>variable_name</code>: string</li> </ul>"},{"location":"api/action-types.html#pushed_send","title":"<code>pushed_send</code>","text":"<ul> <li><code>app_key</code>: string, required</li> <li><code>app_secret</code>: string, required</li> <li><code>target_type</code>: string, required</li> <li><code>target</code>: string, required</li> <li><code>message</code>: string, required</li> </ul>"},{"location":"api/action-types.html#rabbitmq_get","title":"<code>rabbitmq_get</code>","text":"<ul> <li><code>host</code>: string, required</li> <li><code>port</code>: int</li> <li><code>username</code>: string, required</li> <li><code>password</code>: string, required</li> <li><code>vhost</code>: string</li> <li><code>queue</code>: string, required</li> <li><code>ssl</code>: boolean</li> <li><code>variable_name</code>: string</li> </ul>"},{"location":"api/action-types.html#rabbitmq_publish","title":"<code>rabbitmq_publish</code>","text":"<ul> <li><code>host</code>: string, required</li> <li><code>port</code>: int</li> <li><code>username</code>: string, required</li> <li><code>password</code>: string, required</li> <li><code>vhost</code>: string</li> <li><code>queue</code>: string, required</li> <li><code>ssl</code>: boolean</li> <li><code>message</code>: string, required</li> </ul>"},{"location":"api/action-types.html#rate_limit","title":"<code>rate_limit</code>","text":"<ul> <li><code>period</code>: required, int</li> <li><code>count</code>: required, int</li> <li><code>key</code>: string</li> </ul>"},{"location":"api/action-types.html#script","title":"<code>script</code>","text":"<ul> <li><code>script</code>: required, string</li> </ul>"},{"location":"api/action-types.html#send_email","title":"<code>send_email</code>","text":"<ul> <li><code>sender</code>: string</li> <li><code>recipient</code>: required, string</li> <li><code>content</code>: string</li> <li><code>is_html</code>: boolean</li> <li><code>subject</code>: required, string</li> <li><code>attachments</code>: array</li> </ul>"},{"location":"api/action-types.html#send_email_smtp","title":"<code>send_email_smtp</code>","text":"<ul> <li><code>sender_name</code>: string</li> <li><code>sender_email</code>: string</li> <li><code>recipient</code>: required, string</li> <li><code>content</code>: string</li> <li><code>is_html</code>: boolean</li> <li><code>subject</code>: required, string</li> <li><code>encryption</code>: string, in:none,ssl,tls</li> <li><code>port</code>: int</li> <li><code>username</code>: string, required</li> <li><code>password</code>: string, required</li> <li><code>host</code>: string_required</li> <li><code>attachments</code>: array</li> </ul>"},{"location":"api/action-types.html#send_request","title":"<code>send_request</code>","text":"<ul> <li><code>url</code>: required, string</li> <li><code>content</code>: nullable, string</li> <li><code>method</code>: nullable, in:POST,GET,OPTIONS,PUT,DELETE</li> <li><code>headers</code>: nullable, string</li> <li><code>skip_ssl_verification</code>: nullable, bool</li> <li><code>variable_name</code>: string</li> <li><code>timeout</code>: nullable, numeric, max:30</li> </ul>"},{"location":"api/action-types.html#set_variable","title":"<code>set_variable</code>","text":"<ul> <li><code>name</code>: required, string</li> <li><code>value</code>: nullable, string</li> <li><code>mode</code>: nullable, in:text,random,date</li> <li><code>random</code>: array</li> <li><code>random.*.length</code>: int, max:10000, required_if:mode,random</li> <li><code>random.*.characters</code>: array, in:lowercase,uppercase,digits,symbols,user</li> <li><code>random.*.alphabet</code>: string</li> <li><code>date</code>: array</li> <li><code>date.*.input</code>: string</li> <li><code>date.*.format</code>: string, in:iso8601,mysql,unix,unixmicro,user</li> <li><code>date.*.user_format</code>: string</li> </ul>"},{"location":"api/action-types.html#sftp_download","title":"<code>sftp_download</code>","text":"<ul> <li><code>provider_id</code>: string</li> <li><code>host</code>: required, string</li> <li><code>port</code>: number, min:1, max:65535</li> <li><code>username</code>: required, string</li> <li><code>password</code>: string</li> <li><code>path</code>: required, string</li> <li><code>variable_name</code>: string</li> </ul>"},{"location":"api/action-types.html#sftp_upload","title":"<code>sftp_upload</code>","text":"<ul> <li><code>provider_id</code>: string</li> <li><code>host</code>: required, string</li> <li><code>port</code>: number, min:1, max:65535</li> <li><code>username</code>: required, string</li> <li><code>password</code>: string</li> <li><code>path</code>: required, string</li> <li><code>content</code>: required, string</li> </ul>"},{"location":"api/action-types.html#slack_send_message","title":"<code>slack_send_message</code>","text":"<ul> <li><code>webhook_url</code>: required, url</li> <li><code>raw</code>: bool</li> <li><code>content</code>: required, string</li> </ul>"},{"location":"api/action-types.html#ssh_run_command","title":"<code>ssh_run_command</code>","text":"<ul> <li><code>provider_id</code>: string</li> <li><code>host</code>: required, string</li> <li><code>port</code>: number, min:1, max:65535</li> <li><code>username</code>: required, string</li> <li><code>password</code>: string</li> <li><code>command</code>: required, string</li> <li><code>variable_name</code>: string</li> </ul>"},{"location":"api/action-types.html#stop","title":"<code>stop</code>","text":"<p>No parameters for <code>stop</code>.</p>"},{"location":"api/action-types.html#store_global_variable","title":"<code>store_global_variable</code>","text":"<ul> <li><code>name</code>: required, string</li> <li><code>value</code>: nullable, string</li> </ul>"},{"location":"api/action-types.html#template","title":"<code>template</code>","text":"<ul> <li><code>template_id</code>: required, int</li> <li><code>variables</code>: array</li> </ul>"},{"location":"api/action-types.html#text_map","title":"<code>text_map</code>","text":"<ul> <li><code>source</code>: required, string</li> <li><code>operator</code>: required, string</li> <li><code>variable_name</code>: required, string</li> <li><code>default</code>: required, string</li> <li><code>mappings</code>: required, array</li> </ul>"},{"location":"api/action-types.html#text_replace","title":"<code>text_replace</code>","text":"<ul> <li><code>source</code>: required, string</li> <li><code>variable_name</code>: required, string</li> <li><code>replacements</code>: required, array</li> </ul>"},{"location":"api/action-types.html#text_split","title":"<code>text_split</code>","text":"<ul> <li><code>delimiter</code>: required, string</li> <li><code>source</code>: required, string</li> <li><code>variable_name</code>: string</li> <li><code>repeat</code>: boolean</li> </ul>"},{"location":"api/action-types.html#twitter_tweet","title":"<code>twitter_tweet</code>","text":"<ul> <li><code>provider_id</code>: required, string</li> <li><code>tweet</code>: required, string</li> </ul>"},{"location":"api/custom-actions.html","title":"Custom Actions","text":""},{"location":"api/custom-actions.html#api-endpoints-custom-actions","title":"API Endpoints: Custom Actions","text":"<p>The Custom Actions API allows you to manage the Custom Actions associated with a given Token. More info about Custom Actions.</p> <p>List of the API names and parameters for Action Types.</p>"},{"location":"api/custom-actions.html#actions","title":"Actions","text":""},{"location":"api/custom-actions.html#create-custom-action","title":"Create Custom Action","text":"<ul> <li>Can require authentication.</li> </ul> <p>POST <code>https://webhook.site/token/tokenId/actions</code></p> <ul> <li><code>type</code> (string) is the name of an Action Type.</li> <li><code>order</code> (int) specified which order the action is executed in.</li> <li><code>parameters</code> (object) can vary depending on the Action Type. </li> <li><code>disabled</code> (bool) if set to true, the action is skipped upon execution.</li> <li><code>queue</code> (bool) If set to true, the action is run asynchronously. More info here</li> <li><code>delay</code> (int, max 86400) If set (along with <code>queue</code> to true), Webhook.site waits the specified amount of seconds to run the action.</li> <li><code>condition</code> (uuid) If set to an ID of a Conditions action, the action will only run if the condition passes, and is otherwise skipped.</li> </ul>"},{"location":"api/custom-actions.html#request","title":"Request","text":""},{"location":"api/custom-actions.html#example-1-condition-action","title":"Example 1: Condition action","text":"<pre><code>{\n\"type\": \"condition\",\n\"order\": 3,\n\"disabled\": false,\n\"parameters\": {\n\"input\": \"$request.content$\",\n\"operator\": \"eq\",\n\"value\": \"\",\n\"action\": \"stop\"\n}\n}\n</code></pre>"},{"location":"api/custom-actions.html#example-2-webhookscript-action","title":"Example 2: WebhookScript action","text":"<pre><code>{\n\"type\": \"script\",\n\"order\": 1,\n\"parameters\": {\n\"script\": \"expiry = '2021-08-01T00:00:00.000000Z'\\nnow = to_date('now')\\n\\nif (date_interval(now, expiry) &lt; 0) {\\n    // Respond with 410 Gone\\n    respond('This content is no longer available.', 410)\\n}\\n\"\n}\n}\n</code></pre>"},{"location":"api/custom-actions.html#example-3-creating-webhookscript-action-with-python-3","title":"Example 3: Creating WebhookScript action with Python 3","text":"<p>Same script as Example 2. Requires the <code>requests</code> module, which can be installed using <code>pip install requests</code>.</p> <pre><code>import requests\nscript = \"\"\"\nexpiry = '2021-08-01T00:00:00.000000Z'\nnow = to_date('now')\nif (date_interval(now, expiry) &lt; 0) {\n    // Respond with 410 Gone\n    respond('This content is no longer available.', 410)\n}\n\"\"\"\ndata = {\n\"type\": \"script\",\n\"order\": 1,\n\"parameters\": {\n\"script\": script\n}\n}\nr = requests.post('https://webhook.site/token/7d63959e-4fec-49bd-90dc-a4615722825e/actions', json=data)\n</code></pre>"},{"location":"api/custom-actions.html#response","title":"Response","text":"<pre><code>{\n\"uuid\": \"7ae324d6-c65b-416b-8f83-18fb89e0c740\",\n\"token_id\": \"fe18d303-631d-4620-acb3-5c0b1b0b876d\",\n\"type\": \"condition\",\n\"order\": 3,\n\"disabled\": null,\n\"parameters\": {\n\"input\": \"$request.content$\",\n\"operator\": \"eq\",\n\"value\": \"\",\n\"action\": \"stop\"\n}\n}\n</code></pre>"},{"location":"api/custom-actions.html#get-custom-actions","title":"Get Custom Actions","text":"<ul> <li>Can require authentication.</li> </ul> <p>GET <code>https://webhook.site/token/tokenId/actions</code></p>"},{"location":"api/custom-actions.html#response_1","title":"Response","text":"<p><code>200 OK</code></p> <pre><code>{\n\"data\": [\n{\n\"uuid\": \"52055928-099a-44dc-ba31-e8d808b98ea1\",\n\"token_id\": \"fe18d303-631d-4620-acb3-5c0b1b0b876d\",\n\"type\": \"condition\",\n\"order\": 1,\n\"disabled\": false,\n\"parameters\": {\n\"input\": \"$request.header.content-type$\",\n\"operator\": \"nct\",\n\"value\": \"application/json\",\n\"action\": \"stop\"\n}\n},\n{\n\"uuid\": \"27b07ca7-ea83-48f5-b376-2372cf25d3a1\",\n\"token_id\": \"fe18d303-631d-4620-acb3-5c0b1b0b876d\",\n\"type\": \"condition\",\n\"order\": 2,\n\"disabled\": null,\n\"parameters\": {\n\"input\": \"$request.content$\",\n\"operator\": \"eq\",\n\"value\": \"\",\n\"action\": \"stop\"\n}\n}\n]\n}\n</code></pre>"},{"location":"api/custom-actions.html#update-custom-action","title":"Update Custom Action","text":"<ul> <li>Can require authentication.</li> </ul> <p>PUT <code>https://webhook.site/token/tokenId/actions/actionId</code></p>"},{"location":"api/custom-actions.html#request_1","title":"Request","text":"<p>See Create Custom Action endpoint.</p>"},{"location":"api/custom-actions.html#response_2","title":"Response","text":"<p>See Create Custom Action endpoint.</p>"},{"location":"api/custom-actions.html#test-custom-action","title":"Test Custom Action","text":"<ul> <li>Can require authentication.</li> </ul>"},{"location":"api/custom-actions.html#request_2","title":"Request","text":"<p>POST <code>https://webhook.site/token/tokenId/test-action</code></p>"},{"location":"api/custom-actions.html#query-string-parameters","title":"Query string parameters","text":"<ul> <li><code>request_id</code>: A request ID to base the test run on. If not set, uses default request variables.</li> <li><code>action_id</code>: When set, overwrites the parameters of an existing action. If not, tests a temporary new, empty action with ID <code>00000000-0000-4000-0000-000000000000</code>.</li> </ul> <pre><code>{\n\"type\": \"script\",\n\"order\": 2,\n\"parameters\": {\n\"script\": \"echo('hello world')\"\n}\n}\n</code></pre>"},{"location":"api/custom-actions.html#response_3","title":"Response","text":"<p><code>200 OK</code></p> <pre><code>{\n\"success\": true,\n\"result\": {\n\"output\": {\n\"08529a4f-ad84-450b-977a-1d126d6ca6b7\": [\n\"Set runtime variable $aaa$ to \\\"example\\\"\"\n],\n\"00000000-0000-4000-0000-000000000000\": [\n\"hello world\"\n]\n},\n\"response\": {\n\"content\": null,\n\"status\": null,\n\"headers\": null\n},\n\"variables\": {\n\"request.header.content-length\": \"57362\",\n\"request.header.user-agent\": \"Paw/3.3.5 (Macintosh; OS X/11.6.2) GCDHTTPRequest\",\n\"request.header.connection\": \"close\",\n\"request.header.host\": \"webhook.site\",\n\"request.header.content-type\": \"application/json\",\n\"request.uuid\": \"87240a26-1426-45dd-9b4c-961a323652a9\",\n\"request.token_id\": \"7fc77812-9efe-41b6-9365-e2c1fb5feb62\",\n\"request.content\": \"\",\n\"request.date\": \"2022-03-20 10:18:58\",\n\"request.timestamp\": 1647771538,\n\"request.hostname\": \"webhook.site\",\n\"request.size\": 0,\n\"request.type\": \"web\",\n\"request.ip\": \"127.0.0.1\",\n\"request.user_agent\": \"Paw/3.3.5 (Macintosh; OS X/11.6.2) GCDHTTPRequest\",\n\"request.url\": \"https://webhook.site/7fc77812-9efe-41b6-9365-e2c1fb5feb62\",\n\"request.method\": \"POST\",\n\"aaa\": \"example\"\n}\n}\n}\n</code></pre>"},{"location":"api/custom-actions.html#execute-custom-actions","title":"Execute Custom Actions","text":"<ul> <li>Can require authentication.</li> </ul> <p>POST <code>https://webhook.site/token/tokenId/request/requestId/execute</code></p>"},{"location":"api/custom-actions.html#query-string-parameters_1","title":"Query string parameters","text":"<ul> <li><code>error_notifications</code>: (bool) Whether to send email notifications if an error occurs. Defaults to <code>false</code>.</li> </ul> <p>Runs all Custom Actions for a specific token and request and returns the output. </p>"},{"location":"api/custom-actions.html#response_4","title":"Response","text":"<p><code>200 OK</code></p> <p>See Test Custom Action endpoint.</p>"},{"location":"api/custom-actions.html#delete-custom-action","title":"Delete Custom Action","text":"<ul> <li>Can require authentication.</li> </ul> <p>DELETE <code>https://webhook.site/token/tokenId/actions/actionId</code></p>"},{"location":"api/databases.html","title":"Databases","text":""},{"location":"api/databases.html#api-endpoints-databases","title":"API Endpoints: Databases","text":"<p>More info about Databases.</p>"},{"location":"api/databases.html#run-query","title":"Run Query","text":""},{"location":"api/databases.html#request","title":"Request","text":"<p>POST <code>https://webhook.site/databases/databaseId/query</code></p> <ul> <li><code>query</code>: (string, required) The SQL query to execute.</li> <li><code>params</code>: (array|object) A list or dictionary of parameters. Can be left out if query has no parameters.</li> </ul> <p>A maximum of 1000 results can be returned.</p> <pre><code>{\n\"query\": \"select * from users where email like concat('%', :domain)\",\n\"params\": {\n\"domain\": \"@example.com\"\n}\n}\n</code></pre> <p>It is also possible to use a list of parameters:</p> <pre><code>{\n\"query\": \"select * from users where email like concat('%', ?)\",\n\"params\": [\n\"@example.com\"\n]\n}\n</code></pre> <p><code>params</code> can be left out if not needed:</p> <pre><code>{\n\"query\": \"select * from users where email = 'jack@example.com'\"\n}\n</code></pre>"},{"location":"api/databases.html#response","title":"Response","text":"<ul> <li><code>result</code>: (array) The returned data.</li> <li><code>error</code>: (string) If the query results in an error, the error is represented here, otherwise <code>null</code>.</li> <li><code>time</code>: (float) Query execution time in milliseconds.</li> </ul> <pre><code>{\n\"result\": [\n{\n\"id\": 1,\n\"name\": \"Jack Daniels\",\n\"email\": \"jack@example.com\"\n},\n{\n\"id\": 2,\n\"name\": \"Elijah Craig\",\n\"email\": \"eli@example.com\"\n},\n],\n\"error\": null,\n\"time\": 0\n}\n</code></pre> <p>Or, for an error:</p> <pre><code>{\n\"result\": null,\n\"error\": \"Undefined table: 7 ERROR:  relation \\\"nonexisting_table\\\" does not exist\",\n\"time\": 0\n}\n</code></pre>"},{"location":"api/databases.html#create-database","title":"Create database","text":"<ul> <li>Requires authentication</li> <li>Will return <code>401 Unauthorized</code> when no databases purchased in subscription</li> </ul>"},{"location":"api/databases.html#request_1","title":"Request","text":"<p>POST <code>https://webhook.site/databases</code></p> <ul> <li><code>name</code> (required) The name of the database.</li> <li><code>group_id</code> Enter a group ID to attach database to a group.</li> <li><code>plan</code> (required) Either <code>db-s</code>, <code>db-m</code>, <code>db-l</code>.</li> </ul> <pre><code>{\n\"name\": \"My Database\",\n\"group_id\": null,\n\"plan\": \"db-s\"\n}\n</code></pre>"},{"location":"api/databases.html#response_1","title":"Response","text":"<pre><code>{\n\"id\": \"23984\",\n\"name\": \"My Database\",\n\"plan\": \"db-s\",\n\"group_id\": null,\n\"max_bytes\": 104857600,\n\"max_tables\": 1,\n\"team_id\": 181,\n\"updated_at\": \"2025-09-24T08:52:50.000000Z\",\n\"created_at\": \"2025-09-24T08:52:50.000000Z\"\n}\n</code></pre>"},{"location":"api/databases.html#get-all-databases","title":"Get all databases","text":"<p>GET <code>https://webhook.site/database?page=1&amp;per_page=15</code></p>"},{"location":"api/databases.html#response_2","title":"Response","text":"<pre><code>{\n\"current_page\": 1,\n\"data\": [\n{\n\"id\": \"23984\",\n\"name\": \"My Database\",\n\"plan\": \"db-s\",\n\"team_id\": 345987,\n\"group_id\": null,\n\"max_bytes\": 104857600,\n\"max_tables\": 1,\n\"bytes_used\": 0,\n\"tables_used\": 1,\n\"created_at\": \"2025-09-23T10:26:51.000000Z\",\n\"updated_at\": \"2025-09-23T10:26:55.000000Z\",\n\"group\": null\n}\n],\n\"first_page_url\": \"https:\\/\\/webhook.test\\/databases?page=1\",\n\"from\": 1,\n\"last_page\": 1,\n\"last_page_url\": \"https:\\/\\/webhook.test\\/databases?page=1\",\n\"links\": [\n{\n\"url\": null,\n\"label\": \"&amp;laquo; Previous\",\n\"active\": false\n},\n{\n\"url\": \"https:\\/\\/webhook.test\\/databases?page=1\",\n\"label\": \"1\",\n\"active\": true\n},\n{\n\"url\": null,\n\"label\": \"Next &amp;raquo;\",\n\"active\": false\n}\n],\n\"next_page_url\": null,\n\"path\": \"https:\\/\\/webhook.test\\/databases\",\n\"per_page\": 15,\n\"prev_page_url\": null,\n\"to\": 1,\n\"total\": 1\n}\n</code></pre>"},{"location":"api/databases.html#update-database","title":"Update database","text":""},{"location":"api/databases.html#request_2","title":"Request","text":"<p>PUT <code>https://webhook.site/databases</code></p> <ul> <li><code>name</code> (required) The name of the database.</li> <li><code>group_id</code> Enter a group ID to attach database to a group.</li> </ul> <pre><code>{\n\"name\": \"My Updated Database\",\n\"group_id\": null\n}\n</code></pre>"},{"location":"api/databases.html#response_3","title":"Response","text":"<pre><code>{\n\"id\": \"100014\",\n\"name\": \"My Updated Database\",\n\"plan\": \"db-s\",\n\"team_id\": 181,\n\"group_id\": null,\n\"max_bytes\": 104857600,\n\"max_tables\": 1,\n\"bytes_used\": 0,\n\"tables_used\": 0,\n\"created_at\": \"2025-09-24T08:52:50.000000Z\",\n\"updated_at\": \"2025-09-24T08:56:29.000000Z\"\n}\n</code></pre>"},{"location":"api/databases.html#delete-database","title":"Delete database","text":""},{"location":"api/databases.html#request_3","title":"Request","text":"<p>DELETE <code>https://webhook.site/databases/databaseId</code></p>"},{"location":"api/databases.html#response_4","title":"Response","text":"<p><code>204 No content</code></p>"},{"location":"api/date-expressions.html","title":"API Endpoints: Query string date expressions","text":""},{"location":"api/date-expressions.html#api-endpoints-query-string-date-expressions","title":"API Endpoints: Query string date expressions","text":"<p>Date expressions can be used in the <code>query</code> parameter when retreiving and filtering Requests from the API.</p> <p>The expression starts with an anchor date, which can either be <code>now</code> (or <code>*</code>), or a date string ending with <code>||</code> (two pipe characters).</p> <p>This anchor date can optionally be followed by one or more maths expressions:</p> <ul> <li><code>+1h</code> \u2013 Add one hour</li> <li><code>-1d</code> \u2013 Subtract one day</li> <li><code>/d</code> \u2013 Round down to the nearest day</li> </ul> <p>The supported time units differ from those supported by time units for durations. The supported units are:</p> Symbol Meaning y Years M Months w Weeks d Days h Hours H Hours m Minutes s Seconds <p>Assuming now is 2001-01-01 12:00:00, some examples are:</p> Example Resolves to now+1h now in milliseconds plus one hour. Resolves to: 2001-01-01 13:00:00 now-1h now in milliseconds minus one hour. Resolves to: 2001-01-01 11:00:00 now-1h/d now in milliseconds minus one hour, rounded down to UTC 00:00. Resolves to: 2001-01-01 00:00:00 2001.02.01||+1M/d 2001-02-01 in milliseconds plus one month. Resolves to: 2001-03-01 00:00:00"},{"location":"api/examples.html","title":"Examples","text":""},{"location":"api/examples.html#api-examples","title":"API Examples","text":"<p>If you have a Webhook.site account, before using the API, please first create an API key here.  The examples below can also be used without an account, but in that case you should remove the API key header.</p> <p>Don't have an account yet? Sign up here.</p>"},{"location":"api/examples.html#postman","title":"Postman","text":"<p>Click below to access our freely available Postman collection, which you can fork for your own use.</p> <p></p>"},{"location":"api/examples.html#curl","title":"cURL","text":""},{"location":"api/examples.html#create-token-urlemail-address","title":"Create Token (URL/Email Address)","text":"<p>A Token (also called a URL) is a container for incoming requests. The UUID is used in your Webhook.site URL. More info</p> <pre><code>curl -X POST https://webhook.site/token\n</code></pre>"},{"location":"api/examples.html#output","title":"Output","text":"<pre><code>{\n\"uuid\": \"00000000-0000-0000-0000-000000000000\",\n\"redirect\": false,\n\"alias\": null,\n\"actions\": false,\n\"cors\": false,\n\"expiry\": null,\n\"timeout\": 0,\n\"listen\": 0,\n\"premium\": false,\n\"user_id\": null,\n\"ip\": \"192.168.1.100\",\n\"user_agent\": \"curl/8.7.1\",\n\"default_content\": \"This URL has no default content configured. &lt;a href=\\\"https://webhook.site/#!/edit/6aa5e195-6e9a-4036-8faf-8ad434857574\\\"&gt;Change response in Webhook.site&lt;/a&gt;.\",\n\"default_status\": 200,\n\"default_content_type\": \"text/html\",\n\"request_limit\": null,\n\"description\": null,\n\"created_at\": \"2025-07-04 14:31:21\",\n\"updated_at\": \"2025-07-04 14:31:21\"\n}\n</code></pre>"},{"location":"api/examples.html#send-json-data-to-url","title":"Send JSON data to URL","text":"<pre><code>curl -X POST https://webhook.site/00000000-0000-0000-0000-000000000000 \\\n-H 'content-type: application/json' \\\n-d $'{\"id\": 7, \"name\": \"Jack Daniels\", \"position\": \"Assistant\"}'\n</code></pre>"},{"location":"api/examples.html#get-data-of-last-request-sent-to-url","title":"Get data of last request sent to URL","text":"<pre><code>curl 'https://webhook.site/token/00000000-0000-0000-0000-000000000000/request/latest/raw' \\\n-H 'accept: application/json' \\\n-H 'api-key: 00000000-0000-0000-0000-000000000000'\n</code></pre>"},{"location":"api/examples.html#output_1","title":"Output","text":"<pre><code>{\"id\": 7, \"name\": \"Jack Daniels\", \"position\": \"Assistant\"}\n</code></pre>"},{"location":"api/examples.html#get-all-data-sent-to-url","title":"Get all data sent to URL","text":"<pre><code>curl 'https://webhook.site/token/00000000-0000-0000-0000-000000000000/requests?sorting=newest'\n</code></pre>"},{"location":"api/examples.html#output_2","title":"Output","text":"<pre><code>{\n\"data\": [\n{\n\"uuid\": \"70174177-a447-4dd5-a569-ddd26b7e90ec\",\n\"type\": \"web\",\n\"token_id\": \"00000000-0000-0000-0000-000000000000\",\n\"team_id\": null,\n\"ip\": \"192.168.1.1\",\n\"hostname\": \"webhook.site\",\n\"method\": \"POST\",\n\"user_agent\": \"curl/8.7.1\",\n\"content\": \"{\\\"id\\\": 7, \\\"name\\\": \\\"Jack Daniels\\\", \\\"position\\\": \\\"Assistant\\\"}\",\n\"query\": null,\n\"headers\": {\n\"user-agent\": [\n\"curl/8.7.1\"\n]\n},\n\"url\": \"https://webhook.site/00000000-0000-0000-0000-000000000000\",\n\"size\": 58,\n\"files\": [],\n\"created_at\": \"2025-07-04 14:27:26\",\n\"updated_at\": \"2025-07-04 14:27:26\",\n\"custom_action_output\": [],\n\"custom_action_errors\": [],\n\"time\": 0.001\n}\n],\n\"total\": 1,\n\"per_page\": 50,\n\"current_page\": 1,\n\"is_last_page\": true,\n\"from\": 1,\n\"to\": 1\n}\n</code></pre>"},{"location":"api/examples.html#send-file-to-url","title":"Send file to URL","text":"<p>Uploads the file <code>example.png</code> from the current directory.</p> <pre><code>curl -F 'file=@example.png' https://webhook.site/00000000-0000-0000-0000-000000000000\n</code></pre> <p>To download the file, click the Download link in the Webhook.site interface, or via the API, use the download endpoint.</p>"},{"location":"api/examples.html#python","title":"Python","text":""},{"location":"api/examples.html#fetch-latest-data","title":"Fetch latest data","text":"<p>Requires the <code>requests</code> module, which can be installed using <code>pip install requests</code>. </p> <p>Prints the 50 latest requests sent to a given URL to console.</p> <pre><code>import requests\ntoken_id = \"00000000-0000-0000-0000-000000000000\"\nheaders = {\"api-key\": \"00000000-0000-0000-0000-000000000000\"}\nr = requests.get('https://webhook.site/token/'+ token_id +'/requests?sorting=newest', headers=headers)\nfor request in r.json()['data']:\nprint(request)\n</code></pre>"},{"location":"api/examples.html#create-token-urlemail-address_1","title":"Create Token (URL/Email Address)","text":"<p>Requires the <code>requests</code> module, which can be installed using <code>pip install requests</code>. </p> <p>You'll also need to replace the API key. </p> <pre><code>import requests\njson = {\n\"default_status\": 200,\n\"default_content\": \"Hello world!\",\n\"default_content_type\": \"text/html\",\n}\nheaders = {\n\"api-key\": \"00000000-0000-0000-0000-000000000000\"\n}\nr = requests.post('https://webhook.site/token', json=json, headers=headers)\nprint('URL Created: https://webhook.site/' + r.json()['uuid'])\n</code></pre>"},{"location":"api/examples.html#download-all-request-data-as-files","title":"Download all request data as files","text":"<p>Per default, this script will download files as <code>&lt;request_id&gt;.json</code> in the <code>requests</code> directory relative to the current folder.</p> <p>You'll need to install the dependency <code>requests</code>, e.g. by running <code>pip3 install requests</code>.</p> <pre><code>import os\nimport json\nimport requests\nfrom time import sleep\ndirectory = os.path.join(os.getcwd(), 'requests')\ntoken_id = '00000000-0000-0000-0000-000000000000'\n# Uncomment if using an API key\n# api_key = '00000000-0000-0000-0000-000000000000'\nif not os.path.isdir(directory) or not os.access(directory, os.W_OK):\nraise Exception(f\"{directory} not writable, directory missing or rights issue.\")\nheaders = {'Accept': 'application/json'}\nif 'api_key' in vars():\nheaders['Api-Key'] = api_key\npage = 1\nwhile True:\nurl = f\"https://webhook.site/token/{token_id}/requests?sorting=newest&amp;page={page}\"\nresponse = requests.get(url, headers=headers).json()\nfor req in response['data']:\nfile_path = os.path.join(directory, f\"{req['uuid']}.json\")\nwith open(file_path, 'w') as f:\nf.write(req['content'])\nprint(f\"[Page {page:3}] Downloaded request {req['uuid']} sent at {req['created_at']} ({req['size']} bytes)\")\nif response['is_last_page'] or not response['data']:\nbreak\npage += 1\nsleep(1)\n</code></pre>"},{"location":"api/examples.html#php","title":"PHP","text":""},{"location":"api/examples.html#create-token-urlemail-address_2","title":"Create Token (URL/Email Address)","text":"<p>Creates a Webhook.site Token and outputs its Web URL. You'll need to replace the API key.</p> <pre><code>&lt;?php\n$apiKey = '00000000-0000-0000-0000-000000000000';\n// Create a stream context\n$context = stream_context_create(['http' =&gt; [\n'method' =&gt; 'POST',\n'header' =&gt; \"Api-Key: $apiKey\\r\\n\"\n]]);\n// Send API request\n$response = json_decode(file_get_contents('https://webhook.site/token', false, $context), true);\necho \"URL Created: https://webhook.site/{$response['uuid']}\";\n</code></pre>"},{"location":"api/examples.html#fetch-latest-data_1","title":"Fetch latest data","text":"<p>Simple example of how to loop through the latest requests or emails sent to a Webhook.site URL or email and display in a friendly manner. </p> <p>You'll need to replace the API key (if you have a Webhook.site account, otherwise leave it out) and token ID. </p> <pre><code>&lt;?php\n$apiKey = '00000000-0000-0000-0000-000000000000';\n$tokenId = '00000000-0000-0000-0000-000000000000';\n$url = \"https://webhook.site/token/$tokenId/requests?sorting=newest\";\n$context = stream_context_create(['http' =&gt; ['header' =&gt; \"Api-Key: $apiKey\\r\\n\"]]);\n$response = json_decode(file_get_contents($url, false, $context), true);\nforeach ($response['data'] as $req) {\necho \"\\n\";\necho json_encode([\n'method' =&gt; $req['method'],\n'body' =&gt; $req['content'],\n'date' =&gt; $req['created_at'],\n], \\JSON_PRETTY_PRINT);\n}\n</code></pre> <p>Example output when running the script after running e.g. <code>curl -X POST https://webhook.site/00000000-0000-0000-0000-000000000000 -d \"Hello world\"</code>:</p> <pre><code>{\n    \"method\": \"POST\",\n    \"body\": \"Hello world\",\n    \"date\": \"2023-06-08 13:04:33\"\n}\n{\n    \"method\": \"POST\",\n    \"body\": \"just testing\",\n    \"date\": \"2023-06-08 13:03:57\"\n}\n</code></pre>"},{"location":"api/examples.html#download-all-request-data-as-files_1","title":"Download all request data as files","text":"<p>Per default, this script saves the body content of all requests or emails sent to a URL as .json files in the <code>/requests</code> directory relative to the script file location.</p> <pre><code>&lt;?php\n$directory = __DIR__ . '/requests';\n//$apiKey = '00000000-0000-0000-0000-000000000000';\n$tokenId = '00000000-0000-0000-0000-000000000000';\nif (!is_dir($directory) || !is_writable($directory)) {\nthrow new Exception(sprintf('%s not writable, directory missing or rights issue.', $directory));\n}\n$context = stream_context_create(['http' =&gt;\nisset($apiKey) ? ['header' =&gt; \"Api-Key: $apiKey\\r\\n\"] : [],\n]);\n$page = 1;\ndo {\n$url = sprintf('https://webhook.site/token/%s/requests?sorting=newest&amp;page=%d', $tokenId, $page);\n$response = json_decode(file_get_contents($url, false, $context), true);\nforeach ($response['data'] as $req) {\nfile_put_contents(\nsprintf('/%s/%s.json', $directory, $req['uuid']),\n$req['content']\n);\necho(sprintf(\n\"[Page %3d] Downloaded request %s sent at %s (%d bytes)\\n\",\n$page, $req['uuid'], $req['created_at'], $req['size']\n));\n}\n$page++;\nsleep(1);\n} while (!$response['is_last_page'] &amp;&amp; isset($response['data']));\n</code></pre>"},{"location":"api/examples.html#nodejs","title":"Node.js","text":""},{"location":"api/examples.html#fetch-latest-data_2","title":"Fetch latest data","text":"<p>This script outputs the data sent to a Webhook.site URL in the last 2 hours. </p> <p>To do this, the script uses the <code>query</code> parameter (more info here) in conjunction with a <code>created_at</code> filter.</p> <p>Before running the script, you should install dependencies by running <code>npm install axios moment</code>.</p> <pre><code>import axios from 'axios';\nimport moment from 'moment';\n// Change these!\nconst apiKey = '00000000-0000-0000-0000-000000000000';\nconst tokenId = '00000000-0000-0000-0000-000000000000';\nasync function getData(apiKey, tokenId) {\nlet date = moment.utc().subtract(2, 'hours').format('YYYY-MM-DD hh:mm:ss');  let dateQuery = `created_at:[\"${date}\" TO \"*\"]`\ntry {\nconst response = await axios.get(`https://webhook.site/token/${tokenId}/requests`, {\nparams: {\nquery: dateQuery,\n},\nheaders: {\n'Api-Key': apiKey,\n'Accept': 'application/json',\n}\n});\nreturn response.data;\n} catch (error) {\nconsole.error(error);\n}\n}\nconst requests = await getData(apiKey, tokenId);\nconsole.log(`${requests.total} requests found:`);\nfor (const request of requests.data) {\nconsole.log({\nmethod: request.method, body: request.content,\ndate: request.created_at,\n});\n}\n</code></pre>"},{"location":"api/examples.html#download-all-request-data-as-files_2","title":"Download all request data as files","text":"<pre><code>const fs = require('fs');\nconst path = require('path');\nconst https = require('https');\nconst directory = path.join(__dirname, 'requests');\n//const apiKey = '00000000-0000-0000-0000-000000000000';\nconst tokenId = '00000000-0000-0000-0000-000000000000';\nif (!fs.existsSync(directory) || !fs.lstatSync(directory).isDirectory()) {\nthrow new Error(`${directory} not writable, directory missing or rights issue.`);\n}\nconst headers = {'Accept': 'application/json'};\nif (typeof apiKey !== 'undefined') headers['Api-Key'] = apiKey;\nlet page = 1;\nconst fetchAndDownload = () =&gt; {\nconst url = `https://webhook.site/token/${tokenId}/requests?sorting=newest&amp;page=${page}`;\nhttps.get(url, { headers }, (res) =&gt; {\nlet data = '';\nres.on('data', (chunk) =&gt; {\ndata += chunk;\n});\nres.on('end', () =&gt; {\nconst response = JSON.parse(data);\nfor (const req of response.data) {\nconst filePath = path.join(directory, `${req.uuid}.json`);\nfs.writeFileSync(filePath, req.content);\nconsole.log(`[Page ${page.toString().padStart(3)}] Downloaded request ${req.uuid} sent at ${req.created_at} (${req.size} bytes)`);\n}\nif (!response.is_last_page &amp;&amp; response.data.length &gt; 0) {\npage++;\nsetTimeout(fetchAndDownload, 1000);\n}\n});\n}).on('error', (err) =&gt; {\nconsole.error('Error:', err.message);\n});\n};\nfetchAndDownload();\n</code></pre>"},{"location":"api/global-variables.html","title":"Global Variables","text":""},{"location":"api/global-variables.html#api-endpoints-global-variables","title":"API Endpoints: Global Variables","text":"<p>With Global Variables, you can store data permanently that can be shared between your URLs. Global Variables can be used when creating Custom Actions and in Schedules. More about Global Variables</p>"},{"location":"api/global-variables.html#create-global-variable","title":"Create Global Variable","text":"<ul> <li>Requires authentication</li> </ul> <p>After creating, the variable <code>$content_type$</code> will be available in Custom Actions.</p>"},{"location":"api/global-variables.html#request","title":"Request","text":"<p>POST <code>https://webhook.site/global-variables</code></p> <ul> <li><code>name</code> (string) The name of the variable.</li> <li><code>value</code> (string) The value of the variable.</li> </ul> <pre><code>{\n\"name\": \"content_type\",\n\"value\": \"application/json\"\n}\n</code></pre>"},{"location":"api/global-variables.html#response","title":"Response","text":"<pre><code>{\n\"id\": 598297,\n\"name\": \"content_type\",\n\"team_id\": 1,\n\"value\": \"application\\/json\",\n\"updated_at\": \"2024-04-15T11:20:02.000000Z\",\n\"created_at\": \"2024-04-15T11:20:02.000000Z\"\n}\n</code></pre>"},{"location":"api/global-variables.html#get-all-global-variables","title":"Get all Global Variables","text":"<ul> <li>Requires authentication</li> </ul>"},{"location":"api/global-variables.html#request_1","title":"Request","text":"<p>GET <code>https://webhook.site/global-variables</code></p>"},{"location":"api/global-variables.html#query-string-parameters","title":"Query string parameters","text":"<ul> <li><code>per_page</code> (int) - amount of requests returned, defaults to 50 (max 100)</li> <li><code>page</code> (int) -  page number to retrieve (default 1)</li> <li><code>search</code> (string) - filter variables by name</li> </ul>"},{"location":"api/global-variables.html#response_1","title":"Response","text":"<pre><code>{\n\"current_page\": 1,\n\"data\": [\n{\n\"id\": 598297,\n\"user_id\": 0,\n\"team_id\": 1,\n\"name\": \"content_type\",\n\"value\": \"application\\/json\",\n\"created_at\": \"2024-04-15T11:20:02.000000Z\",\n\"updated_at\": \"2024-04-15T11:20:02.000000Z\"\n},\n{\n\"id\": 598294,\n\"user_id\": 0,\n\"team_id\": 1,\n\"name\": \"test\",\n\"value\": \"\\ud83e\\udd72\",\n\"created_at\": \"2024-04-14T13:21:24.000000Z\",\n\"updated_at\": \"2024-04-14T13:21:24.000000Z\"\n}\n],\n\"first_page_url\": \"https:\\/\\/webhook.test\\/global-variables?page=1\",\n\"from\": 1,\n\"last_page\": 21992,\n\"last_page_url\": \"https:\\/\\/webhook.test\\/global-variables?page=21992\",\n\"links\": [\n{\n\"url\": null,\n\"label\": \"&amp;laquo; Previous\",\n\"active\": false\n},\n{\n\"url\": \"https:\\/\\/webhook.test\\/global-variables?page=1\",\n\"label\": \"1\",\n\"active\": true\n},\n{\n\"url\": null,\n\"label\": \"...\",\n\"active\": false\n},\n{\n\"url\": \"https:\\/\\/webhook.test\\/global-variables?page=21991\",\n\"label\": \"21991\",\n\"active\": false\n},\n{\n\"url\": \"https:\\/\\/webhook.test\\/global-variables?page=2\",\n\"label\": \"Next &amp;raquo;\",\n\"active\": false\n}\n],\n\"next_page_url\": \"https:\\/\\/webhook.test\\/global-variables?page=2\",\n\"path\": \"https:\\/\\/webhook.test\\/global-variables\",\n\"per_page\": 15,\n\"prev_page_url\": null,\n\"to\": 15,\n\"total\": 329870\n}\n</code></pre>"},{"location":"api/global-variables.html#update-global-variable","title":"Update Global Variable","text":""},{"location":"api/global-variables.html#request_2","title":"Request","text":"<p>PUT <code>https://webhook.site/global-variables/globalVariableId</code></p> <p>(See Create Global Variable above for request.)</p>"},{"location":"api/global-variables.html#response_2","title":"Response","text":"<p>(See Create Global Variable above for response.)</p>"},{"location":"api/global-variables.html#delete-global-variable","title":"Delete Global Variable","text":""},{"location":"api/global-variables.html#request_3","title":"Request","text":"<p>DELETE <code>https://webhook.site/global-variables/globalVariableId</code></p>"},{"location":"api/global-variables.html#response_3","title":"Response","text":"<p><code>204 No content</code></p>"},{"location":"api/groups.html","title":"Groups","text":""},{"location":"api/groups.html#api-endpoints-groups","title":"API Endpoints: Groups","text":"<p>Webhook.site Groups allows you to organize your Tokens. Each Group is a container for multiple Tokens.</p>"},{"location":"api/groups.html#create-group","title":"Create Group","text":"<ul> <li>Requires authentication</li> </ul>"},{"location":"api/groups.html#request","title":"Request","text":"<p>POST <code>https://webhook.site/groups</code></p> <ul> <li><code>name</code> (string) The name of the group.</li> </ul> <pre><code>{\n\"name\": \"My Group\"\n}\n</code></pre>"},{"location":"api/groups.html#response","title":"Response","text":"<pre><code>{\n\"id\": 3498,\n\"team_id\": 12098,\n\"name\": \"My Group\",\n\"updated_at\": \"2023-04-26 18:43:46\",\n\"created_at\": \"2023-04-26 18:43:46\"\n}\n</code></pre>"},{"location":"api/groups.html#get-all-groups","title":"Get all Groups","text":"<ul> <li>Requires authentication</li> </ul>"},{"location":"api/groups.html#request_1","title":"Request","text":"<p>GET <code>https://webhook.site/groups</code></p>"},{"location":"api/groups.html#response_1","title":"Response","text":"<pre><code>{\n\"current_page\": 1,\n\"data\": [\n{\n\"id\": 3498,\n\"team_id\": 12098,\n\"name\": \"My Group\",\n\"created_at\": \"2022-10-26 14:25:11\",\n\"updated_at\": \"2022-10-26 14:25:11\"\n},\n{\n\"id\": 3499,\n\"team_id\": 12098,\n\"name\": \"My nice group\",\n\"created_at\": \"2023-04-26 09:57:40\",\n\"updated_at\": \"2023-04-26 09:57:40\"\n}\n],\n\"first_page_url\": \"https:\\/\\/webhook.site\\/groups?page=1\",\n\"from\": 1,\n\"last_page\": 1,\n\"last_page_url\": \"https:\\/\\/webhook.site\\/groups?page=1\",\n\"next_page_url\": null,\n\"path\": \"https:\\/\\/webhook.site\\/groups\",\n\"per_page\": \"2\",\n\"prev_page_url\": null,\n\"to\": 2,\n\"total\": 2\n}\n</code></pre>"},{"location":"api/groups.html#update-group","title":"Update Group","text":""},{"location":"api/groups.html#request_2","title":"Request","text":"<p>PUT <code>https://webhook.site/groups/groupId</code></p> <p>(See Create Group above for request.)</p>"},{"location":"api/groups.html#response_2","title":"Response","text":"<p>(See Create Group above for response.)</p>"},{"location":"api/groups.html#delete-group","title":"Delete Group","text":""},{"location":"api/groups.html#request_3","title":"Request","text":"<p>DELETE <code>https://webhook.site/groups/groupId</code></p>"},{"location":"api/groups.html#response_3","title":"Response","text":"<p><code>204 No content</code></p>"},{"location":"api/requests.html","title":"Requests","text":""},{"location":"api/requests.html#api-endpoints-requests","title":"API Endpoints: Requests","text":"<p>The Requests API is used to retrieve, manipulate and delete data sent to a given Webhook.site token (URL, E-mail Address or DNSHook.)</p>"},{"location":"api/requests.html#capture-request","title":"Capture request","text":"<ul> <li><code>https://webhook.site/tokenId</code></li> <li><code>https://webhook.site/tokenId/statusCode</code></li> <li><code>https://tokenId.webhook.site</code></li> <li><code>tokenId@emailhook.site</code> (Email)</li> <li><code>tokenId.dnshook.site</code> (DNSHook)</li> </ul> <p>Any HTTP method (GET, POST, PUT, etc.) can be used.</p> <p>Any sub-path, e.g. <code>https://webhook.site/tokenId/api/v1/example</code>, will also be captured.</p> <p>For DNSHooks, all sub-domains, e.g. <code>example.tokenId.dnshook.site</code>, are captured.</p> <p>If <code>statusCode</code> is valid (e.g. 404), that HTTP status will be used in the response (instead of the default.)</p> <p>Instead of <code>tokenId</code>, the alias of the token can also be supplied. </p> <p>The token ID or alias can also be used as a subdomain, e.g. <code>http(s)://tokenId.webhook.site</code>.</p> <p>If the Token has a <code>timeout</code> value, there is a dynamic rate limit of <code>100 \u00f7 timeout</code> requests per minute, e.g. a timeout of 30 allows for 3 requests per minute, and 1 second allows for 100 requests per minute.</p>"},{"location":"api/requests.html#response","title":"Response","text":"<p>The default response (or a response set with e.g. the Modify Response Custom Action) of the Token will be returned.</p>"},{"location":"api/requests.html#get-requests","title":"Get requests","text":"<ul> <li>Can require authentication.</li> <li>Rate limit: 120 requests per minute.</li> </ul> <p>GET <code>https://webhook.site/token/tokenId/requests</code></p> <p>Lists all requests, emails and DNSHooks sent to a token.</p>"},{"location":"api/requests.html#query-string-parameters","title":"Query string parameters","text":"<ul> <li><code>sorting</code> (string) - either <code>newest</code> or <code>oldest</code> (default)</li> <li><code>per_page</code> (int) - amount of requests returned, defaults to 50 (max 100)</li> <li><code>page</code> (int) -  page number to retrieve (default 1)</li> <li><code>date_from</code>, <code>date_to</code> (date string) - filter requests by date, format <code>yyyy-MM-dd HH:mm:ss</code></li> <li><code>query</code> (string) - filter requests by a query string search (see below for examples)</li> </ul>"},{"location":"api/requests.html#search-query-examples","title":"Search query examples","text":"<p>The following fields can be used to filter via the <code>query</code> parameter:</p> <ul> <li><code>uuid</code></li> <li><code>token_id</code></li> <li><code>team_id</code></li> <li><code>type</code></li> <li><code>hostname</code></li> <li><code>size</code></li> <li><code>content</code></li> <li><code>time</code></li> <li><code>created_at</code></li> <li><code>updated_at</code></li> <li><code>custom_action_output</code></li> <li><code>custom_action_errors</code></li> <li><code>note</code></li> <li><code>files.[id]</code></li> <li><code>headers.[header]</code></li> <li><code>method</code> - type <code>web</code> only</li> <li><code>user_agent</code> - type <code>web</code> only</li> <li><code>url</code> - type <code>web</code> only</li> <li><code>ip</code> - type <code>web</code> only</li> <li><code>query.[field]</code> - type <code>web</code> only</li> <li><code>request.[field]</code> - type <code>web</code>only (form fields)</li> <li><code>sender</code> - type <code>email</code> only</li> <li><code>text_content</code> - type <code>email</code> only</li> <li><code>message_id</code> - type <code>email</code> only</li> <li><code>checks.[type]</code> - type <code>email</code> only</li> <li><code>destinations]</code> - type <code>email</code> only</li> </ul> <p>You can filter requests by the following syntax:</p> <ul> <li><code>foobar</code> - if no field is specified, <code>content</code> is searched (equivalent to <code>content:foobar</code>)</li> <li><code>content:foobar</code> - returns requests or emails with body contents containing the word <code>foobar</code></li> <li><code>content:\"de673d0a-6d7b-4c88-ae00-bf0c241e810e\"</code> - if query contains word breaker characters like <code>-</code> or other special characters, surround with quotes to search for the exact string</li> <li><code>method:GET</code> - returns all requests with method GET</li> <li><code>headers.user-agent:\"Paw/3.3.5 (Macintosh; OS X/11.6.2) GCDHTTPRequest\"</code> - search value of user-agent header</li> <li><code>query.action:create</code> - returns requests that have the query string <code>action</code> set to <code>create</code>.</li> <li><code>_exists_:query.action</code> - returns requests where the action query parameter exists</li> <li><code>_exists_:custom_action_errors</code> - returns requests with at least 1 Custom Actions error</li> <li><code>type:web</code> / <code>type:email</code> - returns either Web requests or emails</li> <li><code>type:web AND method:POST</code> - AND query</li> <li><code>method:PUT OR method:POST</code> - OR query</li> <li><code>(method:PUT) AND (content:example OR content:test) AND NOT (content:foobar)</code></li> <li><code>created_at:[\"2022-01-01 00:00:00\" TO \"2022-12-31 00:00:00\"]</code> - date range query</li> <li><code>created_at:[\"2022-01-01 00:00:00\" TO *]</code> - date range query (from date until now)</li> <li><code>created_at:[* TO now-14d]</code> - date range query (in this example, all requests older than 14 days; reference for date expressions)</li> </ul>"},{"location":"api/requests.html#full-url-example","title":"Full URL Example","text":"<p>If you're in doubt about where these parameters go in an API request, take a look below. This URL combines a search query via the <code>query</code> parameter (searching requests containing the word <code>foobar</code>), as well as the <code>sorting</code> and <code>per_page</code> parameters.</p> <p><code>https://webhook.site/token/00000000-0000-0000-0000-000000000000/requests?query=content:foobar&amp;sorting=newest&amp;per_page=10</code></p>"},{"location":"api/requests.html#response_1","title":"Response","text":"<pre><code>{\n\"data\": [\n{\n\"uuid\": \"a2a6a4ae-4130-4063-953a-84fa29d81d43\",\n\"token_id\": \"a94a7294-c4aa-4074-ab77-c4cf86fd53b1\",\n\"ip\": \"127.0.0.1\",\n\"hostname\": \"webhook.site\",\n\"method\": \"POST\",\n\"user_agent\": \"Paw\\/3.1.8 (Macintosh; OS X\\/10.14.6) GCDHTTPRequest\",\n\"content\": \"{\\\"first_name\\\":\\\"Arch\\\",\\\"last_name\\\":\\\"Weber\\\"}\",\n\"query\": {\n\"action\": \"create\"\n},\n\"request\": {\n\"status\": \"example\"\n},\n\"files\": {\n\"file\": {\n\"id\": \"98bf4c25-58ab-4c5d-ba91-fb6f709ea78d\",\n\"filename\": \"example.png\",\n\"size\": 420915,\n\"content_type\": \"image/png\"\n}\n},\n\"headers\": {\n\"content-length\": [\n\"271\"\n],\n\"user-agent\": [\n\"Paw\\/3.1.8 (Macintosh; OS X\\/10.14.6) GCDHTTPRequest\"\n],\n\"request-id\": [\n\"37856131\"\n]\n},\n\"url\": \"https:\\/\\/webhook.site\\/a94a7294-c4aa-4074-ab77-c4cf86fd53b1\\/201?\",\n\"created_at\": \"2019-10-03 19:06:35\",\n\"updated_at\": \"2019-10-03 19:06:35\",\n\"custom_action_output\": []\n}\n],\n\"total\": 1,\n\"per_page\": 50,\n\"current_page\": 1,\n\"is_last_page\": true,\n\"from\": 1,\n\"to\": 1\n}\n</code></pre>"},{"location":"api/requests.html#export-requests-to-csv","title":"Export requests to CSV","text":"<ul> <li>Can require authentication.</li> <li>Rate limit: 3 requests per minute.</li> </ul> <p>GET <code>https://webhook.site/token/tokenId/requests/export</code></p> <p>Returns a CSV file with all requests (maximum 10000.) The amount of columns of the CSV vary depending on the request data headers, query strings, form fields, files, etc.</p>"},{"location":"api/requests.html#query-string-parameters_1","title":"Query string parameters","text":"<ul> <li><code>sorting</code> (string) - either <code>newest</code> or <code>oldest</code> (default)</li> <li><code>per_page</code> (int) - amount of requests returned, defaults to 10000 (max 10000)</li> <li><code>page</code> (int) -  page number to retrieve (default 1)</li> <li><code>date_from</code>, <code>date_to</code> (date string) - filter requests by date, format <code>yyyy-MM-dd HH:mm:ss</code></li> <li><code>query</code> (string) - filter requests by a query string search (see here for examples)</li> </ul>"},{"location":"api/requests.html#response_2","title":"Response","text":"<p><code>200 OK</code></p>"},{"location":"api/requests.html#get-singlelatest-request","title":"Get single/latest request","text":"<ul> <li>Can require authentication.</li> </ul> <p>GET <code>https://webhook.site/token/tokenId/request/requestId</code></p> <p>GET <code>https://webhook.site/token/tokenId/request/latest</code> - retrieves the latest request sent to the URL</p>"},{"location":"api/requests.html#response_3","title":"Response","text":"<pre><code>{\n\"uuid\": \"a2a6a4ae-4130-4063-953a-84fa29d81d43\",\n\"token_id\": \"a94a7294-c4aa-4074-ab77-c4cf86fd53b1\",\n\"ip\": \"127.0.0.1\",\n\"hostname\": \"webhook.site\",\n\"method\": \"POST\",\n\"user_agent\": \"Paw\\/3.1.8 (Macintosh; OS X\\/10.14.6) GCDHTTPRequest\",\n\"content\": \"{\\\"first_name\\\":\\\"Arch\\\",\\\"last_name\\\":\\\"Weber\\\"}\",\n\"note\": null,\n\"query\": {\n\"action\": \"create\"\n},\n\"headers\": {\n\"content-length\": [\n\"271\"\n],\n\"user-agent\": [\n\"Paw\\/3.1.8 (Macintosh; OS X\\/10.14.6) GCDHTTPRequest\"\n]\n},\n\"files\": {\n\"foo\": {\n\"id\": \"65d6e0ce-a840-47bc-b6b6-ff1ff38c34ca\",\n\"filename\": \"example.json\",\n\"size\": 5132873,\n\"content_type\": \"text/plain\"\n}\n},\n\"url\": \"https:\\/\\/webhook.site\\/a94a7294-c4aa-4074-ab77-c4cf86fd53b1\\/201?\",\n\"created_at\": \"2019-10-03 19:06:35\",\n\"updated_at\": \"2019-10-03 19:06:35\"\n}\n</code></pre>"},{"location":"api/requests.html#get-raw-request-content","title":"Get raw request content","text":"<ul> <li>Can require authentication.</li> </ul> <p>GET <code>https://webhook.site/token/tokenId/request/requestId/raw</code></p> <p>GET <code>https://webhook.site/token/tokenId/request/latest/raw</code> - retrieves the latest request sent to the URL</p> <p>Returns the request as a response (body, content-type.)</p>"},{"location":"api/requests.html#response_4","title":"Response","text":"<p><code>200 OK</code></p>"},{"location":"api/requests.html#update-request","title":"Update request","text":"<ul> <li>Can require authentication.</li> </ul> <p>PUT <code>https://webhook.site/token/tokenId/requests/requestId</code></p> <p>Currently only the <code>note</code> field can be updated (max 10.000 characeters).</p>"},{"location":"api/requests.html#request","title":"Request","text":"<pre><code>{\n\"note\": \"Hello world\"\n}\n</code></pre>"},{"location":"api/requests.html#response_5","title":"Response","text":"<p><code>200 OK</code></p>"},{"location":"api/requests.html#set-response","title":"Set Response","text":"<ul> <li>Can require authentication.</li> </ul> <p>PUT <code>https://webhook.site/token/tokenId/requests/requestId/response</code></p> <p>Dynamically sets a response for a specific Webhook.site URL request when the Token has a <code>listen</code> property greater than <code>0</code>. Used for Webhook.site CLI dynamic response forwarding.</p> <p>The data of the <code>content</code> parameter must be base64-encoded.</p>"},{"location":"api/requests.html#request_1","title":"Request","text":"<pre><code>{\n\"content\": \"SGVsbG8gd29ybGQK\",\n\"status\": 200,\n\"headers\": {\n\"Content-Type\": \"text/plain\"\n}\n}\n</code></pre>"},{"location":"api/requests.html#response_6","title":"Response","text":"<p><code>200 OK</code></p> <pre><code>{\n\"status\": true\n}\n</code></pre>"},{"location":"api/requests.html#download-request-file","title":"Download request file","text":"<ul> <li>Can require authentication.</li> </ul> <p>GET <code>https://webhook.site/token/tokenId/request/requestId/download/file ID</code></p> <p>Files that are included in a request or as email attachments are available to download using this endpoint.</p>"},{"location":"api/requests.html#response_7","title":"Response","text":"<p><code>304 Redirect</code></p>"},{"location":"api/requests.html#delete-request","title":"Delete request","text":"<ul> <li>Can require authentication.</li> </ul> <p>DELETE <code>https://webhook.site/token/tokenId/request/requestId</code></p> <p>Deletes a request. </p>"},{"location":"api/requests.html#response_8","title":"Response","text":"<p><code>200 OK</code></p>"},{"location":"api/requests.html#delete-multiple-requests","title":"Delete multiple requests","text":"<ul> <li>Can require authentication.</li> <li>Rate limit: 10 requests per minute.</li> </ul> <p>DELETE <code>https://webhook.site/token/tokenId/request</code></p> <p>Deletes all requests associated with the token, or if <code>query</code>, <code>date_from</code> and/or <code>date_to</code> is specified, only that subset of requests is deleted.</p>"},{"location":"api/requests.html#query-string-parameters_2","title":"Query string parameters","text":"<ul> <li><code>date_from</code>, <code>date_to</code> - filter requests by date, format <code>yyyy-MM-dd HH:mm:ss</code></li> <li><code>query</code> - filter requests by a query string search. See here for examples.</li> </ul>"},{"location":"api/requests.html#full-url-example_1","title":"Full URL Example","text":"<p>A request to the following URL will delete all requests on a Token older than 14 days, due to the <code>query</code> parameter being <code>created_at:[* TO now-14d]</code>. You could use this in a Webhook.site Schedule to delete old requests from a URL periodically.</p> <p><code>https://webhook.site/token/00000000-0000-0000-0000-000000000000/request?query=created_at:[* TO now-14d]</code></p>"},{"location":"api/requests.html#response_9","title":"Response","text":"<p><code>200 OK</code></p>"},{"location":"api/schedules.html","title":"Schedules","text":""},{"location":"api/schedules.html#api-endpoints-schedules","title":"API Endpoints: Schedules","text":"<p>More info about Schedules.</p>"},{"location":"api/schedules.html#create-schedule","title":"Create schedule","text":"<ul> <li>Requires authentication</li> </ul>"},{"location":"api/schedules.html#request","title":"Request","text":"<p>POST <code>https://webhook.site/schedules</code></p> <ul> <li><code>name</code> The name of the schedule.</li> <li><code>interval</code> One of the following interval strings: <code>monthly</code>, <code>weekly</code>, <code>daily</code>, <code>hourly</code>, <code>10-minute</code>, <code>5-minute</code>, <code>1-minute</code>, <code>cron</code></li> <li><code>cron</code> When <code>interval</code> is <code>cron</code>, specify a cron-style interval, e.g. <code>*/5 * * * *</code> for every 5 minutes. Otherwise can be left out.</li> <li><code>request_url</code> The request URL that the schedule should act on.</li> <li><code>request_method</code> HTTP Method (POST, GET, etc.)</li> <li><code>request_body</code> </li> <li><code>request_headers</code> HTTP headers, separated by <code>\\n</code></li> <li><code>timeout</code> Timeout in seconds (min 1, max 30)</li> <li><code>require_body</code> If specified, Webhook.site sends an error notification if response body doesn't contain this string.</li> <li><code>require_status_min</code> If specified, Webhook.site sends an error notification if response status doesn't fit within range.</li> <li><code>require_status_max</code> If specified, Webhook.site sends an error notification if response status doesn't fit within range.</li> </ul> <p>Variables will be replaced in the fields <code>request_url</code>, <code>request_method</code>, <code>request_headers</code> and <code>request_body</code>. More info here.</p> <pre><code>{\n\"name\": \"My schedule\",\n\"interval\": \"5-minute\",\n\"request_url\": \"https://example.com\",\n\"request_method\": \"POST\",\n\"request_body\": \"{\\\"json\\\": \\\"message\\\"}\",\n\"request_headers\": \"Authorization: Bearer mytoken\\nContent-Type: application/json\"\n}\n</code></pre>"},{"location":"api/schedules.html#response","title":"Response","text":"<pre><code>{\n\"name\": \"My schedule\",\n\"interval\": \"5-minute\",\n\"request_url\": \"https:\\/\\/example.com\",\n\"request_method\": \"POST\",\n\"request_body\": \"{\\\"json\\\": \\\"message\\\"}\",\n\"request_headers\": \"Authorization: Bearer mytoken\\nContent-Type: application\\/json\",\n\"require_body\": null,\n\"require_status_min\": null,\n\"require_status_max\": null,\n\"user_id\": 21,\n\"updated_at\": \"2021-05-01 13:27:25\",\n\"created_at\": \"2021-05-01 13:27:25\",\n\"id\": 58\n}\n</code></pre>"},{"location":"api/schedules.html#get-all-schedules","title":"Get all schedules","text":"<p>GET <code>https://webhook.site/schedules?page=1&amp;per_page=15</code></p>"},{"location":"api/schedules.html#response_1","title":"Response","text":"<pre><code>{\n\"current_page\": 1,\n\"data\": [\n{\n\"id\": 58,\n\"name\": \"My schedule\",\n\"interval\": \"5-minute\",\n\"cron\": null,\n\"user_id\": 21,\n\"request_method\": \"POST\",\n\"request_url\": \"https:\\/\\/example.com\",\n\"request_headers\": \"Authorization: Bearer mytoken\\nContent-Type: application\\/json\",\n\"request_body\": \"{\\\"json\\\": \\\"message\\\"}\",\n\"timeout\": 5,\n\"require_body\": null,\n\"require_status_min\": null,\n\"require_status_max\": null,\n\"last_run_at\": null,\n\"last_status\": null,\n\"created_at\": \"2021-05-01 13:27:25\",\n\"updated_at\": \"2021-05-01 13:27:25\"\n}\n],\n\"first_page_url\": \"https:\\/\\/webhook.site\\/schedules?page=1\",\n\"from\": 1,\n\"last_page\": 1,\n\"last_page_url\": \"https:\\/\\/webhook.site\\/schedules?page=1\",\n\"next_page_url\": null,\n\"path\": \"https:\\/\\/webhook.site\\/schedules\",\n\"per_page\": 15,\n\"prev_page_url\": null,\n\"to\": 6,\n\"total\": 6\n}\n</code></pre>"},{"location":"api/schedules.html#get-single-schedule","title":"Get single schedule","text":""},{"location":"api/schedules.html#request_1","title":"Request","text":"<p>GET <code>https://webhook.site/schedules/scheduleId</code></p>"},{"location":"api/schedules.html#response_2","title":"Response","text":"<pre><code>{\n\"id\": 58,\n\"name\": \"My schedule\",\n\"interval\": \"5-minute\",\n\"cron\": null,\n\"user_id\": 21,\n\"request_method\": \"POST\",\n\"request_url\": \"https:\\/\\/example.com\",\n\"request_headers\": \"Authorization: Bearer mytoken\\nContent-Type: application\\/json\",\n\"request_body\": \"{\\\"json\\\": \\\"message\\\"}\",\n\"timeout\": 5,\n\"require_body\": null,\n\"require_status_min\": null,\n\"require_status_max\": null,\n\"last_run_at\": null,\n\"last_status\": null,\n\"created_at\": \"2021-05-01 13:27:25\",\n\"updated_at\": \"2021-05-01 13:27:25\"\n}\n</code></pre>"},{"location":"api/schedules.html#update-schedule","title":"Update schedule","text":""},{"location":"api/schedules.html#request_2","title":"Request","text":"<p>PUT <code>https://webhook.site/schedules/scheduleId</code></p> <p>(See Create schedule above for request.)</p>"},{"location":"api/schedules.html#response_3","title":"Response","text":"<p>(See Get single schedule for response.)</p>"},{"location":"api/schedules.html#delete-schedule","title":"Delete schedule","text":""},{"location":"api/schedules.html#request_3","title":"Request","text":"<p>DELETE <code>https://webhook.site/schedules/scheduleId</code></p>"},{"location":"api/schedules.html#response_4","title":"Response","text":"<p><code>204 No content</code></p>"},{"location":"api/schedules.html#run-schedule-now","title":"Run Schedule Now","text":""},{"location":"api/schedules.html#request_4","title":"Request","text":"<p>POST <code>https://webhook.site/schedules/scheduleId/run-now</code></p>"},{"location":"api/schedules.html#get-schedule-logs","title":"Get Schedule Logs","text":"<p>GET <code>https://webhook.site/schedules/scheduleId/logs</code></p> <p>Set <code>Accept</code> header to <code>application/json</code>.</p> <p>Rate limit: 60 requests per minute.</p>"},{"location":"api/schedules.html#query-string-parameters","title":"Query string parameters","text":"<ul> <li><code>sorting</code> (string) - either <code>newest</code> or <code>oldest</code> (default)</li> </ul>"},{"location":"api/schedules.html#response_5","title":"Response","text":"<pre><code>{\n\"data\": [\n{\n\"id\": 2,\n\"schedule_id\": 1,\n\"response_status\": 200,\n\"response_headers\": {\n\"Age\": [\n\"447707\"\n],\n\"Cache-Control\": [\n\"max-age=604800\"\n],\n\"Content-Type\": [\n\"text\\/html; charset=UTF-8\"\n]\n},\n\"response_body\": \"&lt;!doctype html&gt;\\n&lt;html&gt;\\n&lt;head&gt;...\",\n\"time\": 0.23,\n\"error\": null,\n\"created_at\": \"2022-11-06 19:27:09\",\n\"updated_at\": \"2022-11-06 19:27:09\"\n},\n{\n\"id\": 3,\n\"schedule_id\": 1,\n\"response_status\": 200,\n\"response_headers\": {\n\"Age\": [\n\"404973\"\n],\n\"Cache-Control\": [\n\"max-age=604800\"\n],\n\"Content-Type\": [\n\"text\\/html; charset=UTF-8\"\n]\n},\n\"response_body\": \"&lt;!doctype html&gt;\\n&lt;html&gt;\\n&lt;head&gt;...\",\n\"time\": 1.23,\n\"error\": null,\n\"created_at\": \"2022-11-06 19:30:02\",\n\"updated_at\": \"2022-11-06 19:30:02\"\n}\n],\n\"current_page\": 1,\n\"first_page_url\": \"https:\\/\\/webhook.site\\/control-panel\\/schedules\\/1\\/logs?page=1\",\n\"from\": 1,\n\"last_page\": 1,\n\"last_page_url\": \"https:\\/\\/webhook.site\\/control-panel\\/schedules\\/1\\/logs?page=1\",\n\"next_page_url\": null,\n\"path\": \"https:\\/\\/webhook.site\\/control-panel\\/schedules\\/1\\/logs\",\n\"per_page\": 15,\n\"prev_page_url\": null,\n\"to\": 2,\n\"total\": 2\n}\n</code></pre>"},{"location":"api/templates.html","title":"Templates","text":""},{"location":"api/templates.html#api-endpoints-templates","title":"API Endpoints: Templates","text":"<p>Webhook.site Templates allows you to create templates of actions, and re-use these templates with the Include Template Custom Action.</p> <p>To include a Template in a Custom Actions flow, use the Template Action Type.</p>"},{"location":"api/templates.html#create-template","title":"Create Template","text":"<ul> <li>Requires authentication</li> </ul>"},{"location":"api/templates.html#request","title":"Request","text":"<p>POST <code>https://webhook.site/templates</code></p> <ul> <li><code>name</code> The name of the template.</li> <li><code>actions</code> An array of objects containing Custom Actions. All parameters of actions except <code>disabled</code> can be used. More info here</li> <li><code>variables</code> An array of name-value objects containing predefined variables. These variables are defined before the action runs, and are available to any subsequent actions after the template is included.</li> </ul> <pre><code>{\n\"actions\": [\n{\n\"name\": null,\n\"type\": \"conditions\",\n\"queue\": false,\n\"delay\": 0,\n\"condition\": null,\n\"parameters\": {\n\"conditions\": [\n{\n\"input\": \"$date$\",\n\"operator\": \"eq\",\n\"value\": \"$post-news-last-date$\"\n}\n],\n\"mode\": \"all\",\n\"action\": \"stop\"\n},\n\"order\": 2\n},\n{\n\"name\": null,\n\"type\": \"twitter_tweet\",\n\"queue\": false,\n\"delay\": 0,\n\"condition\": null,\n\"parameters\": {\n\"provider_id\": \"501133\",\n\"tweet\": \"$tweet$\"\n},\n\"order\": 3\n},\n{\n\"name\": null,\n\"type\": \"store_global_variable\",\n\"queue\": false,\n\"delay\": 0,\n\"condition\": null,\n\"parameters\": {\n\"name\": \"post-news-last-date\",\n\"value\": \"$date$\"\n},\n\"order\": 4\n}\n],\n\"name\": \"My Template\",\n\"variables\": [\n{\n\"name\": \"example\",\n\"value\": \"hello world\"\n}\n],\n}\n</code></pre>"},{"location":"api/templates.html#response","title":"Response","text":"<pre><code>{\n\"name\": \"My Template\",\n\"variables\": [\n{\n\"name\": \"example\",\n\"value\": \"hello world\"\n}\n],\n\"team_id\": 1,\n\"updated_at\": \"2024-02-20T10:01:29.000000Z\",\n\"created_at\": \"2024-02-20T10:01:29.000000Z\",\n\"id\": 21,\n\"actions\": [\n{\n\"condition\": null,\n\"delay\": 0,\n\"parameters\": {\n\"mode\": \"all\",\n\"conditions\": [\n{\n\"input\": \"$date$\",\n\"operator\": \"eq\",\n\"value\": \"$post-news-last-date$\"\n}\n],\n\"action\": \"stop\"\n},\n\"token_id\": \"f1bd342e-c98b-4ac4-bf3f-c35f1f338161\",\n\"type\": \"conditions\",\n\"order\": 2,\n\"name\": null,\n\"template_id\": 21,\n\"uuid\": \"9b615454-3c64-4da2-a2f7-d524797a8925\",\n\"updated_at\": \"2024-02-20T10:01:29.000000Z\",\n\"created_at\": \"2024-02-20T10:01:29.000000Z\"\n},\n{\n\"condition\": null,\n\"delay\": 0,\n\"parameters\": {\n\"tweet\": \"$tweet$\",\n\"provider_id\": \"501133\"\n},\n\"token_id\": \"f1bd342e-c98b-4ac4-bf3f-c35f1f338161\",\n\"type\": \"twitter_tweet\",\n\"order\": 3,\n\"name\": null,\n\"template_id\": 21,\n\"uuid\": \"9b615454-3ce7-4c63-bc8b-3412694ae633\",\n\"updated_at\": \"2024-02-20T10:01:29.000000Z\",\n\"created_at\": \"2024-02-20T10:01:29.000000Z\"\n},\n{\n\"condition\": null,\n\"delay\": 0,\n\"parameters\": {\n\"name\": \"post-news-last-date\",\n\"value\": \"$date$\"\n},\n\"token_id\": \"f1bd342e-c98b-4ac4-bf3f-c35f1f338161\",\n\"type\": \"store_global_variable\",\n\"order\": 4,\n\"name\": null,\n\"template_id\": 21,\n\"uuid\": \"9b615454-3d5f-4cd6-bd4b-94b55e6f6f2f\",\n\"updated_at\": \"2024-02-20T10:01:29.000000Z\",\n\"created_at\": \"2024-02-20T10:01:29.000000Z\"\n}\n]\n}\n</code></pre>"},{"location":"api/templates.html#get-all-templates","title":"Get all Templates","text":"<ul> <li>Requires authentication</li> </ul>"},{"location":"api/templates.html#request_1","title":"Request","text":"<p>GET <code>https://webhook.site/templates</code></p>"},{"location":"api/templates.html#response_1","title":"Response","text":"<pre><code>{\n\"current_page\": 1,\n\"data\": [\n{\n\"name\": \"My Template\",\n\"variables\": [\n{\n\"name\": \"example\",\n\"value\": \"hello world\"\n}\n],\n\"team_id\": 1,\n\"updated_at\": \"2024-02-20T10:01:29.000000Z\",\n\"created_at\": \"2024-02-20T10:01:29.000000Z\",\n\"id\": 21,\n\"actions\": [\n{\n\"condition\": null,\n\"delay\": 0,\n\"parameters\": {\n\"mode\": \"all\",\n\"conditions\": [\n{\n\"input\": \"$date$\",\n\"operator\": \"eq\",\n\"value\": \"$post-news-last-date$\"\n}\n],\n\"action\": \"stop\"\n},\n\"token_id\": \"f1bd342e-c98b-4ac4-bf3f-c35f1f338161\",\n\"type\": \"conditions\",\n\"order\": 2,\n\"name\": null,\n\"template_id\": 21,\n\"uuid\": \"9b615454-3c64-4da2-a2f7-d524797a8925\",\n\"updated_at\": \"2024-02-20T10:01:29.000000Z\",\n\"created_at\": \"2024-02-20T10:01:29.000000Z\"\n},\n{\n\"condition\": null,\n\"delay\": 0,\n\"parameters\": {\n\"tweet\": \"$tweet$\",\n\"provider_id\": \"501133\"\n},\n\"token_id\": \"f1bd342e-c98b-4ac4-bf3f-c35f1f338161\",\n\"type\": \"twitter_tweet\",\n\"order\": 3,\n\"name\": null,\n\"template_id\": 21,\n\"uuid\": \"9b615454-3ce7-4c63-bc8b-3412694ae633\",\n\"updated_at\": \"2024-02-20T10:01:29.000000Z\",\n\"created_at\": \"2024-02-20T10:01:29.000000Z\"\n},\n{\n\"condition\": null,\n\"delay\": 0,\n\"parameters\": {\n\"name\": \"post-news-last-date\",\n\"value\": \"$date$\"\n},\n\"token_id\": \"f1bd342e-c98b-4ac4-bf3f-c35f1f338161\",\n\"type\": \"store_global_variable\",\n\"order\": 4,\n\"name\": null,\n\"template_id\": 21,\n\"uuid\": \"9b615454-3d5f-4cd6-bd4b-94b55e6f6f2f\",\n\"updated_at\": \"2024-02-20T10:01:29.000000Z\",\n\"created_at\": \"2024-02-20T10:01:29.000000Z\"\n}\n]\n}\n],\n\"first_page_url\": \"https:\\/\\/webhook.site\\/templates?page=1\",\n\"from\": 1,\n\"last_page\": 1,\n\"last_page_url\": \"https:\\/\\/webhook.site\\/templates?page=1\",\n\"links\": [\n{\n\"url\": null,\n\"label\": \"&amp;laquo; Previous\",\n\"active\": false\n},\n{\n\"url\": \"https:\\/\\/webhook.site\\/templates?page=1\",\n\"label\": \"1\",\n\"active\": true\n},\n{\n\"url\": null,\n\"label\": \"Next &amp;raquo;\",\n\"active\": false\n}\n],\n\"next_page_url\": null,\n\"path\": \"https:\\/\\/webhook.site\\/templates\",\n\"per_page\": 15,\n\"prev_page_url\": null,\n\"to\": 1,\n\"total\": 1\n}\n</code></pre>"},{"location":"api/templates.html#update-template","title":"Update Template","text":""},{"location":"api/templates.html#request_2","title":"Request","text":"<p>PUT <code>https://webhook.site/templates/templateId</code></p> <p>(See Create Template above for request.)</p>"},{"location":"api/templates.html#response_2","title":"Response","text":"<p>(See Create Template above for response.)</p>"},{"location":"api/templates.html#delete-template","title":"Delete Template","text":""},{"location":"api/templates.html#request_3","title":"Request","text":"<p>DELETE <code>https://webhook.site/templates/templateId</code></p>"},{"location":"api/templates.html#response_3","title":"Response","text":"<p><code>204 No content</code></p>"},{"location":"api/tokens.html","title":"Tokens (URLs)","text":""},{"location":"api/tokens.html#api-endpointstokens-urls-email-addresses","title":"API Endpoints:Tokens (URLs &amp; Email Addresses)","text":"<p>A token is a container for incoming requests and emails, and corresponds to a Webhook.site URL or Email. A token ID is a 36 character UUID consisting of hexadecimal characters and dashes.</p> <p>Simply, the token ID is the part after <code>https://webhook.site/</code> in the URL, or before <code>@email.webhook.site</code> in the email address.</p>"},{"location":"api/tokens.html#create-token","title":"Create token","text":"<ul> <li>Can require authentication.</li> <li>Rate limit: 10 per minute (free); 60 per minute (Pro and Enterprise)</li> </ul> <p>POST <code>https://webhook.site/token</code></p> <p>After creating a token, HTTP requests, emails and DNSHooks can be captured.</p>"},{"location":"api/tokens.html#request","title":"Request","text":"<ul> <li><code>default_status</code> (int, 200-599, default 200) sets the default response status of the URL</li> <li><code>default_content</code> (string) sets the default response content of the URL</li> <li><code>default_content_type</code> (string, default <code>text/html</code>) sets the default response content type of the URL (to set other headers, take a look at the Modify Response action.)</li> <li><code>timeout</code> (int) amount of seconds to sleep before returning the response, max 30. Intended for testing timeouts, requests to tokens with timeouts are rate limited; a high timeout value will incur a lower rate limit.</li> <li><code>listen</code> (int) amount of seconds to listen for a response from the Set Response endpoint. <code>0</code> to disable, max <code>10</code>. Default <code>0</code>.</li> <li><code>expiry</code> (int) amount of seconds until token auto-expiration. Max value (and default for non-upgraded URLs) is 604800 (one week). Intended for e.g. automated testing pipelines. Leave out or set to <code>null</code> to disable.</li> <li><code>request_limit</code> (int) - limits the request history of the Token, from 0 (no data stored on Webhook.site servers) to 10000 (default)</li> <li><code>cors</code> (bool) set to true will add CORS headers to the request so browsers will send cross-domain requests to the URL</li> <li><code>alias</code> (string, regex:<code>[a-zA-Z0-9-_]{3,32}</code>) allows setting the alias of the token.</li> <li><code>actions</code> (bool) specifies if Custom Actions are enabled and executed on every request/email (true), or disabled (false.)</li> <li><code>clone_from</code> (uuid string) specifies a token UUID (or alias) that will act as a template for the new token. When specified, settingssuch as default content, timeout, password as well as Custom Actions are copied to the new token.</li> <li><code>group_id</code> (int) specifies which group ID the token should be added to.</li> </ul> <pre><code>{\n\"default_status\": 200,\n\"default_content\": \"Hello world!\",\n\"default_content_type\": \"text/html\",\n\"timeout\": 0,\n\"cors\": false,\n\"expiry\": 604800,\n\"alias\": \"my-webhook\",\n\"actions\": true\n}\n</code></pre>"},{"location":"api/tokens.html#response","title":"Response","text":"<p><code>200 OK</code></p> <pre><code>{\n\"uuid\": \"9981f9f4-657a-4ebf-be7c-1915bedd4775\",\n\"redirect\": false,\n\"alias\": null,\n\"timeout\": 0,\n\"premium\": true,\n\"ip\": \"127.0.0.1\",\n\"user_agent\": \"Paw\\/3.1.8 (Macintosh; OS X\\/10.14.6) GCDHTTPRequest\",\n\"default_content\": \"Hello world!\",\n\"default_status\": 200,\n\"default_content_type\": \"text\\/plain\",\n\"premium_expires_at\": \"2019-10-22 10:52:20\",\n\"created_at\": \"2019-09-22 10:52:20\",\n\"updated_at\": \"2019-09-22 10:52:20\",\n\"expires_at\": \"2019-09-29 10:52:20\"\n}\n</code></pre>"},{"location":"api/tokens.html#get-token-list","title":"Get token list","text":"<ul> <li>Requires authentication</li> </ul>"},{"location":"api/tokens.html#request_1","title":"Request","text":"<p>GET <code>https://webhook.site/token</code></p> <p>Returns a list of all Tokens associated with an account.</p>"},{"location":"api/tokens.html#query-string-parameters","title":"Query string parameters","text":"<ul> <li><code>per_page</code> - amount of requests returned, defaults to 50 (max 100)</li> <li><code>page</code> -  page number to retrieve (default 1)</li> <li><code>order_by</code> - which field to order tokens by (<code>created_at</code> (default) or <code>token_id</code>)</li> <li><code>order_direction</code> - order direction (<code>asc</code> (default) or <code>desc</code>)</li> </ul>"},{"location":"api/tokens.html#response_1","title":"Response","text":"<pre><code>{\n\"current_page\": 1,\n\"data\": [\n{\n\"uuid\": \"44fb1548-cd1f-4928-880c-cce094e5e179\",\n\"redirect\": false,\n\"alias\": null,\n\"actions\": true,\n\"cors\": false,\n\"expiry\": false,\n\"timeout\": 0,\n\"premium\": true,\n\"user_id\": null,\n\"password\": true,\n\"ip\": \"127.0.0.1\",\n\"user_agent\": \"Mozilla\\/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit\\/605.1.15 (KHTML, like Gecko) Version\\/14.0.3 Safari\\/605.1.15\",\n\"default_content\": \"\",\n\"default_status\": 200,\n\"default_content_type\": \"text\\/plain\",\n\"premium_expires_at\": null,\n\"created_at\": \"2021-08-11 18:34:44\",\n\"updated_at\": \"2021-08-11 18:34:44\",\n\"latest_request_id\": \"ea5f5920-0398-465c-8f9c-8074f0d805a4\",\n\"latest_request_at\": \"2021-08-12 19:56:50\",\n\"group_id\": null,\n\"requests\": 1\n},\n...\n],\n\"first_page_url\": \"https:\\/\\/webhook.site\\/token?page=1\",\n\"from\": 1,\n\"last_page\": 1,\n\"last_page_url\": \"https:\\/\\/webhook.site\\/token?page=1\",\n\"next_page_url\": null,\n\"path\": \"https:\\/\\/webhook.site\\/token\",\n\"per_page\": 50,\n\"prev_page_url\": null,\n\"to\": 2,\n\"total\": 2\n}\n</code></pre>"},{"location":"api/tokens.html#get-token","title":"Get token","text":"<ul> <li>Can require authentication.</li> </ul> <p>GET <code>https://webhook.site/token/tokenId</code></p>"},{"location":"api/tokens.html#response_2","title":"Response","text":"<p>See POST <code>/token</code></p>"},{"location":"api/tokens.html#update-token","title":"Update token","text":"<ul> <li>Can require authentication.</li> </ul> <p>PUT <code>https://webhook.site/token/tokenId</code></p>"},{"location":"api/tokens.html#request_2","title":"Request","text":"<p>See POST <code>/token</code></p>"},{"location":"api/tokens.html#response_3","title":"Response","text":"<p>See POST <code>/token</code></p>"},{"location":"api/tokens.html#delete-token","title":"Delete token","text":"<ul> <li>Can require authentication.</li> </ul> <p>DELETE <code>https://webhook.site/token/tokenId</code></p>"},{"location":"api/tokens.html#response_4","title":"Response","text":"<p><code>204 No Content</code></p>"},{"location":"api/users.html","title":"Users","text":""},{"location":"api/users.html#api-endpoints-users","title":"API Endpoints: Users","text":""},{"location":"api/users.html#invite-user","title":"Invite User","text":"<ul> <li>Requires authentication</li> <li>Requires Administrator user type</li> </ul> <p>If part of a SSO-enabled Webhook.site Team, the user is sent a login URL where they can log in immediately. Otherwise, they are sent a link to a page where they can set up their profile and password.</p>"},{"location":"api/users.html#request","title":"Request","text":"<p>POST <code>https://webhook.site/users/invite</code></p> <ul> <li><code>name</code> (string) The name of the user.</li> <li><code>email</code> (string) The user's email, and where the invite is sent.</li> <li><code>user_type_id</code> (int) One of: <code>100</code> (Administrator), <code>200</code> (Member),  <code>300</code> (Viewer)</li> </ul> <pre><code>{\n\"name\": \"Elijah Craig\",\n\"email\": \"ej@example.com\",\n\"user_type_id\": 300,\n\"role_id\": 20001\n}\n</code></pre>"},{"location":"api/users.html#response","title":"Response","text":"<pre><code>{\n\"id\": 30001\n\"name\": \"Elijah Craig\",\n\"email\": \"ej@example.com\",\n\"user_type_id\": 300\n\"team_id\": 10001,\n\"roles\": [\n{\n\"id\": 20001,\n\"team_id\": 10001,\n\"name\": \"Test Role\",\n\"created_at\": \"2024-10-15T10:19:07.000000Z\",\n\"updated_at\": \"2025-02-17T12:00:48.000000Z\"\n}\n]\n\"updated_at\": \"2025-09-29T08:18:56.000000Z\",\n\"created_at\": \"2025-09-29T08:18:56.000000Z\"\n}\n</code></pre>"},{"location":"api/users.html#get-all-users","title":"Get all Users","text":"<ul> <li>Requires authentication</li> <li>Requires Administrator user type</li> </ul>"},{"location":"api/users.html#request_1","title":"Request","text":"<p>GET <code>https://webhook.site/users</code></p>"},{"location":"api/users.html#response_1","title":"Response","text":"<pre><code>{\n\"current_page\": 1,\n\"data\": [\n{\n\"id\": 1001,\n\"name\": \"Jim Beam\",\n\"email\": \"jb@example.com\",\n\"two_factor_enabled\": 0,\n\"created_at\": \"2020-01-08T21:34:25.000000Z\",\n\"updated_at\": \"2025-02-27T10:50:13.000000Z\",\n\"last_login_at\": \"2025-09-29T07:59:15.000000Z\",\n\"team_id\": 10001,\n\"user_type_id\": 100\n},\n{\n\"id\": 30001\n\"name\": \"Elijah Craig\",\n\"email\": \"ej@example.com\",\n\"two_factor_enabled\": 0,\n\"created_at\": \"2025-02-13T13:22:48.000000Z\",\n\"updated_at\": \"2025-08-01T16:05:20.000000Z\",\n\"last_login_at\": \"2025-09-23T07:52:15.000000Z\",\n\"team_id\": 10001,\n\"user_type_id\": 300\n}\n],\n\"first_page_url\": \"https:\\/\\/webhook.site\\/users?page=1\",\n\"from\": 1,\n\"last_page\": 1,\n\"last_page_url\": \"https:\\/\\/webhook.site\\/users?page=1\",\n\"links\": [\n{\n\"url\": null,\n\"label\": \"&amp;laquo; Previous\",\n\"active\": false\n},\n{\n\"url\": \"https:\\/\\/webhook.site\\/users?page=1\",\n\"label\": \"1\",\n\"active\": true\n},\n{\n\"url\": null,\n\"label\": \"Next &amp;raquo;\",\n\"active\": false\n}\n],\n\"next_page_url\": null,\n\"path\": \"https:\\/\\/webhook.site\\/users\",\n\"per_page\": 15,\n\"prev_page_url\": null,\n\"to\": 2,\n\"total\": 2\n}\n</code></pre>"},{"location":"api/users.html#update-user","title":"Update User","text":""},{"location":"api/users.html#request_2","title":"Request","text":"<p>PUT <code>https://webhook.site/users/userId</code></p> <ul> <li><code>name</code> (string) The name of the user.</li> <li><code>email</code> (string)</li> <li><code>user_type_id</code> (int) One of: <code>100</code> (Administrator), <code>200</code> (Member),  <code>300</code> (Viewer)</li> </ul> <pre><code>{\n\"name\": \"Elijah Craig\",\n\"email\": \"ej@example.com\",\n\"user_type_id\": 300,\n\"role_id\": 20001,\n}\n</code></pre>"},{"location":"api/users.html#response_2","title":"Response","text":"<p>(See Create User above for response.)</p>"},{"location":"api/users.html#delete-user","title":"Delete User","text":""},{"location":"api/users.html#request_3","title":"Request","text":"<p>DELETE <code>https://webhook.site/users/userId</code></p>"},{"location":"api/users.html#response_3","title":"Response","text":"<p><code>204 No content</code></p>"},{"location":"api/websocket.html","title":"WebSocket","text":""},{"location":"api/websocket.html#websocket","title":"WebSocket","text":"<p>You can connect to Webhook.site's WebSocket server (<code>https://ws.webhook.site</code>) and listen for incoming requests, emails and DNSHooks in your own application. Alternatively, you can use Webhook.site CLI.</p> <p>If you listen to a token associated with a Webhook.site account, you must specify an API key. </p>"},{"location":"api/websocket.html#examples","title":"Examples","text":""},{"location":"api/websocket.html#javascript","title":"JavaScript","text":"<p>First, install dependencies: <code>npm install socket.io-client@2</code> (version 2.x is required)</p> <pre><code>const io = require(\"socket.io-client\");\n// Replace these with your actual API key and token ID\nlet apiKey = \"000-000...\";\nlet tokenId = \"111-111...\";\nconst socket = io(\"https://ws.webhook.site\");\nsocket.on(\"connect_error\", (e) =&gt; console.log('Connection error', e));\nsocket.on(\"error\", (e) =&gt; console.log('Connection error', e));\nsocket.on(\"connect\", () =&gt; {\nsocket.emit(\"subscribe\", {\nchannel: `private-token.${tokenId}`,\nauth: {headers: apiKey ? {\"Api-Key\": apiKey} : {}}\n});\nconsole.log(\"Subscribed to channel\");\n});\nsocket.on(\"request.created\", (channel, data) =&gt; {\nconsole.log(`Received event on channel ${channel}`);\nconsole.dir(data, {depth: null});\n});\n</code></pre>"},{"location":"api/websocket.html#python","title":"Python","text":"<p>First, install dependencies: <code>pip install \"python-socketio[client]\"</code></p> <pre><code>import socketio\nimport pprint\napi_key = '000-000...'\ntoken_id = '111-111...'\n# Create a Socket.IO client\nsio = socketio.Client()\n@sio.event\ndef disconnect():\nprint(\"Disconnected from server\")\n@sio.event\ndef connect():\nsio.emit(\"subscribe\", {\n\"channel\": f'private-token.{token_id}',\n\"auth\": {\n\"headers\": {\n\"Api-Key\": api_key\n}\n}\n})\nprint(f\"Subscribed to channel\")\n@sio.on(\"request.created\")\ndef on_message(channel, data):\nprint(f\"Received event on channel {channel}\")\npprint.pprint(data)\n# Connect with headers for authentication\nsio.connect(\n'https://ws.webhook.site',\ntransports=['websocket']\n)\n# Keep the script running\nsio.wait()\n</code></pre>"},{"location":"custom-actions/action-types.html","title":"Action Types","text":""},{"location":"custom-actions/action-types.html#text","title":"Text","text":""},{"location":"custom-actions/action-types.html#extract-json","title":"Extract JSON","text":"<p>This action automatically converts all JSON properties/fields to Variables.</p> Auto JSON in action <p>Per default, the action works on the JSON found in the <code>$request.content$</code> variable, e.g. the request body data. </p> <p>If the JSONPath parameter is specified, this can be used to limit the variable creation to only the subset of data specified by the JSONPath query.</p>"},{"location":"custom-actions/action-types.html#extract-json-example","title":"Extract JSON Example","text":"<p>If the following data is specified in the Source parameter:</p> <pre><code>{\n\"Actors\": [\n{\n\"name\": \"Tom Cruise\",\n\"age\": 56,\n\"Born At\": \"Syracuse, NY\",\n\"Birthdate\": \"July 3, 1962\",\n\"photo\": \"https://jsonformatter.org/img/tom-cruise.jpg\"\n},\n{\n\"name\": \"Robert Downey Jr.\",\n\"age\": 53,\n\"Born At\": \"New York City, NY\",\n\"Birthdate\": \"April 4, 1965\",\n\"photo\": \"https://jsonformatter.org/img/Robert-Downey-Jr.jpg\"\n}\n]\n}\n</code></pre> <p>If the JSONPath parameter is empty, the following 10 variables will be created:</p> Variable Name Value <code>$json.Actors.0.name$</code> Tom Cruise <code>$json.Actors.0.age$</code> 56 <code>$json.Actors.0.Born At$</code> Syracuse, NY <code>$json.Actors.0.Birthdate$</code> July 3, 1962 <code>$json.Actors.0.photo$</code> https://example.com/tom-cruise.jpg <code>$json.Actors.1.name$</code> Robert Downey Jr. <code>$json.Actors.1.age$</code> 53 <code>$json.Actors.1.Born At$</code> New York City, NY <code>$json.Actors.1.Birthdate$</code> April 4, 1965 <code>$json.Actors.1.photo$</code> https://example.com/Robert-Downey-Jr.jpg <p>If the JSONPath parameter is set to <code>.Actors.0</code>, only the following 5 variables are created:</p> Variable Name Value <code>$json.0.name$</code> Tom Cruise <code>$json.0.age$</code> 56 <code>$json.0.Born At$</code> Syracuse, NY <code>$json.0.Birthdate$</code> July 3, 1962 <code>$json.0.photo$</code> https://example.com/tom-cruise.jpg"},{"location":"custom-actions/action-types.html#extract-jsonpath","title":"Extract JSONPath","text":"<p>Warning</p> <p>This action has been deprecated and can no longer be chosen. We recommend using the Extract JSON action as it supports creating multiple variables in one go, saving you from creating duplicate actions.</p> <p>This action runs a JSONPath query on the contents of a request. With it, you can extract any data from a JSON document and store it in a variable, which can then be used in a downstream action.</p> <p>JSONPath is very similar to the <code>jq</code> commandline utility.</p>"},{"location":"custom-actions/action-types.html#jsonpath-examples","title":"JSONPath Examples","text":"<p>Example data:</p> <pre><code>{\n\"store\": {\n\"name\": \"Cool Books Ltd\",\n\"books\": [\n{\n\"title\": \"12 Rules for Life\",\n\"author\": \"Jordan B. Peterson\",\n\"author.age\": 60,\n\"price\": 10,\n\"isbn\": \"13123123123\"\n},\n{\n\"title\": \"How to Win Friends and Influence People\",\n\"author\": \"Dale Carnegie\",\n\"price\": 9,\n\"isbn\": \"23482394\"\n}\n]\n}\n}\n</code></pre> JSONPath Result <code>.store.name</code> <code>name</code> property of <code>store</code> object <code>.store.books[0][\"author.age\"]</code> author age of first book (bracket syntax can be useful for e.g. keys containing periods) <code>$.store.books[*].author</code> the authors of all books in the store <code>$..author</code> all authors <code>$.store..price</code> the price of everything in the store. <code>$..books[2]</code> the third book <code>$..books[(@.length-1)]</code> the last book in order. <code>$..books[-1:]</code> the last book in order. <code>$..books[0,1]</code> the first two books <code>$..books[:2]</code> the first two books <code>$..books[::2]</code> every second book starting from first one <code>$..books[1:6:3]</code> every third book starting from 1 till 6 <code>$..books[?(@.isbn)]</code> filter all books with isbn number property <code>$..books[?(@.isbn != '')]</code> filter all books with isbn that isn't null or <code>\"\"</code> (empty string.) (Bracket syntax can also be used here, e.g. <code>.values[?(@['my value'] != '')]</code>) <code>$..books[?(@.price&lt;10)]</code> filter all books cheaper than 10 <code>$..*</code> all elements in the data (recursively extracted)"},{"location":"custom-actions/action-types.html#jsonpath-syntax","title":"JSONPath Syntax","text":"Symbol Description <code>$</code> The root object/element (not strictly necessary) <code>@</code> The current object/element <code>.</code> or <code>[]</code> Child operator <code>..</code> Recursive descent <code>*</code> Wildcard. All child elements regardless their index. <code>[,]</code> Array indices as a set <code>[start:end:step]</code> Array slice operator borrowed from ES4/Python. <code>?()</code> Filters a result set by a script expression <code>()</code> Uses the result of a \"script\" expression as the index <p>For more details on what's possible with JSONPath, take a look at the docs.</p> <p>As you start entering a JSONPath, the results are validated and shown next to the input field.</p>"},{"location":"custom-actions/action-types.html#validate-json","title":"Validate JSON","text":"<p>Allows validating that a given input is valid, parsable JSON \u2013 optionally also against a JSON Schema.</p> <p>When the JSON Schema is a URL, the schema is downloaded from the server.</p> <p>The action generates 2 variables: </p> <ul> <li><code>$validator.count$</code> - the count of errors</li> <li><code>$validator.errors$</code> \u2013 the errors in JSON format</li> </ul> <p>If the JSON is invalid or does not conform to the schema, an Action error is generated.</p> Validate JSON configuration example"},{"location":"custom-actions/action-types.html#example-json-schema","title":"Example JSON Schema","text":"<pre><code>{\n\"$id\": \"https://example.com/person.schema.json\",\n\"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n\"title\": \"Person\",\n\"type\": \"object\",\n\"properties\": {\n\"firstName\": {\n\"type\": \"string\",\n\"description\": \"The person's first name.\"\n},\n\"lastName\": {\n\"type\": \"string\",\n\"description\": \"The person's last name.\"\n},\n\"age\": {\n\"description\": \"Age in years which must be equal to or greater than zero.\",\n\"type\": \"integer\",\n\"minimum\": 0\n}\n}\n}\n</code></pre> <p>The following JSON will match and cause <code>$validator.count$</code> to be <code>0</code>:</p> <pre><code>{\n\"firstName\": \"John\",\n\"lastName\": \"Doe\",\n\"age\": 21\n}\n</code></pre> <p>However, if the following JSON is specified:</p> <pre><code>{\n\"firstName\": [\n345345345345,\n1232\n],\n\"lastName\": \"Doe\",\n\"age\": \"21\"\n}\n</code></pre> <p>Then <code>$validator.count$</code> would be set to <code>2</code>, and <code>$validator.errors$</code> would contain:</p> <pre><code>[\n{\n\"property\": \"firstName\",\n\"pointer\": \"/firstName\",\n\"message\": \"Array value found, but a string is required\",\n\"constraint\": \"type\",\n\"context\": 1\n},\n{\n\"property\": \"age\",\n\"pointer\": \"/age\",\n\"message\": \"String value found, but an integer is required\",\n\"constraint\": \"type\",\n\"context\": 1\n}\n]\n</code></pre>"},{"location":"custom-actions/action-types.html#extract-regex","title":"Extract Regex","text":"<p>This action runs a Regex (regular expression) query on the contents of a request. With it, you can extract any data from a text document and store it in a variable, which can then be used in a downstream action.</p> <p>As you start entering a Regex, the results are validated and shown next to the input field.</p>"},{"location":"custom-actions/action-types.html#extract-xpath","title":"Extract XPath","text":"<p>Similar to the Extract JSONPath Custom Action, Extract XPath lets you extract values from an XML or HTML document and save the result as a variable.</p>"},{"location":"custom-actions/action-types.html#xpath-examples","title":"XPath Examples","text":"<p>The following examples are based on this XML document:</p> <pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;organization name=\"ExampleCo\"&gt;\n&lt;employees&gt;\n&lt;employee id=\"1\"&gt;Jack&lt;/employee&gt;\n&lt;employee id=\"2\"&gt;Ann&lt;/employee&gt;\n&lt;/employees&gt;\n&lt;/organization&gt;\n</code></pre> Example XPath Notes Result <code>/organization</code> Finds all content within the organization element JackAnn <code>//employee[@id != 1]</code> <code>//</code> traverses all <code>&lt;employee&gt;</code> elements in document, the @id query selects all except those with <code>id</code>=1 Jack <code>/organization/@name</code> <code>@name</code> to get the \"name\" property of the element ExampleCo <code>/organization/employees/employee[2]</code> <code>[2]</code> specifies 2nd element Ann <code>/organization/employees/employee[2]/@id</code> Get the \"id\" property of second employee element 2 <code>/organization/employees/employee[@id=1]</code> Employee element with id property equal to \"1\" Jack <code>/organization/employees/employee[last()]</code> Last employee element Ann <code>//employee[contains(@id, \"2\")]</code> Employee within any parent element where id contains \"2\" Ann <p>For more examples, see W3CSchools or XPath Cheatsheet</p>"},{"location":"custom-actions/action-types.html#replace-text","title":"Replace Text","text":"<p>An action that allows replacing multiple inputs to a string with specified replacements. Additionally, Webhook.site will replace all variables in the source text as well as the text being replaced, and the replacement.</p>"},{"location":"custom-actions/action-types.html#split-text","title":"Split Text","text":"<p>Split text into multiple variables. Using <code>hello,world</code> as Source, and <code>,</code> as Delimiter, 2 variables will be created: <code>$variable.1$</code> is \"hello\" and <code>$variable.2$</code> is \"world\".</p> <p>Entering <code>\\n</code> as Delimiter will split text by each line.</p> <p>The maximum amount of variables created is 1024.</p>"},{"location":"custom-actions/action-types.html#map-text","title":"Map Text","text":"<p>Sets a variable depending on what maps to the source value and operator.</p> <p>If we set Source to <code>John</code>, Operator to <code>ends with</code>, Variable Name to <code>$user_id$</code>, Default to <code>unknown</code>, and add a mapping of From: <code>John</code> -&gt; To: <code>123</code>, then the variable name <code>$user_id$</code> would be set to <code>123</code>. </p> <p>If the Source had been <code>Jack</code>, <code>$user_id$</code> would have been set to <code>unknown.</code></p>"},{"location":"custom-actions/action-types.html#network","title":"Network","text":""},{"location":"custom-actions/action-types.html#http-request","title":"HTTP Request","text":"<p>This will send a HTTP/HTTPS request from the Webhook.site cloud. </p> <p>The HTTP Request action has several modes:</p> <ul> <li>Text: In the default text mode, this allows sending plain-text content, but also data like JSON and XML.</li> <li>JSON: Similar to the Text mode, but also sets the Content-Type header to application/json and allows JSON formatting.</li> <li>Multipart: With Multipart selected, it is possble to build a form/multipart request and send form data and files. Note that the Filename and Content-Type fields are not required.</li> <li>URL Encoded: In URL Encoded mode, the keys and values are sent using URL Encoding.</li> <li>Forward: In forward mode, all data sent to the Webhook.site URL is forwarded here, including the HTTP method, query strings, headers and body data. It is possible to overwrite the method and append headers. To forward the HTTP method, set the Method dropdown to the blank option.</li> </ul> <p>The response of the request is stored in a series of variable names prefixed with a value of your choosing. The following variables are set after the request has been fired:</p> <ul> <li><code>$your_prefix.content$</code> - response body content</li> <li><code>$your_prefix.status$</code> - response status code</li> <li><code>$your_prefix.headers$</code> - response headers</li> <li><code>$your_prefix.url$</code> - the URL the request was sent to</li> <li><code>$your_prefix.error$</code> - if the request resulted in an error, it's stored in this variable.</li> </ul> <p>The maximum timeout for a HTTP request is 15 seconds when the action is run during the request. When the action is in Queue mode, the maximum timeout is raised to 60 seconds.</p>"},{"location":"custom-actions/action-types.html#retry","title":"Retry","text":"<p>When checked, this option will cause the HTTP to be retried in case of a network error, timeout, or related issue.</p> Retry configuration screenshot <p>Per default, there are 3 retries (4 requests total) with 1 second delay between each retry.</p> <p>Note</p> <p>As Webhook.site URLs have a maximum of 30 seconds to respond, it's best to use a low delay and retry number that stays under 30 seconds total. Otherwise there's a risk the actions won't complete. Alternatively, you can mark the HTTP Request action as Queued, which has a total maximum runtime of 120 seconds.</p> <p>If a status code is specified, the request will also be retried when the response status doesn't match the specified status code. The character <code>*</code> can be used as wildcard, e.g. <code>20*</code> will match any status code in the range 200-209.</p> <p>Each retry attempt will add an extra line of output.</p>"},{"location":"custom-actions/action-types.html#send-email","title":"Send Email","text":"<p>This will send a email with variable contents from the Webhook.site cloud. Variables extracted previously can be used.</p>"},{"location":"custom-actions/action-types.html#send-email-smtp","title":"Send Email (SMTP)","text":"<p>This will send a email with variable contents from your own email provider. Variables extracted previously can be used.</p>"},{"location":"custom-actions/action-types.html#gmail","title":"Gmail","text":"<p>For Gmail, the following specific setup is required:</p> <ul> <li>Hostname: <code>smtp.gmail.com</code></li> <li>Port:<code>587</code></li> <li>Username: youraccount@gmail.com or youraccount@example.com (replace with your Gmail address)</li> <li>Password: You must create a Mail App Password</li> <li>Encryption: <code>TLS</code></li> </ul> <p>As of 1 May 2025, this method is no longer available to Google Workspace customers. We recommend using the Webhook.site Custom Domain to send emails from your own domain.</p>"},{"location":"custom-actions/action-types.html#ssh","title":"SSH","text":"<p>We recommend authenticating using a pre-generated keypair, which can be created under Control Panel \u2192 Providers.</p> <p>All SSH-based actions have a max timeout of 30 seconds.</p>"},{"location":"custom-actions/action-types.html#run-ssh-command","title":"Run SSH Command","text":"<p>Allows you to run one or more SSH command on a server. Webhook.site captures the output (stdout), stderr and the command exit code as Variables that can be used in downstream actions:</p> <ul> <li><code>$ssh.stdout$</code></li> <li><code>$ssh.stderr$</code></li> <li><code>$ssh.exit$</code></li> </ul>"},{"location":"custom-actions/action-types.html#sftp-upload","title":"SFTP Upload","text":"<p>Allows uploading a file to a SFTP (SSH) server, specifying a hostname, port, username, password, relative path to the file. The file content can be specified, in which Variables are replaced.</p>"},{"location":"custom-actions/action-types.html#sftp-download","title":"SFTP Download","text":"<p>Allows downloading a file to a SFTP (SSH) server, specifying a hostname, port, username, password and the path to the file. The file content is downloaded to a Variable.</p>"},{"location":"custom-actions/action-types.html#ftps-upload","title":"FTP(S) Upload","text":"<p>Allows uploading a file to a FTP or FTPS (FTP with TLS/SSL) server, specifying a hostname, port, username, password, relative path to the file, whether to use SSL and whether to use passive mode. Finally, the file content can be specified, in which Variables are replaced.</p> <p>We recommend storing the password as a Global Variable.</p>"},{"location":"custom-actions/action-types.html#ftps-download","title":"FTP(S) Download","text":"<p>Allows downloading a file to a FTP or FTPS (FTP with TLS/SSL) server, specifying a hostname, port, username, password, path, whether to use SSL and whether to use passive mode. The file content is downloaded to a Variable.</p> <p>We recommend storing the password as a Global Variable.</p>"},{"location":"custom-actions/action-types.html#database-query","title":"Database Query","text":"<p>Allows running a database query, with support for fetching out data in a series of variables. We recommend storing the password as a Global Variable. The query timeout is 10 seconds.</p>"},{"location":"custom-actions/action-types.html#supported-database-servers","title":"Supported Database Servers","text":"<p>Currently supported are:</p> <ul> <li>PostgreSQL</li> <li>MySQL/MariaDB</li> <li>Microsoft SQL Server</li> </ul> <p>If your database server is not on the list, please contact support.</p>"},{"location":"custom-actions/action-types.html#using-parameters","title":"Using Parameters","text":"<p>When using e.g. INSERT or UPDATE statements, you should use parameters for each column value. Doing this, you avoid SQL injection attacks and other issues when using user-submitted data (e.g. via Variables), or even just data containing special characters like quotes, that could otherwise break a query.</p> <p>Each parameter name should start with a colon (:) and be a single word. You can then reference these parameters inside the query, like in the following example:</p> <p></p> <p>You can auto-create the parameters from the statement by clicking the Fill in Parameters from Statement button. This works with both positional <code>(?, ?)</code> and named <code>(:id, :value)</code> parameters. You cannot mix named and positional parameters.</p> <p></p> <p></p>"},{"location":"custom-actions/action-types.html#fetching-data","title":"Fetching data","text":"<p>When fetching data using e.g. SELECT statements, Webhook.site automatically inserts data in a series of Custom Action Variables, which are then available to downstream actions.</p> <p>For example, when fetching rows from the following table:</p> <p></p> <p>Using the following statement:</p> <pre><code>select * from employees\n</code></pre> <p>If the variable name prefix would be set to <code>output</code>, the following variables would be created containing specific values:</p> Variable Name Value $output.0.id$ 1 $output.0.fname$ Simon $output.0.lname$ Fredsted $output.0.title$ Founder $output.1.id$ 2 $output.1.fname$ Jack $output.1.lname$ Daniels $output.1.title$ Assistant <p>A variable would be created with the name <code>$output.json$</code> containing the data in JSON format:</p> <pre><code>[                              {\n\"id\": 1,\n\"fname\": \"Simon\",\n\"lname\": \"Fredsted\",\n\"title\": \"Founder\"\n},\n{\n\"id\": 2,\n\"fname\": \"Jack\",\n\"lname\": \"Daniels\",\n\"title\": \"Assistant\"\n}\n]\n</code></pre> <p>A variable named <code>$output.rows$</code> - containing the number of affected rows - would be set to <code>2</code>.</p> <p>If the action encounters an error, the <code>$output.error$</code> variable is set to the error message. You can use this to check that the action was successful in conjunction with the Conditions action, specifically the variable exists operator.</p>"},{"location":"custom-actions/action-types.html#postgres-endpoint-id","title":"Postgres Endpoint ID","text":"<p>If your database host requires an endpoint ID to be specified, you can do so via the Password field, for example: <code>endpoint=my_endpoint;password</code>. Replace <code>my_endpoint</code> with the endpoint ID, and <code>password</code> with the actual password.</p>"},{"location":"custom-actions/action-types.html#behavior","title":"Behavior","text":""},{"location":"custom-actions/action-types.html#dont-save","title":"Don't Save","text":"<p>Marks the request so it is not saved in Webhook.site, which is useful (especially in combination with Conditions) when receiving a large amount of requests.</p>"},{"location":"custom-actions/action-types.html#log","title":"Log","text":"<p>Adds a custom log entry to the Request's action output.</p>"},{"location":"custom-actions/action-types.html#modify-response","title":"Modify Response","text":"<p>This action can be used to modify the response of the Webhook.site URL based on the input.</p> <p>To make a redirect, leave the Response Body field blank, in the Response Headers field enter <code>Location: https://example.com</code> and set Status Code to <code>302</code>.</p>"},{"location":"custom-actions/action-types.html#rate-limit","title":"Rate Limit","text":"<p>This action can be used to allow a specific amount of requests in a specific amount of time per a given IP.</p> <p>If the IP is rate limited, the URL will respond with a <code>HTTP 429</code>, action execution is stopped, and the request is not saved in Webhook.site.</p>"},{"location":"custom-actions/action-types.html#stop","title":"Stop","text":"<p>Immediately stops Custom Action execution and returns the default response.</p>"},{"location":"custom-actions/action-types.html#basic-auth","title":"Basic Auth","text":"<p>With this action, the URL is protected with Basic Authentication. If the username and password combination is wrong, the request is automatically marked as Don't Save, action execution is stopped, and the response status is HTTP 401. The action has no effect for emails or DNSHooks.</p> <p>Basic Auth works with the Authorization HTTP header, where the username and password is encoded in base64, separated by a colon (<code>:</code>). For example, a successfull request when the username is <code>user</code> and password is <code>pass123</code> would have the following header:</p> <pre><code>Authorization: Basic dXNlcjpwYXNzMTIz\n</code></pre> Basic Auth in browsers <p>When the URL is visited with a Web browser, a username and password form will be shown.</p>"},{"location":"custom-actions/action-types.html#mock","title":"Mock","text":""},{"location":"custom-actions/action-types.html#openapiswagger","title":"OpenAPI/Swagger","text":"<p>By utilizing the Mock action, you have the ability to upload an OpenAPI or Swagger specification in YAML or JSON, enabling your Webhook.site URL to automatically function as a mock server. This is achieved by dynamically generating responses that align with the paths, endpoints, and data schemas outlined within the uploaded specification, allowing for seamless testing and simulation of API behavior.</p> <p>If the spec is a URL, Webhook.site will try to download the specification and parse it from JSON or YAML. </p> <p>An example spec that can be used can be found here.</p> <p>If your spec defines a server, it's recommended that it's added via the Path field, e.g. <code>https://example.com$request.path$</code></p> <p>Video demo</p> <p></p><p></p>"},{"location":"custom-actions/action-types.html#logic","title":"Logic","text":""},{"location":"custom-actions/action-types.html#conditions","title":"Conditions","text":"<p>Useful for validating if variables conform to a set of certain criteria, this action will either create a condition that can be used in downstream actions, or simply stop or continue the action flow entirely.</p> Using a defined condition in downstream actions <p>In both the input and the value fields, variables can be used (including Global Variables from the Control Panel), so you can compare e.g. JSONPath or Regex values - or even values from a previous HTTP request that was sent. </p> <p>Currently, three actions are provided: use result, stop and continue. Use Result allows using the Condition result in downstream actions. Stop will stop further action execution of the condition is a match. Continue will only continue further execution if the condition is a match, and otherwise stop.</p>"},{"location":"custom-actions/action-types.html#operators-with-value-argument","title":"Operators with value argument","text":"<ul> <li>is equal to</li> <li>is not equal to</li> <li>starts with</li> <li>ends with</li> <li>contains</li> <li>does not contain</li> <li>is greater than</li> <li>is greater than or equal to</li> <li>is less than</li> <li>is less than or equal to</li> <li>matches regex \u2013 example regex: <code>/^[a-zA-Z0-9-_]{3,32}$/</code></li> </ul>"},{"location":"custom-actions/action-types.html#operators-without-value-argument","title":"Operators without value argument","text":"<ul> <li>variable exists - whether a Webhook.site variable is defined</li> <li>is true</li> <li>is false</li> <li>is numeric - whether input is numeric; examples include <code>42</code>, <code>123.45</code>, <code>0x539</code>, <code>02471</code>,     <code>0b10100111001</code></li> <li>is integer - whether input is an integer; <code>42</code> is; <code>123.45</code> is not. </li> <li>is float - whether input is a valid float/double (e.g. both <code>42</code> and <code>123.45</code> are valid)</li> <li>is json - whether input is valid JSON</li> <li>is email</li> <li>is domain - e.g. <code>webhook.site</code></li> <li>is URL - e.g. <code>https://webhook.site?value=xxx</code></li> </ul> <p>The \"result\" of the condition will be logged to the action output, so you can see what happened.</p>"},{"location":"custom-actions/action-types.html#set-variable","title":"Set Variable","text":"<p>Defines (or overwrites) a variable that's available to downstream actions. The variable is not saved permanently.</p> <p>There are several modes:</p> <ul> <li>Text: Using the default \"Text\" mode, the variable is simply set to what's entered in the Text field.</li> <li>Random String, Random Number: When using the \"Random\" mode, you can generate a random string for e.g. one-time identifiers and passwords.</li> <li>Date: Generate date strings specifying a custom input date and an output format - defaults to ISO-8601 format.</li> <li>Math: Easily execute powerful math expressions like <code>$myvar$ + 1</code> (increment a Variable) or <code>round($myvar$, 2)</code> (round to 2 decimals), see below for more</li> </ul> Using the Set Variable action in the Date mode to create a date string 30 days in the past"},{"location":"custom-actions/action-types.html#math-mode","title":"Math Mode","text":"<p>Operators supported: <code>+ - * / % ^</code> as well as parentheses <code>()</code> and arrays <code>[1, 2, 3]</code></p> <p>Supported functions: <code>abs</code>, <code>acos (arccos)</code>, <code>acosh</code>, <code>arccos</code>, <code>arccosec</code>, <code>arccot</code>, <code>arccotan</code>, <code>arccsc (arccosec)</code>, <code>arcctg (arccot</code>, <code>arccotan)</code>, <code>arcsec</code>, <code>arcsin</code>, <code>arctan</code>, <code>arctg</code>, <code>array</code>, <code>asin (arcsin)</code>, <code>atan (atn</code>, <code>arctan</code>, <code>arctg)</code>, <code>atan2</code>, <code>atanh</code>, <code>atn</code>, <code>avg</code>, <code>bindec</code>, <code>ceil</code>, <code>cos</code>, <code>cosec</code>, <code>cosec (csc)</code>, <code>cosh</code>, <code>cot</code>, <code>cotan</code>, <code>cotg</code>, <code>csc</code>, <code>ctg (cot</code>, <code>cotan</code>, <code>cotg</code>, <code>ctn)</code>, <code>ctn</code>, <code>decbin</code>, <code>dechex</code>, <code>decoct</code>, <code>deg2rad</code>, <code>exp</code>, <code>expm1</code>, <code>floor</code>, <code>fmod</code>, <code>hexdec</code>, <code>hypot</code>, <code>if</code>, <code>intdiv</code>, <code>lg</code>, <code>ln</code>, <code>log (ln)</code>, <code>log10 (lg)</code>, <code>log1p</code>, <code>max</code>, <code>median</code>, <code>min</code>, <code>octdec</code>, <code>pi</code>, <code>pow</code>, <code>rad2deg</code>, <code>round</code>, <code>sec</code>, <code>sin</code>, <code>sinh</code>, <code>sqrt</code>, <code>tan (tn</code>, <code>tg)</code>, <code>tanh</code>, <code>tg</code>, <code>tn</code></p> <p>Functions can accept variable arguments: <code>avg(1, 2, 3)</code> or arrays: <code>avg([1, 2, 3])</code></p> <p>Logical operators (<code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;</code>, <code>&gt;=</code>, <code>&lt;=</code>, <code>&amp;&amp;</code>, <code>||</code>, <code>!</code>) are supported, but logically they can only return true (<code>1</code>) or false (<code>0</code>). In order to leverage them, use the built in if function: <code>if($a &gt; $b, $a - $b, $b - $a)</code></p> <p>Default variables:</p> <ul> <li><code>$pi</code> = 3.14159265359</li> <li><code>$e</code>  = 2.71828182846</li> </ul>"},{"location":"custom-actions/action-types.html#store-global-variable","title":"Store Global Variable","text":"<p>Saves (or overwrites) a Global Variable that's saved permanently and available to all URLs in your account. If you don't need to save the variable permanently, you should use the Set Runtime Variable instead.</p>"},{"location":"custom-actions/action-types.html#scripting","title":"Scripting","text":""},{"location":"custom-actions/action-types.html#javascript","title":"JavaScript","text":"<p>With the JavaScript action, you can execute JavaScript code using a Node.js sandbox that runs on the Webhook.site cloud.</p> <p></p>"},{"location":"custom-actions/action-types.html#general-functions","title":"General Functions","text":"<p><code>console.log(line)</code> / <code>echo(line)</code> - log a string to Action output</p> <p><code>stop()</code> - stops action execution and return response</p> <p><code>dont_save()</code> - marks current requests as Don't Save, so it won't be stored or shown in the Webhook.site requests list</p> <p><code>respond(content, status, headers)</code> - stops action execution and return response</p> <pre><code>respond('OK', 200, ['Content-Type: text/plain'])\n</code></pre> <p><code>set_response(content, status, headers)</code> - sets response, but doesn't stop action execution</p>"},{"location":"custom-actions/action-types.html#webhooksite-variables-functions","title":"Webhook.site Variables Functions","text":"<p><code>set(variable_name, value)</code> - sets a Webhook.site variable for use in downstream actions</p> <p>The following code would set the variable $myvar$ to <code>value</code>:</p> <pre><code>set('myvar', 'value')\n</code></pre> <p><code>get(variable_name)</code> - gets a Webhook.site variable (except Global Variables; use the <code>global()</code> function for that)</p> <p><code>variables</code> - global array variable containing Webhook.site variables</p> <p><code>global(variable_name)</code> - retrieves the value of a Webhook.site Global Variable. Must be used async. Returns <code>null</code> if variable doesn't exist.</p> <pre><code>echo(await global('my-variable'))\n</code></pre> <p><code>store(variable_name, value)</code> - stores the value of a Webhook.site Global Variable. Must be used async.</p>"},{"location":"custom-actions/action-types.html#webhooksite-database-functions","title":"Webhook.site Database Functions","text":"<p><code>db(database_id)</code> - interact with a Webhook.site Database instance. Returns a database connection in the form of a function that takes <code>query</code> and <code>params</code> arguments.</p> <pre><code>mydb = await db('example_db')\nusers = await mydb('select * from users');\nconsole.log(users)\n// {\n//   \"result\": [\n//     {\n//       \"id\": 1,\n//       \"name\": \"Jack Daniels\"\n//     },\n//     {\n//       \"id\": 2,\n//       \"name\": \"Elijah Craig\"\n//     }\n//   ],\n//   \"error\": null,\n//   \"rows\": 2,\n//   \"time\": 0\n// }\nfor (user of users['result']) {\nconsole.log(user['name'])\n}\n// Jack Daniels\n// Elijah Craig\nresp = await mydb(\n'insert into users (name) values (:name)', {\n\"name\": \"Jim Beam\"\n}\n)\nconsole.log(resp)\n// {\"result\":[[]],\"error\":null,\"rows\":1,\"time\":0}\n</code></pre>"},{"location":"custom-actions/action-types.html#utility-modules","title":"Utility Modules","text":"<p>Code executed with the Webhook.site JavaScript action runs in a sandbox where the following utility libraries are available by using the <code>require()</code> function:</p> <ul> <li><code>axios</code> - HTTP Client    <pre><code>axios = require('axios')\nawait axios.get('https://webhook.site')\n.then(response =&gt; {\nconsole.log(response.status)\n});\n// 200\n</code></pre></li> <li><code>lodash</code> - General utility library   <pre><code>_ = require('lodash')\nconsole.log(_.last([1, 2, 3]))\n// 3\n</code></pre></li> <li><code>dayjs</code> - Date and time manipulation    <pre><code>dayjs = require('dayjs')\nconsole.log(dayjs(1318781876406))\n// \"2011-10-16T16:17:56.406Z\"\n</code></pre></li> <li><code>cheerio</code> - JQuery-like HTML selector library    <pre><code>cheerio = require('cheerio')\nconst $ = cheerio.load('&lt;ul id=\"fruits\"&gt;banana&lt;/ul&gt;');\nconsole.log($('#fruits').text());\n// banana\n</code></pre></li> <li><code>jsonpath</code> - JSONPath query library    <pre><code>jsonpath = require('jsonpath')\nvar cities = [\n{ name: \"London\", \"population\": 8615246 },\n{ name: \"Berlin\", \"population\": 3517424 },\n];\nvar names = jsonpath.query(cities, '$..name');\nconsole.log(names)\n// [\"London\",\"Berlin\"]\n</code></pre></li> <li><code>crypto</code> \u2013 Node.js built-in crypto library    <pre><code>crypto = require('crypto');\nconst secret = 'abcdefg';\nconst hash = crypto.createHmac('sha256', secret)\n.update('I love Webhook.site')\n.digest('hex');\nconsole.log(hash);\n// 1745c764246c2782ebf97e25b89547a92571f19d41846b42880d3815480f098e\n</code></pre></li> <li><code>faker</code> - Seed data generator    <pre><code>faker = require('faker')\nconsole.log(faker.internet.email())\n// Ila_Gutkowski9@yahoo.com\n</code></pre></li> <li><code>nats</code> - NATS Client    <pre><code>const nats = require('nats')\nconst nc =  nats.connect({ servers: [\"demo.nats.io:4442\", \"demo.nats.io:4222\"] });\n</code></pre></li> <li><code>supabase</code> - Supabase Client    <pre><code>const createClient = require('supabase')\nconst supabase = createClient('https://xyzcompany.supabase.co', 'public-anon-key')\n</code></pre></li> <li><code>moment</code> - Date and Time library    <pre><code>const moment = require('moment')\nconst startOfLastWeek = moment().subtract(1, 'weeks').startOf('isoWeek').startOf('day').format();\nconsole.log(startOfLastWeek)\n// 2024-09-16T00:00:00+02:00\n</code></pre></li> <li><code>form-data</code> - Form library   <pre><code>var FormData = require('form-data');\nvar form = new FormData();\nform.append('my_field', 'my value');\nform.append('my_buffer', new Buffer(10));\n</code></pre></li> <li><code>fetch</code> - HTTP Client   <pre><code>var fetch = require('fetch')\nconst response = await fetch('https://webhook.site');\nconsole.log(await response.text())\n</code></pre></li> </ul> <p>Do you need a library that isn't listed here? Please contact support!</p>"},{"location":"custom-actions/action-types.html#webhookscript","title":"WebhookScript","text":"<p>Executes custom scripts using a scripting language that's very similar to JavaScript and PHP.</p> <p>For more information about WebhookScript, see the dedicated page.</p>"},{"location":"custom-actions/action-types.html#multimedia","title":"Multimedia","text":""},{"location":"custom-actions/action-types.html#generate-pdf","title":"Generate PDF","text":"<p>Takes either HTML or markdown input and generates a variable (<code>$pdf$</code>) containing the PDF file contents. You can enter this variable in e.g. an Send Email attachment content field, or with the Modify Response action (remember adding a <code>Content-Type: application/pdf</code> header!)</p> <p>If you have issues with special characters/scripts rendering as question marks (<code>?</code>), make sure you're using a font that supports those characters as the default fonts may not support it. You can import your own fonts using CSS, for example, inserting this HTML snippet in the <code>&lt;head&gt;</code> section will import the <code>Roboto</code> font from Google Fonts and use it as the default font:</p> <pre><code>&lt;link href=\"https://fonts.googleapis.com/css2?family=Roboto\" rel=\"stylesheet\"&gt;\n&lt;style&gt;* { font-family: Roboto }&lt;/style&gt;\n</code></pre>"},{"location":"custom-actions/action-types.html#resize-image","title":"Resize Image","text":"<p>Takes an image from either a URL or raw image data from e.g. a file upload, email attachment, request response or another action such as Dropbox.</p> <p>You can enter both width and height to contrain the image in both dimensions, or enter a single dimension.</p> <p>Check \"Keep Aspect Ratio\" so that the image keeps the aspect ratio, but doesn't exceed the height and width constraints.</p>"},{"location":"custom-actions/action-types.html#google-sheets","title":"Google Sheets","text":"<p>Note</p> <p>Google Sheets should not be used as a database, and have low usage limits. Google Sheets does not provide a way to query data efficiently. Additionally, if you need to import on the order of thousands of rows or make thousands of calls a day, Google Sheets cannot be used due to rate limits and race conditions. We recommend using a database in conjunction with the Database Query action.</p> <p>Google Sheets Custom Actions lets you manipulate and retrieve values from a Google Sheet.</p> <p>The following Google Sheets Custom Actions are available:</p> <ul> <li>Add Row - appends one or more new rows to an existing spreadsheet</li> <li>Update Row - updates one or more cells in an existing spreadsheet</li> <li>Get Values - retrieves one or more cell values from an existing spreadsheet</li> </ul> <p>To start, you need to make sure that you have connected a Google account in the Control Panel, available here.</p> <p>After that, you can select the account in the dropdown when creating the Custom Action.</p>"},{"location":"custom-actions/action-types.html#usage-limits","title":"Usage Limits","text":"<p>It is important to note that Google will block Write requests (i.e. adding or updating rows) at 60 requests per minute. After that, the action will temporarily fail with the following error message:</p> <pre><code>Quota exceeded for quota metric 'Write requests' and limit 'Write requests per minute per user' of service 'sheets.googleapis.com' for consumer\n</code></pre> <p>Therefore, for importing mass amounts of data in a short timespan, Google Sheets is not recommended. Instead, we recommend using the Database Query action.</p> <p>Additionally, Webhook.site will automatically disable Google Sheets actions that continously fail due to e.g. quota errors.</p>"},{"location":"custom-actions/action-types.html#specifying-the-spreadsheet","title":"Specifying the spreadsheet","text":"<p>When specifying the spreadsheet, you can either just copy/paste the spreadsheet URL or enter the spreadsheet ID. Variables can be used to specify the spreadsheet.</p>"},{"location":"custom-actions/action-types.html#ranges","title":"Ranges","text":"<p>All actions must specify a range, which behaves similar in all actions. For the Add Row action, Google Sheets will automatically find a \"table\" (e.g. a homogenous mass of data) and add the values at the bottom. </p> <p>A range is the same query as in Google Sheets, e.g. to select A1-C3 in Worksheet \"Example\", enter <code>'Example'!A1:C3</code>.</p>"},{"location":"custom-actions/action-types.html#values","title":"Values","text":"<p>When inserting or updating values, you can either enter a value in the text field, or supply multiple cells and/or rows using JSON. To insert two rows, the JSON would be <code>[\"cell 1\", \"cell 2\"]</code>.</p>"},{"location":"custom-actions/action-types.html#variables","title":"Variables","text":"<p>The Get Values Action allows you to define variables based on the output. Since this action can return multiple pieces of data, multiple variables are created.</p> <p>For example, if you select two columns and two rows, e.g. <code>A1:B2</code>, four variables would be defined:</p> <ol> <li><code>variable_name.0.0</code> = value of A1</li> <li><code>variable_name.0.1</code> = value of A2</li> <li><code>variable_name.1.0</code> = value of B1</li> <li><code>variable_name.1.1</code> = value of B2</li> </ol> <p>Additionally, the data is available in JSON, with the <code>variable_name.json</code> variable being defined, and continuing with the example above, would contain the following JSON:</p> <pre><code>[\n[\"A1\",\"A2\"],\n[\"B1\",\"B2\"]\n]\n</code></pre>"},{"location":"custom-actions/action-types.html#microsoft","title":"Microsoft","text":""},{"location":"custom-actions/action-types.html#onedrive","title":"OneDrive","text":"<p>With Webhook.site, you can now use your Microsoft account to upload and download files in your OneDrive account using the Upload and Download Custom Actions.</p>"},{"location":"custom-actions/action-types.html#excel","title":"Excel","text":"<p>Using the Add Rows and Get Values actions, Webhook.site now allows using your Microsoft account to append and retrieve data from Excel worksheets in your OneDrive account.</p>"},{"location":"custom-actions/action-types.html#add-rows","title":"Add Rows","text":"<p>To use the Add Rows function, the Microsoft API requires that data is inserted into a Table. Therefore, before starting, make sure you have a Table in your workbook, and enter the correct Table name.</p> Finding Table name in Excel <p>To create a table, select a range and click Insert -&gt; Table.</p> Creating a Table in Excel"},{"location":"custom-actions/action-types.html#error-you-do-not-have-permissions-to-open-this-file-in-the-browser","title":"Error: You do not have permissions to open this file in the browser","text":"<p>This error seems to have started happening around Feburary 2024 for some users. All 3rd parties - including Webhook.site - that connect to Microsoft's API are affected. There is no known solution at the moment. We encourage users experiencing this to contact Microsoft Support.</p>"},{"location":"custom-actions/action-types.html#amazon-web-services-aws","title":"Amazon Web Services (AWS)","text":""},{"location":"custom-actions/action-types.html#s3","title":"S3","text":"<p>The following actions are available for AWS S3:</p> <ul> <li>Create Bucket</li> <li>Create Object</li> <li>Delete Object</li> <li>Get Object (retrieves object contents to a Variable)</li> </ul> <p>In addition to the \"official\" Amazon endpoints, Webhook.site also supports S3-compatible storages like Google Cloud Storage, DigitalOcean, MinIO, Wasabi and more. The endpoint can be specified when setting up the account in Control Panel.</p>"},{"location":"custom-actions/action-types.html#using-with-google-cloud-storage","title":"Using with Google Cloud Storage","text":"<p>To use the S3 action with a Google Cloud Storage bucket, do the following:</p> <ol> <li>Go to Google Cloud Console \u2192 Cloud Storage \u2192 Settings \u2192 Interoperability</li> <li>Create keys for either an existing or a new Google Service Account</li> <li>Copy Access key in AWS IAM Key</li> <li>Copy Secret in AWS IAM Secret</li> <li>Enter <code>https://storage.googleapis.com</code> in Custom Endpoint</li> </ol> Using S3 with Google Cloud Storage credentials <p>When creating the S3 action, you can leave the Region field blank.</p>"},{"location":"custom-actions/action-types.html#cloudfront","title":"CloudFront","text":"<p>The \"Create Invalidation\" action allows you to dynamically create a CloudFront cache invalidation as a Custom Action. Both the Distribution ID and the paths to be invalidated are replaced with Webhook.site Variables.</p>"},{"location":"custom-actions/action-types.html#discord","title":"Discord","text":"<p>With the Discord Custom Action, you can send messages to a specified channel (Each bot account uses a specific channel, so you can connect more accounts to send to different channels or servers.) In addition, you can choose a custom username and avatar image for the bot user.</p> <p></p>"},{"location":"custom-actions/action-types.html#slack","title":"Slack","text":"<p>With the Slack Custom Action, you can easily use Slack's Webhook URLs to send messages to a channel.</p>"},{"location":"custom-actions/action-types.html#dropbox","title":"Dropbox","text":"<p>The Dropbox integration has access to the entire contents of your dropbox, and currently the following actions are available:</p> <ul> <li>Create Folder</li> <li>Download File</li> <li>Upload File</li> <li>Delete File</li> <li>Delete Folder</li> <li>Get Link - creates a temporary download link for any file in your Dropbox, and saves it in a variable.</li> </ul>"},{"location":"custom-actions/action-types.html#hubspot","title":"HubSpot","text":"<p>With the HubSpot application, you can create Contacts in our HubSpot CRM system. (This action is new, and we're still exploring possibilities - if you want more capabilities for the HubSpot action, please let us know!)</p> <p></p>"},{"location":"custom-actions/action-types.html#x-formerly-known-as-twitter","title":"X (formerly known as Twitter)","text":"<p>The X Integration supports the following actions using X's API:</p> <ul> <li>Post Tweet</li> </ul>"},{"location":"custom-actions/action-types.html#rabbitmq","title":"RabbitMQ","text":"<p>The RabbitMQ Integration allows you to publish and consume messages from a RabbitMQ queue by specifying the server connection details.</p>"},{"location":"custom-actions/action-types.html#pushed","title":"Pushed","text":"<p>With the Send Push Notification action, you can easily send push notifications to your mobile devices using your Pushed.co account.</p> <p></p> <p>With a free Pushed.co account, you can send up to 1000 push notifications a month.</p>"},{"location":"custom-actions/action-types.html#ntfysh","title":"ntfy.sh","text":"<p>Allows you to easily send push notifications to your browser, phone, watch, etc. Simply download the ntfy.sh app, subscribe to your topic name and send a message to the topic name via this Custom Action. No account required.</p> <p>App download links: </p> <ul> <li>App Store </li> <li>Google Play</li> <li>Browser</li> </ul>"},{"location":"custom-actions/examples.html","title":"Examples","text":""},{"location":"custom-actions/examples.html#adding-rows-to-an-airtable-base","title":"Adding rows to an Airtable Base","text":"<p>While Webhook.site doesn't have a native integration with Airtable, due to the simple API, it's exceedingly easy to add rows to a so-called Airtable Base.</p> <p>First, create an API key on your Account page: https://airtable.com/account.</p> <p>Next, go to Airtable's API documentation and select the Base you want to interact with: https://airtable.com/api. In the upper right corner, make sure show API key is checked.</p> <p></p> <p>If you then scroll down to the Create records section, you can essentially copy everything over to a Send Request action.</p> <p>Things to note:</p> <ul> <li>The Request Method should be <code>POST</code></li> <li>Make sure you copy everything between <code>--data '</code> and the final <code>'</code> (quote) character</li> <li>Also make sure that quotes aren't included in the two header lines</li> </ul>"},{"location":"custom-actions/variables.html","title":"Variables","text":""},{"location":"custom-actions/variables.html#about-variables","title":"About Variables","text":"<p>Variables are a very important part of Custom Actions. A Webhook.site Variable is characterized by a name surrounded by two dollar signs: <code>$example$</code>. They act as placeholders that are replaced by dynamic content as the request or email is received.</p> <p>In the Custom Actions editor, variables can be used in any field that has a \u24e5 icon. </p> <p>Each request, email or DNSHook has a set of Base Variables that are always present and contain information like the request IP, method, headers, query string values, form values and the request content. </p> <p>To see a list of Variables in the Custom Actions editor, click the Variables button in the editor. Clicking on a variable copies it to the clipboard. </p> <p></p> <p>After clicking Test on an action, additional variables created by the actions are also shown.</p> <p>Many Actions set at least one variable. For example, the result of a JSONPath query can be registered to a variable like <code>$jsonpath$</code> and entered in a \"Modify Response\" action to make the response dynamic, or even use it to send a request to another URL via the HTTP Request action \u2013 and then use the response of that!</p> <p>Files can referred to and incorporated in Custom Action workflows via the <code>request.file.*</code> Base Variables.</p> <p>Variables work since Custom Actions are executed synchronously in a chain, sharing data as they're being executed.</p> <p>Variables can be escaped using backslashes before the dollar characters: <code>\\$request.content\\$</code></p>"},{"location":"custom-actions/variables.html#global-variables","title":"Global Variables","text":"<p>In Webhook.site Control Panel, you can define Global Variables which can be accessed between all URLs and used in Schedules. Global Variables are permanent.</p> <p>Global Variables can also be created, modified or deleted using Custom Actions, including in WebhookScript and JavaScript actions.</p> <p>Additionally, Global Variables can be managed using the Webhook.site API.</p>"},{"location":"custom-actions/variables.html#base-variables","title":"Base Variables","text":"<p>These variables are automatically available for each request or email. Different variables are available depending on the type.</p> Variable Name Available For Description request.uuid All The UUID of the request request.token_id All The Token UUID (URL ID) of the request request.content All The body content of the request request.date All Creation date in Y-m-d H:m:s format request.timestamp All Creation date in UNIX timestamp format request.hostname All Hostname of the request (usually <code>webhook.site</code>) request.header.[name] All Created for each HTTP header request.size All Request body size in bytes request.type All Request type (<code>email</code> or <code>web</code>) request.file.[name].filename All Created for each file upload, with <code>name</code> being the input name property. Contains the client file name request.file.[name].size All Contains the file size in bytes request.file.[name].content All Contains the file content request.file.[name].content_type All Contains the file content type (e.g. image/png) request.file.[name].id All Contains the Webhook.site file ID request.file.[name].link All Contains the direct download link to the file from Webhook.site's server. request.query.[name] Web Created for each query string (e.g. ?name=value). The variable name is normalized. request.form.[name] Web Created for each form field. The variable name is normalized. request.ip Web IP of the host making the request request.user_agent Web User agent header request.url Web Full URL of the request (e.g. https://webhook.site/xxx-xxx...) request.path Web Sub-path of URL, after the token ID. Defaults to <code>/</code> request.query Web Full query string of the URL request.method Web HTTP method (GET, POST, etc.) request.sender Email Sender address request.message_id Email Email message ID request.text_content Email Parsed plaintext content request.html_content Email Parsed HTML content request.destinations Email Comma separated list of recipients. request.checks.[name] Email True or false for email checks (DKIM, SPF, etc.) error.[number] All Created for all actions that result in an error, where <code>number</code> is the order of the action."},{"location":"custom-actions/variables.html#variable-modifiers","title":"Variable Modifiers","text":"<p>Adding specific suffixes to variable names will let you process the value in the following ways:</p> Variable Example Input Output Description $example$ <code>{\"json\": \"value\"}</code> <code>{\"json\": \"value\"}</code> no modifier $example.json$ <code>{\"json\": \"value\"}</code> <code>{\\\"json\\\": \\\"value\\\"}</code> Escapes all special JSON characters, allowing to use any string in a JSON object. Escaped characters include \\b, \\f, \\n, \\r, \\t, \", \\ $example.json_format$ <code>{\"json\": \"value\"}</code> <pre>{  \"json\": \"value\"}</pre> Indents and formats a JSON string $example.html_encode$ <code>&lt;p&gt;some html&lt;/p&gt;</code> <code>&amp;lt;p&amp;gt;some html&amp;lt;/p&amp;gt;</code> Escapes all special HTML characters $example.html_decode$ <code>&amp;lt;p&amp;gt;some html&amp;lt;/p&amp;gt;</code> <code>&lt;p&gt;some html&lt;/p&gt;</code> Replaces all escaped HTML escapes with normal characters $example.html_strip$ <code>&lt;p&gt;some html&lt;/p&gt;</code> <code>some html</code> Removes all HTML tags from input string $example.base64_encode$ <code>{\"json\": \"&lt;b&gt;value&lt;/b&gt;\"}</code> <code>eyJqc29uIjogIjxiPnZhbHVlPC9iPiJ9Cg==</code> Encodes the variable to base64 $example.base64_decode$ <code>eyJqc29uIjogIjxiPnZhbHVlPC9iPiJ9Cg==</code> <code>{\"json\": \"&lt;b&gt;value&lt;/b&gt;\"}</code> Decodes a base64 encoded string $example.url_encode$ <code>{\"json\": \"value\"}</code> <code>%7B%22json%22%3A+%22value%22%7D</code> Escapes all special HTTP URL characters $example.url_decode$ <code>%7B%22json%22%3A+%22value%22%7D</code> <code>{\"json\": \"value\"}</code> Replaces all special HTTP URL escapes with normal characters $example.upper$ <code>Hello World</code> <code>HELLO WORLD</code> Uppercases a string $example.lower$ <code>Hello World</code> <code>hello world</code> Lowercases a string"},{"location":"webhookscript/index.html","title":"WebhookScript","text":""},{"location":"webhookscript/index.html#about-webhookscript","title":"About WebhookScript","text":"<p>WebhookScript is an easy to use scripting language designed for executing Web-related actions on incoming requests. </p> <p>While the other actions like Extract Regex and Send Email allows you to create flows in a visual editor, WebhookScript makes it quicker to create more advanced logic.</p> <p>WebhookScript can be combined with other Custom Actions as data can be shared between them using Variables.</p>"},{"location":"webhookscript/index.html#syntax","title":"Syntax","text":"<p>The syntax is very similar to PHP and JavaScript. See also the full language specification.</p> <pre><code>products = [\n'apple':     ['price': 10],\n'blueberry': ['price': 1],\n'cake':      ['price': 550]\n]\nshouldAddVat = var('request.query.vat');\nselectedProduct = var('request.query.product');\nif (!selectedProduct) {\nrespond('Please select a product!', 500)\n}\nprice = products[selectedProduct]['price'];\nif (shouldAddVat == 1) {\nprice = price * 1.25;\n}\nrespond(\n'Your price is {}'.format(price),\n200\n);\n</code></pre>"},{"location":"webhookscript/index.html#variables-in-webhookscript","title":"Variables in WebhookScript","text":"<p>Custom Action Variables in WebhookScript behave a little differently than other action types: in the code, they will not be replaced automatically like in other action types.</p> <p>Instead, to interface with Custom Action Variables (created in previous actions, or default variables provided for each request or email), the function var() can be used.</p> <p>The dollar-sign syntax (e.g. <code>$request.content$</code>) is optional when using the <code>var()</code> function, and the following two statements are equivalent: <code>var('$request.content$')</code> / <code>var('request.content')</code>.</p> <p>In addition, set() can be used to export a variable from your script to further downstream actions.  store() is used to permanently set a Global Variable.</p>"},{"location":"webhookscript/index.html#about-the-editor","title":"About the Editor","text":""},{"location":"webhookscript/index.html#shortcuts","title":"Shortcuts","text":"<p>The shortcuts are available when the editor is focused.</p> Windows Mac Shortcut Alt-R Alt-R Test code (update Debug Panel) Ctrl-S Cmd-S Save action without exiting"},{"location":"webhookscript/index.html#debug-panel","title":"Debug Panel","text":"<p>Below the editor is the \"debug panel\" containing data relating to the current and previous actions:</p> <ul> <li> <p>Debug outputs shows the outputs of all the actions, with the current action being edited or created marked in blue.</p> </li> <li> <p>Response shows details of the response of the URL formatted in JSON.</p> </li> <li> <p>Variables is a table of all current available variables for use in the script with the <code>var()</code> function or <code>variables</code> array.</p> </li> </ul>"},{"location":"webhookscript/index.html#fullscreen-mode","title":"Fullscreen Mode","text":"<p>To enable fullscreen mode, click the Expand button in the upper right corner to make the editor take up more screen space. Click again to disengage fullscreen mode.</p>"},{"location":"webhookscript/date-format.html","title":"Date format characters","text":""},{"location":"webhookscript/date-format.html#date-format-characters","title":"Date format characters","text":"<p>WebhookScript uses the ISO format for converting and formatting dates, and the format is compatible with the Moment.js format method.</p> <p>The following examples are based on the date <code>2017-01-05 17:04:05.084512</code>.</p> Code Example Description OD 5 Day number with alternative numbers such as \u4e09 for 3 if locale is ja_JP OM 1 Month number with alternative numbers such as \u1040\u1042 for 2 if locale is my_MM OY 2017 Year number with alternative numbers such as \u06f1\u06f9\u06f9\u06f8 for 1998 if locale is fa OH 17 24-hours number with alternative numbers such as \u1091\u1093 for 13 if locale is shn_MM Oh 5 12-hours number with alternative numbers such as \u5341\u4e00 for 11 if locale is lzh_TW Om 4 Minute number with alternative numbers such as \u0b6b\u0b6d for 57 if locale is or Os 5 Second number with alternative numbers such as \u5341\u4e94 for 15 if locale is ja_JP D 5 Day of month number (from 1 to 31) DD 05 Day of month number with trailing zero (from 01 to 31) Do 5th Day of month with ordinal suffix (from 1st to 31th), translatable d 4 Day of week number (from 0 (Sunday) to 6 (Saturday)) dd Th Minified day name (from Su to Sa), transatable ddd Thu Short day name (from Sun to Sat), transatable dddd Thursday Day name (from Sunday to Saturday), transatable DDD 5 Day of year number (from 1 to 366) DDDD 005 Day of year number with trailing zeros (3 digits, from 001 to 366) DDDo 5th Day of year number with ordinal suffix (from 1st to 366th), translatable e 4 Day of week number (from 0 (Sunday) to 6 (Saturday)), similar to \"d\" but this one is translatable (takes first day of week of the current locale) E 4 Day of week number (from 1 (Monday) to 7 (Sunday)) H 17 Hour from 0 to 23 HH 17 Hour with trailing zero from 00 to 23 h 5 Hour from 0 to 12 hh 05 Hour with trailing zero from 00 to 12 k 17 Hour from 1 to 24 kk 17 Hour with trailing zero from 01 to 24 L 04/09/1986 Date (in local format) LL September 4 1986 Month name, day of month, year LLL September 4 1986 8:30 PM Month name, day of month, year, time LLLL Thursday, September 4 1986 8:30 PM Day of week, month name, day of month, year, time LT 8:30 PM Time (without seconds) LTS 8:30:00 PM Time (with seconds) m 4 Minute from 0 to 59 mm 04 Minute with trailing zero from 00 to 59 a pm Meridiem am/pm A PM Meridiem AM/PM s 5 Second from 0 to 59 ss 05 Second with trailing zero from 00 to 59 S 0 Second tenth SS 08 Second hundredth (on 2 digits with trailing zero) SSS 084 Millisecond (on 3 digits with trailing zeros) SSSS 0845 Second ten thousandth (on 4 digits with trailing zeros) SSSSS 08451 Second hundred thousandth (on 5 digits with trailing zeros) SSSSSS 084512 Microsecond (on 6 digits with trailing zeros) SSSSSSS 0845120 Second ten millionth (on 7 digits with trailing zeros) SSSSSSSS 08451200 Second hundred millionth (on 8 digits with trailing zeros) SSSSSSSSS 084512000 Nanosecond (on 9 digits with trailing zeros) M 1 Month from 1 to 12 MM 01 Month with trailing zero from 01 to 12 MMM Jan Short month name, translatable MMMM January Month name, translatable Mo 1st Month with ordinal suffix from 1st to 12th, translatable Q 1 Quarter from 1 to 4 Qo 1st Quarter with ordinal suffix from 1st to 4th, translatable G 2017 ISO week year (see ISO week date) GG 2017 ISO week year (on 2 digits with trailing zero) GGG 2017 ISO week year (on 3 digits with trailing zeros) GGGG 2017 ISO week year (on 4 digits with trailing zeros) GGGGG 02017 ISO week year (on 5 digits with trailing zeros) g 2017 Week year according to locale settings, translatable gg 2017 Week year according to locale settings (on 2 digits with trailing zero), translatable ggg 2017 Week year according to locale settings (on 3 digits with trailing zeros), translatable gggg 2017 Week year according to locale settings (on 4 digits with trailing zeros), translatable ggggg 02017 Week year according to locale settings (on 5 digits with trailing zeros), translatable W 1 ISO week number in the year (see ISO week date) WW 01 ISO week number in the year (on 2 digits with trailing zero) Wo 1st ISO week number in the year with ordinal suffix, translatable w 1 Week number in the year according to locale settings, translatable ww 01 Week number in the year according to locale settings (on 2 digits with trailing zero) wo 1st Week number in the year according to locale settings with ordinal suffix, translatable x 1483635845085 Millisecond-precision timestamp (same as date.getTime() in JavaScript) X 1483635845 Timestamp (number of seconds since 1970-01-01) Y 2017 Full year from -9999 to 9999 YY 17 Year on 2 digits from 00 to 99 YYYY 2017 Year on 4 digits from 0000 to 9999 YYYYY 02017 Year on 5 digits from 00000 to 09999 YYYYYY +002017 Year on 5 digits with sign from -09999 to +09999 z UTC Abbreviated time zone name zz UTC Time zone name Z +00:00 Time zone offset HH:mm ZZ +0000 Time zone offset HHmm <p>Source: Carbon Docs</p>"},{"location":"webhookscript/date-format.html#timezone-list","title":"Timezone List","text":"<ul> <li>Africa/Abidjan</li> <li>Africa/Accra</li> <li>Africa/Addis_Ababa</li> <li>Africa/Algiers</li> <li>Africa/Asmara</li> <li>Africa/Bamako</li> <li>Africa/Bangui</li> <li>Africa/Banjul</li> <li>Africa/Bissau</li> <li>Africa/Blantyre</li> <li>Africa/Brazzaville</li> <li>Africa/Bujumbura</li> <li>Africa/Cairo</li> <li>Africa/Casablanca</li> <li>Africa/Ceuta</li> <li>Africa/Conakry</li> <li>Africa/Dakar</li> <li>Africa/Dar_es_Salaam</li> <li>Africa/Djibouti</li> <li>Africa/Douala</li> <li>Africa/El_Aaiun</li> <li>Africa/Freetown</li> <li>Africa/Gaborone</li> <li>Africa/Harare</li> <li>Africa/Johannesburg</li> <li>Africa/Juba</li> <li>Africa/Kampala</li> <li>Africa/Khartoum</li> <li>Africa/Kigali</li> <li>Africa/Kinshasa</li> <li>Africa/Lagos</li> <li>Africa/Libreville</li> <li>Africa/Lome</li> <li>Africa/Luanda</li> <li>Africa/Lubumbashi</li> <li>Africa/Lusaka</li> <li>Africa/Malabo</li> <li>Africa/Maputo</li> <li>Africa/Maseru</li> <li>Africa/Mbabane</li> <li>Africa/Mogadishu</li> <li>Africa/Monrovia</li> <li>Africa/Nairobi</li> <li>Africa/Ndjamena</li> <li>Africa/Niamey</li> <li>Africa/Nouakchott</li> <li>Africa/Ouagadougou</li> <li>Africa/Porto-Novo</li> <li>Africa/Sao_Tome</li> <li>Africa/Tripoli</li> <li>Africa/Tunis</li> <li>Africa/Windhoek</li> <li>America/Adak</li> <li>America/Anchorage</li> <li>America/Anguilla</li> <li>America/Antigua</li> <li>America/Araguaina</li> <li>America/Argentina/Buenos_Aires</li> <li>America/Argentina/Catamarca</li> <li>America/Argentina/Cordoba</li> <li>America/Argentina/Jujuy</li> <li>America/Argentina/La_Rioja</li> <li>America/Argentina/Mendoza</li> <li>America/Argentina/Rio_Gallegos</li> <li>America/Argentina/Salta</li> <li>America/Argentina/San_Juan</li> <li>America/Argentina/San_Luis</li> <li>America/Argentina/Tucuman</li> <li>America/Argentina/Ushuaia</li> <li>America/Aruba</li> <li>America/Asuncion</li> <li>America/Atikokan</li> <li>America/Bahia</li> <li>America/Bahia_Banderas</li> <li>America/Barbados</li> <li>America/Belem</li> <li>America/Belize</li> <li>America/Blanc-Sablon</li> <li>America/Boa_Vista</li> <li>America/Bogota</li> <li>America/Boise</li> <li>America/Cambridge_Bay</li> <li>America/Campo_Grande</li> <li>America/Cancun</li> <li>America/Caracas</li> <li>America/Cayenne</li> <li>America/Cayman</li> <li>America/Chicago</li> <li>America/Chihuahua</li> <li>America/Costa_Rica</li> <li>America/Creston</li> <li>America/Cuiaba</li> <li>America/Curacao</li> <li>America/Danmarkshavn</li> <li>America/Dawson</li> <li>America/Dawson_Creek</li> <li>America/Denver</li> <li>America/Detroit</li> <li>America/Dominica</li> <li>America/Edmonton</li> <li>America/Eirunepe</li> <li>America/El_Salvador</li> <li>America/Fort_Nelson</li> <li>America/Fortaleza</li> <li>America/Glace_Bay</li> <li>America/Goose_Bay</li> <li>America/Grand_Turk</li> <li>America/Grenada</li> <li>America/Guadeloupe</li> <li>America/Guatemala</li> <li>America/Guayaquil</li> <li>America/Guyana</li> <li>America/Halifax</li> <li>America/Havana</li> <li>America/Hermosillo</li> <li>America/Indiana/Indianapolis</li> <li>America/Indiana/Knox</li> <li>America/Indiana/Marengo</li> <li>America/Indiana/Petersburg</li> <li>America/Indiana/Tell_City</li> <li>America/Indiana/Vevay</li> <li>America/Indiana/Vincennes</li> <li>America/Indiana/Winamac</li> <li>America/Inuvik</li> <li>America/Iqaluit</li> <li>America/Jamaica</li> <li>America/Juneau</li> <li>America/Kentucky/Louisville</li> <li>America/Kentucky/Monticello</li> <li>America/Kralendijk</li> <li>America/La_Paz</li> <li>America/Lima</li> <li>America/Los_Angeles</li> <li>America/Lower_Princes</li> <li>America/Maceio</li> <li>America/Managua</li> <li>America/Manaus</li> <li>America/Marigot</li> <li>America/Martinique</li> <li>America/Matamoros</li> <li>America/Mazatlan</li> <li>America/Menominee</li> <li>America/Merida</li> <li>America/Metlakatla</li> <li>America/Mexico_City</li> <li>America/Miquelon</li> <li>America/Moncton</li> <li>America/Monterrey</li> <li>America/Montevideo</li> <li>America/Montserrat</li> <li>America/Nassau</li> <li>America/New_York</li> <li>America/Nipigon</li> <li>America/Nome</li> <li>America/Noronha</li> <li>America/North_Dakota/Beulah</li> <li>America/North_Dakota/Center</li> <li>America/North_Dakota/New_Salem</li> <li>America/Nuuk</li> <li>America/Ojinaga</li> <li>America/Panama</li> <li>America/Pangnirtung</li> <li>America/Paramaribo</li> <li>America/Phoenix</li> <li>America/Port-au-Prince</li> <li>America/Port_of_Spain</li> <li>America/Porto_Velho</li> <li>America/Puerto_Rico</li> <li>America/Punta_Arenas</li> <li>America/Rainy_River</li> <li>America/Rankin_Inlet</li> <li>America/Recife</li> <li>America/Regina</li> <li>America/Resolute</li> <li>America/Rio_Branco</li> <li>America/Santarem</li> <li>America/Santiago</li> <li>America/Santo_Domingo</li> <li>America/Sao_Paulo</li> <li>America/Scoresbysund</li> <li>America/Sitka</li> <li>America/St_Barthelemy</li> <li>America/St_Johns</li> <li>America/St_Kitts</li> <li>America/St_Lucia</li> <li>America/St_Thomas</li> <li>America/St_Vincent</li> <li>America/Swift_Current</li> <li>America/Tegucigalpa</li> <li>America/Thule</li> <li>America/Thunder_Bay</li> <li>America/Tijuana</li> <li>America/Toronto</li> <li>America/Tortola</li> <li>America/Vancouver</li> <li>America/Whitehorse</li> <li>America/Winnipeg</li> <li>America/Yakutat</li> <li>America/Yellowknife</li> <li>Antarctica/Casey</li> <li>Antarctica/Davis</li> <li>Antarctica/DumontDUrville</li> <li>Antarctica/Macquarie</li> <li>Antarctica/Mawson</li> <li>Antarctica/McMurdo</li> <li>Antarctica/Palmer</li> <li>Antarctica/Rothera</li> <li>Antarctica/Syowa</li> <li>Antarctica/Troll</li> <li>Antarctica/Vostok</li> <li>Arctic/Longyearbyen</li> <li>Asia/Aden</li> <li>Asia/Almaty</li> <li>Asia/Amman</li> <li>Asia/Anadyr</li> <li>Asia/Aqtau</li> <li>Asia/Aqtobe</li> <li>Asia/Ashgabat</li> <li>Asia/Atyrau</li> <li>Asia/Baghdad</li> <li>Asia/Bahrain</li> <li>Asia/Baku</li> <li>Asia/Bangkok</li> <li>Asia/Barnaul</li> <li>Asia/Beirut</li> <li>Asia/Bishkek</li> <li>Asia/Brunei</li> <li>Asia/Chita</li> <li>Asia/Choibalsan</li> <li>Asia/Colombo</li> <li>Asia/Damascus</li> <li>Asia/Dhaka</li> <li>Asia/Dili</li> <li>Asia/Dubai</li> <li>Asia/Dushanbe</li> <li>Asia/Famagusta</li> <li>Asia/Gaza</li> <li>Asia/Hebron</li> <li>Asia/Ho_Chi_Minh</li> <li>Asia/Hong_Kong</li> <li>Asia/Hovd</li> <li>Asia/Irkutsk</li> <li>Asia/Jakarta</li> <li>Asia/Jayapura</li> <li>Asia/Jerusalem</li> <li>Asia/Kabul</li> <li>Asia/Kamchatka</li> <li>Asia/Karachi</li> <li>Asia/Kathmandu</li> <li>Asia/Khandyga</li> <li>Asia/Kolkata</li> <li>Asia/Krasnoyarsk</li> <li>Asia/Kuala_Lumpur</li> <li>Asia/Kuching</li> <li>Asia/Kuwait</li> <li>Asia/Macau</li> <li>Asia/Magadan</li> <li>Asia/Makassar</li> <li>Asia/Manila</li> <li>Asia/Muscat</li> <li>Asia/Nicosia</li> <li>Asia/Novokuznetsk</li> <li>Asia/Novosibirsk</li> <li>Asia/Omsk</li> <li>Asia/Oral</li> <li>Asia/Phnom_Penh</li> <li>Asia/Pontianak</li> <li>Asia/Pyongyang</li> <li>Asia/Qatar</li> <li>Asia/Qostanay</li> <li>Asia/Qyzylorda</li> <li>Asia/Riyadh</li> <li>Asia/Sakhalin</li> <li>Asia/Samarkand</li> <li>Asia/Seoul</li> <li>Asia/Shanghai</li> <li>Asia/Singapore</li> <li>Asia/Srednekolymsk</li> <li>Asia/Taipei</li> <li>Asia/Tashkent</li> <li>Asia/Tbilisi</li> <li>Asia/Tehran</li> <li>Asia/Thimphu</li> <li>Asia/Tokyo</li> <li>Asia/Tomsk</li> <li>Asia/Ulaanbaatar</li> <li>Asia/Urumqi</li> <li>Asia/Ust-Nera</li> <li>Asia/Vientiane</li> <li>Asia/Vladivostok</li> <li>Asia/Yakutsk</li> <li>Asia/Yangon</li> <li>Asia/Yekaterinburg</li> <li>Asia/Yerevan</li> <li>Atlantic/Azores</li> <li>Atlantic/Bermuda</li> <li>Atlantic/Canary</li> <li>Atlantic/Cape_Verde</li> <li>Atlantic/Faroe</li> <li>Atlantic/Madeira</li> <li>Atlantic/Reykjavik</li> <li>Atlantic/South_Georgia</li> <li>Atlantic/St_Helena</li> <li>Atlantic/Stanley</li> <li>Australia/Adelaide</li> <li>Australia/Brisbane</li> <li>Australia/Broken_Hill</li> <li>Australia/Darwin</li> <li>Australia/Eucla</li> <li>Australia/Hobart</li> <li>Australia/Lindeman</li> <li>Australia/Lord_Howe</li> <li>Australia/Melbourne</li> <li>Australia/Perth</li> <li>Australia/Sydney</li> <li>Europe/Amsterdam</li> <li>Europe/Andorra</li> <li>Europe/Astrakhan</li> <li>Europe/Athens</li> <li>Europe/Belgrade</li> <li>Europe/Berlin</li> <li>Europe/Bratislava</li> <li>Europe/Brussels</li> <li>Europe/Bucharest</li> <li>Europe/Budapest</li> <li>Europe/Busingen</li> <li>Europe/Chisinau</li> <li>Europe/Copenhagen</li> <li>Europe/Dublin</li> <li>Europe/Gibraltar</li> <li>Europe/Guernsey</li> <li>Europe/Helsinki</li> <li>Europe/Isle_of_Man</li> <li>Europe/Istanbul</li> <li>Europe/Jersey</li> <li>Europe/Kaliningrad</li> <li>Europe/Kiev</li> <li>Europe/Kirov</li> <li>Europe/Lisbon</li> <li>Europe/Ljubljana</li> <li>Europe/London</li> <li>Europe/Luxembourg</li> <li>Europe/Madrid</li> <li>Europe/Malta</li> <li>Europe/Mariehamn</li> <li>Europe/Minsk</li> <li>Europe/Monaco</li> <li>Europe/Moscow</li> <li>Europe/Oslo</li> <li>Europe/Paris</li> <li>Europe/Podgorica</li> <li>Europe/Prague</li> <li>Europe/Riga</li> <li>Europe/Rome</li> <li>Europe/Samara</li> <li>Europe/San_Marino</li> <li>Europe/Sarajevo</li> <li>Europe/Saratov</li> <li>Europe/Simferopol</li> <li>Europe/Skopje</li> <li>Europe/Sofia</li> <li>Europe/Stockholm</li> <li>Europe/Tallinn</li> <li>Europe/Tirane</li> <li>Europe/Ulyanovsk</li> <li>Europe/Uzhgorod</li> <li>Europe/Vaduz</li> <li>Europe/Vatican</li> <li>Europe/Vienna</li> <li>Europe/Vilnius</li> <li>Europe/Volgograd</li> <li>Europe/Warsaw</li> <li>Europe/Zagreb</li> <li>Europe/Zaporozhye</li> <li>Europe/Zurich</li> <li>Indian/Antananarivo</li> <li>Indian/Chagos</li> <li>Indian/Christmas</li> <li>Indian/Cocos</li> <li>Indian/Comoro</li> <li>Indian/Kerguelen</li> <li>Indian/Mahe</li> <li>Indian/Maldives</li> <li>Indian/Mauritius</li> <li>Indian/Mayotte</li> <li>Indian/Reunion</li> <li>Pacific/Apia</li> <li>Pacific/Auckland</li> <li>Pacific/Bougainville</li> <li>Pacific/Chatham</li> <li>Pacific/Chuuk</li> <li>Pacific/Easter</li> <li>Pacific/Efate</li> <li>Pacific/Fakaofo</li> <li>Pacific/Fiji</li> <li>Pacific/Funafuti</li> <li>Pacific/Galapagos</li> <li>Pacific/Gambier</li> <li>Pacific/Guadalcanal</li> <li>Pacific/Guam</li> <li>Pacific/Honolulu</li> <li>Pacific/Kanton</li> <li>Pacific/Kiritimati</li> <li>Pacific/Kosrae</li> <li>Pacific/Kwajalein</li> <li>Pacific/Majuro</li> <li>Pacific/Marquesas</li> <li>Pacific/Midway</li> <li>Pacific/Nauru</li> <li>Pacific/Niue</li> <li>Pacific/Norfolk</li> <li>Pacific/Noumea</li> <li>Pacific/Pago_Pago</li> <li>Pacific/Palau</li> <li>Pacific/Pitcairn</li> <li>Pacific/Pohnpei</li> <li>Pacific/Port_Moresby</li> <li>Pacific/Rarotonga</li> <li>Pacific/Saipan</li> <li>Pacific/Tahiti</li> <li>Pacific/Tarawa</li> <li>Pacific/Tongatapu</li> <li>Pacific/Wake</li> <li>Pacific/Wallis</li> <li>UTC</li> </ul>"},{"location":"webhookscript/date-locales.html","title":"List of available date function locales","text":""},{"location":"webhookscript/date-locales.html#list-of-available-date-function-locales","title":"List of available date function locales","text":"<ul> <li>aa</li> <li>aa_DJ</li> <li>aa_ER</li> <li>aa_ER@saaho</li> <li>aa_ET</li> <li>af</li> <li>af_NA</li> <li>af_ZA</li> <li>agq</li> <li>agr</li> <li>agr_PE</li> <li>ak</li> <li>ak_GH</li> <li>am</li> <li>am_ET</li> <li>an</li> <li>an_ES</li> <li>anp</li> <li>anp_IN</li> <li>ar</li> <li>ar_AE</li> <li>ar_BH</li> <li>ar_DJ</li> <li>ar_DZ</li> <li>ar_EG</li> <li>ar_EH</li> <li>ar_ER</li> <li>ar_IL</li> <li>ar_IN</li> <li>ar_IQ</li> <li>ar_JO</li> <li>ar_KM</li> <li>ar_KW</li> <li>ar_LB</li> <li>ar_LY</li> <li>ar_MA</li> <li>ar_MR</li> <li>ar_OM</li> <li>ar_PS</li> <li>ar_QA</li> <li>ar_SA</li> <li>ar_SD</li> <li>ar_SO</li> <li>ar_SS</li> <li>ar_SY</li> <li>ar_Shakl</li> <li>ar_TD</li> <li>ar_TN</li> <li>ar_YE</li> <li>as</li> <li>as_IN</li> <li>asa</li> <li>ast</li> <li>ast_ES</li> <li>ayc</li> <li>ayc_PE</li> <li>az</li> <li>az_AZ</li> <li>az_Cyrl</li> <li>az_IR</li> <li>az_Latn</li> <li>bas</li> <li>be</li> <li>be_BY</li> <li>be_BY@latin</li> <li>bem</li> <li>bem_ZM</li> <li>ber</li> <li>ber_DZ</li> <li>ber_MA</li> <li>bez</li> <li>bg</li> <li>bg_BG</li> <li>bhb</li> <li>bhb_IN</li> <li>bho</li> <li>bho_IN</li> <li>bi</li> <li>bi_VU</li> <li>bm</li> <li>bn</li> <li>bn_BD</li> <li>bn_IN</li> <li>bo</li> <li>bo_CN</li> <li>bo_IN</li> <li>br</li> <li>br_FR</li> <li>brx</li> <li>brx_IN</li> <li>bs</li> <li>bs_BA</li> <li>bs_Cyrl</li> <li>bs_Latn</li> <li>byn</li> <li>byn_ER</li> <li>ca</li> <li>ca_AD</li> <li>ca_ES</li> <li>ca_ES_Valencia</li> <li>ca_FR</li> <li>ca_IT</li> <li>ccp</li> <li>ccp_IN</li> <li>ce</li> <li>ce_RU</li> <li>cgg</li> <li>chr</li> <li>chr_US</li> <li>cmn</li> <li>cmn_TW</li> <li>crh</li> <li>crh_UA</li> <li>cs</li> <li>cs_CZ</li> <li>csb</li> <li>csb_PL</li> <li>cu</li> <li>cv</li> <li>cv_RU</li> <li>cy</li> <li>cy_GB</li> <li>da</li> <li>da_DK</li> <li>da_GL</li> <li>dav</li> <li>de</li> <li>de_AT</li> <li>de_BE</li> <li>de_CH</li> <li>de_DE</li> <li>de_IT</li> <li>de_LI</li> <li>de_LU</li> <li>dje</li> <li>doi</li> <li>doi_IN</li> <li>dsb</li> <li>dsb_DE</li> <li>dua</li> <li>dv</li> <li>dv_MV</li> <li>dyo</li> <li>dz</li> <li>dz_BT</li> <li>ebu</li> <li>ee</li> <li>ee_TG</li> <li>el</li> <li>el_CY</li> <li>el_GR</li> <li>en</li> <li>en_001</li> <li>en_150</li> <li>en_AG</li> <li>en_AI</li> <li>en_AS</li> <li>en_AT</li> <li>en_AU</li> <li>en_BB</li> <li>en_BE</li> <li>en_BI</li> <li>en_BM</li> <li>en_BS</li> <li>en_BW</li> <li>en_BZ</li> <li>en_CA</li> <li>en_CC</li> <li>en_CH</li> <li>en_CK</li> <li>en_CM</li> <li>en_CX</li> <li>en_CY</li> <li>en_DE</li> <li>en_DG</li> <li>en_DK</li> <li>en_DM</li> <li>en_ER</li> <li>en_FI</li> <li>en_FJ</li> <li>en_FK</li> <li>en_FM</li> <li>en_GB</li> <li>en_GD</li> <li>en_GG</li> <li>en_GH</li> <li>en_GI</li> <li>en_GM</li> <li>en_GU</li> <li>en_GY</li> <li>en_HK</li> <li>en_IE</li> <li>en_IL</li> <li>en_IM</li> <li>en_IN</li> <li>en_IO</li> <li>en_ISO</li> <li>en_JE</li> <li>en_JM</li> <li>en_KE</li> <li>en_KI</li> <li>en_KN</li> <li>en_KY</li> <li>en_LC</li> <li>en_LR</li> <li>en_LS</li> <li>en_MG</li> <li>en_MH</li> <li>en_MO</li> <li>en_MP</li> <li>en_MS</li> <li>en_MT</li> <li>en_MU</li> <li>en_MW</li> <li>en_MY</li> <li>en_NA</li> <li>en_NF</li> <li>en_NG</li> <li>en_NL</li> <li>en_NR</li> <li>en_NU</li> <li>en_NZ</li> <li>en_PG</li> <li>en_PH</li> <li>en_PK</li> <li>en_PN</li> <li>en_PR</li> <li>en_PW</li> <li>en_RW</li> <li>en_SB</li> <li>en_SC</li> <li>en_SD</li> <li>en_SE</li> <li>en_SG</li> <li>en_SH</li> <li>en_SI</li> <li>en_SL</li> <li>en_SS</li> <li>en_SX</li> <li>en_SZ</li> <li>en_TC</li> <li>en_TK</li> <li>en_TO</li> <li>en_TT</li> <li>en_TV</li> <li>en_TZ</li> <li>en_UG</li> <li>en_UM</li> <li>en_US</li> <li>en_US_Posix</li> <li>en_VC</li> <li>en_VG</li> <li>en_VI</li> <li>en_VU</li> <li>en_WS</li> <li>en_ZA</li> <li>en_ZM</li> <li>en_ZW</li> <li>eo</li> <li>es</li> <li>es_419</li> <li>es_AR</li> <li>es_BO</li> <li>es_BR</li> <li>es_BZ</li> <li>es_CL</li> <li>es_CO</li> <li>es_CR</li> <li>es_CU</li> <li>es_DO</li> <li>es_EA</li> <li>es_EC</li> <li>es_ES</li> <li>es_GQ</li> <li>es_GT</li> <li>es_HN</li> <li>es_IC</li> <li>es_MX</li> <li>es_NI</li> <li>es_PA</li> <li>es_PE</li> <li>es_PH</li> <li>es_PR</li> <li>es_PY</li> <li>es_SV</li> <li>es_US</li> <li>es_UY</li> <li>es_VE</li> <li>et</li> <li>et_EE</li> <li>eu</li> <li>eu_ES</li> <li>ewo</li> <li>fa</li> <li>fa_AF</li> <li>fa_IR</li> <li>ff</li> <li>ff_CM</li> <li>ff_GN</li> <li>ff_MR</li> <li>ff_SN</li> <li>fi</li> <li>fi_FI</li> <li>fil</li> <li>fil_PH</li> <li>fo</li> <li>fo_DK</li> <li>fo_FO</li> <li>fr</li> <li>fr_BE</li> <li>fr_BF</li> <li>fr_BI</li> <li>fr_BJ</li> <li>fr_BL</li> <li>fr_CA</li> <li>fr_CD</li> <li>fr_CF</li> <li>fr_CG</li> <li>fr_CH</li> <li>fr_CI</li> <li>fr_CM</li> <li>fr_DJ</li> <li>fr_DZ</li> <li>fr_FR</li> <li>fr_GA</li> <li>fr_GF</li> <li>fr_GN</li> <li>fr_GP</li> <li>fr_GQ</li> <li>fr_HT</li> <li>fr_KM</li> <li>fr_LU</li> <li>fr_MA</li> <li>fr_MC</li> <li>fr_MF</li> <li>fr_MG</li> <li>fr_ML</li> <li>fr_MQ</li> <li>fr_MR</li> <li>fr_MU</li> <li>fr_NC</li> <li>fr_NE</li> <li>fr_PF</li> <li>fr_PM</li> <li>fr_RE</li> <li>fr_RW</li> <li>fr_SC</li> <li>fr_SN</li> <li>fr_SY</li> <li>fr_TD</li> <li>fr_TG</li> <li>fr_TN</li> <li>fr_VU</li> <li>fr_WF</li> <li>fr_YT</li> <li>fur</li> <li>fur_IT</li> <li>fy</li> <li>fy_DE</li> <li>fy_NL</li> <li>ga</li> <li>ga_IE</li> <li>gd</li> <li>gd_GB</li> <li>gez</li> <li>gez_ER</li> <li>gez_ET</li> <li>gl</li> <li>gl_ES</li> <li>gom</li> <li>gom_Latn</li> <li>gsw</li> <li>gsw_CH</li> <li>gsw_FR</li> <li>gsw_LI</li> <li>gu</li> <li>gu_IN</li> <li>guz</li> <li>gv</li> <li>gv_GB</li> <li>ha</li> <li>ha_GH</li> <li>ha_NE</li> <li>ha_NG</li> <li>hak</li> <li>hak_TW</li> <li>haw</li> <li>he</li> <li>he_IL</li> <li>hi</li> <li>hi_IN</li> <li>hif</li> <li>hif_FJ</li> <li>hne</li> <li>hne_IN</li> <li>hr</li> <li>hr_BA</li> <li>hr_HR</li> <li>hsb</li> <li>hsb_DE</li> <li>ht</li> <li>ht_HT</li> <li>hu</li> <li>hu_HU</li> <li>hy</li> <li>hy_AM</li> <li>i18n</li> <li>ia</li> <li>ia_FR</li> <li>id</li> <li>id_ID</li> <li>ig</li> <li>ig_NG</li> <li>ii</li> <li>ik</li> <li>ik_CA</li> <li>in</li> <li>is</li> <li>is_IS</li> <li>it</li> <li>it_CH</li> <li>it_IT</li> <li>it_SM</li> <li>it_VA</li> <li>iu</li> <li>iu_CA</li> <li>iw</li> <li>ja</li> <li>ja_JP</li> <li>jgo</li> <li>jmc</li> <li>jv</li> <li>ka</li> <li>ka_GE</li> <li>kab</li> <li>kab_DZ</li> <li>kam</li> <li>kde</li> <li>kea</li> <li>khq</li> <li>ki</li> <li>kk</li> <li>kk_KZ</li> <li>kkj</li> <li>kl</li> <li>kl_GL</li> <li>kln</li> <li>km</li> <li>km_KH</li> <li>kn</li> <li>kn_IN</li> <li>ko</li> <li>ko_KP</li> <li>ko_KR</li> <li>kok</li> <li>kok_IN</li> <li>ks</li> <li>ks_IN</li> <li>ks_IN@devanagari</li> <li>ksb</li> <li>ksf</li> <li>ksh</li> <li>ku</li> <li>ku_TR</li> <li>kw</li> <li>kw_GB</li> <li>ky</li> <li>ky_KG</li> <li>lag</li> <li>lb</li> <li>lb_LU</li> <li>lg</li> <li>lg_UG</li> <li>li</li> <li>li_NL</li> <li>lij</li> <li>lij_IT</li> <li>lkt</li> <li>ln</li> <li>ln_AO</li> <li>ln_CD</li> <li>ln_CF</li> <li>ln_CG</li> <li>lo</li> <li>lo_LA</li> <li>lrc</li> <li>lrc_IQ</li> <li>lt</li> <li>lt_LT</li> <li>lu</li> <li>luo</li> <li>luy</li> <li>lv</li> <li>lv_LV</li> <li>lzh</li> <li>lzh_TW</li> <li>mag</li> <li>mag_IN</li> <li>mai</li> <li>mai_IN</li> <li>mas</li> <li>mas_TZ</li> <li>mer</li> <li>mfe</li> <li>mfe_MU</li> <li>mg</li> <li>mg_MG</li> <li>mgh</li> <li>mgo</li> <li>mhr</li> <li>mhr_RU</li> <li>mi</li> <li>mi_NZ</li> <li>miq</li> <li>miq_NI</li> <li>mjw</li> <li>mjw_IN</li> <li>mk</li> <li>mk_MK</li> <li>ml</li> <li>ml_IN</li> <li>mn</li> <li>mn_MN</li> <li>mni</li> <li>mni_IN</li> <li>mo</li> <li>mr</li> <li>mr_IN</li> <li>ms</li> <li>ms_BN</li> <li>ms_MY</li> <li>ms_SG</li> <li>mt</li> <li>mt_MT</li> <li>mua</li> <li>my</li> <li>my_MM</li> <li>mzn</li> <li>nan</li> <li>nan_TW</li> <li>nan_TW@latin</li> <li>naq</li> <li>nb</li> <li>nb_NO</li> <li>nb_SJ</li> <li>nd</li> <li>nds</li> <li>nds_DE</li> <li>nds_NL</li> <li>ne</li> <li>ne_IN</li> <li>ne_NP</li> <li>nhn</li> <li>nhn_MX</li> <li>niu</li> <li>niu_NU</li> <li>nl</li> <li>nl_AW</li> <li>nl_BE</li> <li>nl_BQ</li> <li>nl_CW</li> <li>nl_NL</li> <li>nl_SR</li> <li>nl_SX</li> <li>nmg</li> <li>nn</li> <li>nn_NO</li> <li>nnh</li> <li>no</li> <li>nr</li> <li>nr_ZA</li> <li>nso</li> <li>nso_ZA</li> <li>nus</li> <li>nyn</li> <li>oc</li> <li>oc_FR</li> <li>om</li> <li>om_ET</li> <li>om_KE</li> <li>or</li> <li>or_IN</li> <li>os</li> <li>os_RU</li> <li>pa</li> <li>pa_Arab</li> <li>pa_Guru</li> <li>pa_IN</li> <li>pa_PK</li> <li>pap</li> <li>pap_AW</li> <li>pap_CW</li> <li>pl</li> <li>pl_PL</li> <li>prg</li> <li>ps</li> <li>ps_AF</li> <li>pt</li> <li>pt_AO</li> <li>pt_BR</li> <li>pt_CH</li> <li>pt_CV</li> <li>pt_GQ</li> <li>pt_GW</li> <li>pt_LU</li> <li>pt_MO</li> <li>pt_MZ</li> <li>pt_PT</li> <li>pt_ST</li> <li>pt_TL</li> <li>qu</li> <li>qu_BO</li> <li>qu_EC</li> <li>quz</li> <li>quz_PE</li> <li>raj</li> <li>raj_IN</li> <li>rm</li> <li>rn</li> <li>ro</li> <li>ro_MD</li> <li>ro_RO</li> <li>rof</li> <li>ru</li> <li>ru_BY</li> <li>ru_KG</li> <li>ru_KZ</li> <li>ru_MD</li> <li>ru_RU</li> <li>ru_UA</li> <li>rw</li> <li>rw_RW</li> <li>rwk</li> <li>sa</li> <li>sa_IN</li> <li>sah</li> <li>sah_RU</li> <li>saq</li> <li>sat</li> <li>sat_IN</li> <li>sbp</li> <li>sc</li> <li>sc_IT</li> <li>sd</li> <li>sd_IN</li> <li>sd_IN@devanagari</li> <li>se</li> <li>se_FI</li> <li>se_NO</li> <li>se_SE</li> <li>seh</li> <li>ses</li> <li>sg</li> <li>sgs</li> <li>sgs_LT</li> <li>sh</li> <li>shi</li> <li>shi_Latn</li> <li>shi_Tfng</li> <li>shn</li> <li>shn_MM</li> <li>shs</li> <li>shs_CA</li> <li>si</li> <li>si_LK</li> <li>sid</li> <li>sid_ET</li> <li>sk</li> <li>sk_SK</li> <li>sl</li> <li>sl_SI</li> <li>sm</li> <li>sm_WS</li> <li>smn</li> <li>sn</li> <li>so</li> <li>so_DJ</li> <li>so_ET</li> <li>so_KE</li> <li>so_SO</li> <li>sq</li> <li>sq_AL</li> <li>sq_MK</li> <li>sq_XK</li> <li>sr</li> <li>sr_Cyrl</li> <li>sr_Cyrl_BA</li> <li>sr_Cyrl_ME</li> <li>sr_Cyrl_XK</li> <li>sr_Latn</li> <li>sr_Latn_BA</li> <li>sr_Latn_ME</li> <li>sr_Latn_XK</li> <li>sr_ME</li> <li>sr_RS</li> <li>sr_RS@latin</li> <li>ss</li> <li>ss_ZA</li> <li>st</li> <li>st_ZA</li> <li>sv</li> <li>sv_AX</li> <li>sv_FI</li> <li>sv_SE</li> <li>sw</li> <li>sw_CD</li> <li>sw_KE</li> <li>sw_TZ</li> <li>sw_UG</li> <li>szl</li> <li>szl_PL</li> <li>ta</li> <li>ta_IN</li> <li>ta_LK</li> <li>ta_MY</li> <li>ta_SG</li> <li>tcy</li> <li>tcy_IN</li> <li>te</li> <li>te_IN</li> <li>teo</li> <li>teo_KE</li> <li>tet</li> <li>tg</li> <li>tg_TJ</li> <li>th</li> <li>th_TH</li> <li>the</li> <li>the_NP</li> <li>ti</li> <li>ti_ER</li> <li>ti_ET</li> <li>tig</li> <li>tig_ER</li> <li>tk</li> <li>tk_TM</li> <li>tl</li> <li>tl_PH</li> <li>tlh</li> <li>tn</li> <li>tn_ZA</li> <li>to</li> <li>to_TO</li> <li>tpi</li> <li>tpi_PG</li> <li>tr</li> <li>tr_CY</li> <li>tr_TR</li> <li>ts</li> <li>ts_ZA</li> <li>tt</li> <li>tt_RU</li> <li>tt_RU@iqtelif</li> <li>twq</li> <li>tzl</li> <li>tzm</li> <li>tzm_Latn</li> <li>ug</li> <li>ug_CN</li> <li>uk</li> <li>uk_UA</li> <li>unm</li> <li>unm_US</li> <li>ur</li> <li>ur_IN</li> <li>ur_PK</li> <li>uz</li> <li>uz_Arab</li> <li>uz_Cyrl</li> <li>uz_Latn</li> <li>uz_UZ</li> <li>uz_UZ@cyrillic</li> <li>vai</li> <li>vai_Latn</li> <li>vai_Vaii</li> <li>ve</li> <li>ve_ZA</li> <li>vi</li> <li>vi_VN</li> <li>vo</li> <li>vun</li> <li>wa</li> <li>wa_BE</li> <li>wae</li> <li>wae_CH</li> <li>wal</li> <li>wal_ET</li> <li>wo</li> <li>wo_SN</li> <li>xh</li> <li>xh_ZA</li> <li>xog</li> <li>yav</li> <li>yi</li> <li>yi_US</li> <li>yo</li> <li>yo_BJ</li> <li>yo_NG</li> <li>yue</li> <li>yue_HK</li> <li>yue_Hans</li> <li>yue_Hant</li> <li>yuw</li> <li>yuw_PG</li> <li>zgh</li> <li>zh</li> <li>zh_CN</li> <li>zh_HK</li> <li>zh_Hans</li> <li>zh_Hans_HK</li> <li>zh_Hans_MO</li> <li>zh_Hans_SG</li> <li>zh_Hant</li> <li>zh_Hant_HK</li> <li>zh_Hant_MO</li> <li>zh_Hant_TW</li> <li>zh_MO</li> <li>zh_SG</li> <li>zh_TW</li> <li>zh_YUE</li> <li>zu</li> <li>zu_ZA</li> </ul>"},{"location":"webhookscript/examples.html","title":"Examples","text":""},{"location":"webhookscript/examples.html#webhookscript-examples","title":"WebhookScript Examples","text":"<p>Info</p> <p>Do you have a nice example to share with other users? Or looking for even more examples? Take a look at the WebhookScript example repository, and make a pull request if you want to contribute: Webhook.site Script Repository</p>"},{"location":"webhookscript/examples.html#hmac-validation","title":"HMAC validation","text":"<p>The following script uses the hmac() function and the <code>sha256</code> algorithm to verify a HMAC signature, which is commonly used to verify webhooks. In this example, the secret is <code>secret</code> and the signature comes from the incoming request's <code>x-signature</code> HTTP header.</p> <p>If the signature doesn't match, further action execution is stopped and the URL immediately respond with a 401 status code.</p> <pre><code>hmac = hmac(var('request.content'), 'sha256', 'secret');\nsignature = var('request.header.x-signature', '');\nif (hmac != signature) {\nrespond('Unauthorized', 401);\n}\n</code></pre>"},{"location":"webhookscript/examples.html#jwt","title":"JWT","text":"<p>An example acquiring an access token from the DocuSign API using JWT and the WebhookScript <code>sign()</code> function:</p> <pre><code>private_key = '-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBA...\n-----END RSA PRIVATE KEY-----';\nheader = json_encode([\n'alg': 'RS256',\n'typ': 'JWT'\n])\ncurrentTimestamp = now().date_format('X').to_number()\nbody = json_encode([\n\"iss\": \"00000000-0000-0000-0000-000000000000\",\n\"sub\": \"00000000-0000-0000-0000-000000000000\",\n\"aud\": \"account-d.docusign.com\",\n\"iat\": currentTimestamp,\n\"exp\": currentTimestamp + 6000,\n\"scope\": \"impersonation signature\"\n])\ntoken = base64url_encode(header) + \".\" + base64url_encode(body)\nsignature = base64url_encode(sign(token, private_key, 'sha256'))\njwt = token + \".\" + signature\ncontent = query([\n'grant_type': 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n'assertion': jwt\n])\nheaders = ['Content-Type: application/x-www-form-urlencoded']\nresponse = request('https://account-d.docusign.com/oauth/token', content, 'POST', headers)\nif (response['status'] != 200) {\necho('Could not get token: ' + response['content'])\nstop()\n}\nresponse_json = json_decode(response['content'])\necho('Got access token: ' + response_json['access_token'])\n</code></pre>"},{"location":"webhookscript/examples.html#convert-a-date","title":"Convert a date","text":"<p>In this example, if we assume the variable <code>$mydate$</code> is set to <code>2021-07-26T16:23:50+03:00</code>, the variable will be overwritten to <code>2021.07.26 16:23</code> for actions running after the WebhookScript action.</p> <pre><code>input = var('$mydate$')\noutput = date_format(input, 'YYYY.MM.DD HH:mm')\nset('$mydate$', output)\n</code></pre> <p>More information about available date format characters.</p>"},{"location":"webhookscript/examples.html#request-counter","title":"Request counter","text":"<p>This script uses Global Variables to keep track of the amount of requests sent to a Webhook.site URL within the last 10 minutes. </p> <p>Once the 10 minutes are up, it sends a request to another endpoint with the amount of requests and the date, and then it resets the counter.</p> <pre><code>period = 600 // 10 minutes in seconds\ncurrentPeriod = var('current_period', now())\ncounter = var('counter', 0).to_number()\ncurrentPeriodSecs = date_interval(currentPeriod)\nif (currentPeriodSecs &lt; period) {\ncounter = counter + 1\nstore('counter', counter)\n} else {\n// Above 10 minutes, reset and send request\nstore('counter', 0)\nstore('current_period', now())\nrequest(\n'https://webhook.site/14fea227-60ab-4291-b679-12b8c104c78e', json_encode([\n\"counter\": counter,\n\"timestamp\": now(),\n]),\n'POST'\n)\n}\necho('count : {}'.format(counter))\necho('period: {}'.format(currentPeriodSecs))\n</code></pre>"},{"location":"webhookscript/examples.html#parse-and-loop-through-json","title":"Parse and loop through JSON","text":"<p>This example shows various ways of iterating through JSON arrays, comparing data and rearranging it to another format.</p> <p>First, it loops through the <code>items</code> array, verifying that the <code>item</code> must have a group ID that a specific one from an array.</p> <p>Second, it changes the <code>fields</code> array from an array of objects to a key-value object using the <code>name</code> and <code>value</code> fields.</p> <pre><code>// Define input as a JSON string\njson = '{\n    \"items\": [\n        {\n            \"first_name\": \"Jack\",\n            \"last_name\": \"Daniels\",\n            \"phone\": \"+1 100-555-999\",\n            \"group_ids\": [346, 46456, 23423],\n            \"fields\": [\n              {\n                \"id\": 45698,\n                \"name\": \"birthday\",\n                \"value\": \"1990-01-01\"\n              },\n              {\n                \"id\": 344,\n                \"name\": \"car\",\n                \"value\": \"BMW M2\"\n              }\n            ]\n        },\n        {\n            \"first_name\": \"Jim\",\n            \"last_name\": \"Beam\",\n            \"phone\": \"+1 123-555-788\",\n            \"group_ids\": [3456, 43546, 234234, 456456],\n            \"fields\": [\n              {\n                \"id\": 45698,\n                \"name\": \"birthday\",\n                \"value\": \"1987-05-01\"\n              },\n              {\n                \"id\": 344,\n                \"name\": \"car\",\n                \"value\": \"Toyota Corolla\"\n              },\n              {\n                \"id\": 248,\n                \"name\": \"nickname\",\n                \"value\": \"Jimmie\"\n              }\n            ]\n        }\n    ]\n}'\n// Decode to array\ndata = json_decode(json)\n// Define an array of valid groups\nvalid_groups = [43546, 999999]\n// Loop over items\nfor (item in data['items']) {\n// Per default, item does not have a valid group.\nhas_valid_group = false\n// Loop through each group ID in the data\nfor (group_id in item['group_ids']) {\n// Does the \"valid_groups\" array contain this group ID?\nif (valid_groups.contains(group_id)) {\nhas_valid_group = true\n}\n}\nif (has_valid_group) {\necho(item['first_name'] + ' did not have a valid group.') } else {\necho(item['first_name'] + ' has a valid group.') }\n// Extract \"fields\" into an array of key =&gt; value\nfields = []\nfor (field in item['fields']) {\nfields[field['name']] = field['value']\n}\necho(json_encode(fields))\n}\n</code></pre> <p>Returns the following output:</p> <pre><code>Jack has a valid group.\n{\n    \"birthday\": \"1990-01-01\",\n    \"car\": \"BMW M2\"\n}\nJim did not have a valid group.\n{\n    \"birthday\": \"1987-05-01\",\n    \"car\": \"Toyota Corolla\",\n    \"nickname\": \"Jimmie\"\n}\n</code></pre>"},{"location":"webhookscript/examples.html#loop-through-and-compare-items","title":"Loop through and compare items","text":"<p>In this example, we loop through a series of items and pick the item that's contained in a string. </p> <pre><code>location = 'test ABC example';\ncompares = [\n'123': 'token1',\n'ABC': 'token2',\n'DEF': 'token3',\n]\ntoken = ''; // Default value\nfor (compare in array_keys(compares)) {\nif (location.contains(compare)) {\ntoken = compares[compare]\n}\n}\ndump(token) // token2\n</code></pre>"},{"location":"webhookscript/examples.html#submit-request-with-escaped-json","title":"Submit request with escaped JSON","text":"<p>If you're building a JSON object, we recommend doing it in WebhookScript instead of typing JSON in the Send Request action type (If you do anyway, we recommend using the <code>.json</code> Variable Modifier, More info here). </p> <p>In this example, one of the JSON values contain HTML generated using the string_format function.</p> <pre><code>html_template = '&lt;b&gt;&lt;u&gt;New {} lead&lt;/u&gt;&lt;/b&gt;&lt;br&gt;\n&lt;br&gt;\nLocation: {}&lt;br&gt;\nMessage from customer:&lt;br&gt;\n&lt;div style=\"background:#CCC\"&gt;{}&lt;/div&gt;'\nhtml_message = string_format(\nhtml_template,\nvar('lead_type'),\nvar('location'),\nvar('message')\n)\npayload = json_encode([\n'lead': [\n'firstname': var('firstname'),\n'lastname': var('lastname'),\n'html': html_message\n]\n])\nrequest(\n'https://example.com/leads',\npayload,\n'POST',\n['Content-Type: application/json']\n)\n</code></pre>"},{"location":"webhookscript/examples.html#validate-request","title":"Validate request","text":"<p>In this example, we use a common method of verifying webhooks by taking a hash of its contents concatenated to a secret. It demonstrates the way WebhookScript can get various information about the request by using the <code>get_variable()</code> function, as well as string concatenation, hashing, if statements and returning responses with content, status codes and headers using <code>respond()</code>, which halts execution.</p> <pre><code>verification_secret = \"JHRlc3RTY3JpcHRTZWNyZXQ\"\nverification_challenge = var(\"request.header.x-request-verification\")\nverification_result = hash(var(\"request.content\") + verification_secret, \"sha256\")\nif (!verification_challenge or verification_challenge != verification_result) {\nrespond(\"Invalid request\", 500)\n}\nrespond(\"Successful request\", 200)\n</code></pre>"},{"location":"webhookscript/examples.html#send-a-x-www-form-urlencoded-request","title":"Send a x-www-form-urlencoded request","text":"<pre><code>content = query([\n'country': 'Cura\u00e7ao', 'population': 158665\n])\nheaders = ['Content-Type: application/x-www-form-urlencoded'];\nresponse = request('https://example.com', content, 'POST', headers);\n</code></pre>"},{"location":"webhookscript/examples.html#transform-and-resend","title":"Transform and resend","text":"<p>In the following, an incoming request is JSON decoded to an array, transformed and sent to \"Web Service 1\". Then the output is saved and passed on to \"Web Service 2\" in XML format. Basic error handling and validation is demonstrated.</p> <pre><code>// Configuration, fetched from the users' Global Variables in Control Panel\nws1_api_key = var('WS1_KEY')\nws2_user_token = var('WS1_USER_TOKEN')\n// Function for error handling which stops processing further actions/code and returns an error message\nfunction error (message) {\necho('Error: {}'.format(message))\nrespond(json_encode(['error': message]), 500)\n}\n// Parse original request\norig_req = json_decode(var('request.content'))\n// If the JSON was invalid\nif (!orig_req) {\nerror('Invalid request')\n}\n// Send request to Web Service 1, using format() for string placeholders\n// with JSON decoded values from the incoming request body\nws1_url = 'https://ws1.example.com/3.0/lists/{}/interest-categories/{}/interests'.format(\norig_req['listId'],\norig_req['groupId']\n)\nws1_content = [\n'first_name': orig_req['firstName'],\n'last_name': orig_req['lastName']\n]\nws1_response = request(\nws1_url,\njson_encode(ws1_content),\n'POST',\n['Authorization: Basic ' + ws1_api_key]\n)\n// Don't go further if the Web Service 1 step didn't succeed\nif (ws1_response['status'] != 200) {\necho(ws1_response['content']); // Log content to output\nerror('Invalid response from WS1')\n}\n// Get a value from the Web Service 1 request\nws1_response_id = json_decode(ws1_response)['id']\n// Pass response on to Web Service 2 in XML format, using a multi-line string and format()\nws2_content = '\n  &lt;qdbapi&gt;\n    &lt;usertoken&gt;{}&lt;/usertoken&gt;\n    &lt;listid&gt;{}&lt;/listid&gt;\n    &lt;field fid=\"7\"&gt;{}&lt;/field&gt;\n  &lt;/qdbapi&gt;'.format(ws2_user_token, orig_req['listId'], ws1_group_id)\nws2_response = request(\n'https://ws2.example.com/db/zzzzzz',\nws2_content,\n'POST', [\n\"Action: API_EditRecord\", \"Content-Type: application/xml\"\n]\n)\nif (ws2_response['status'] != 200) {\necho(ws2_response['content']); // Log content to debug log\nerror('Invalid response from WS2')\n}\n// Output the WS2 response content to debug output\necho(ws2_response['content'])\nrespond('OK', 200)\n</code></pre>"},{"location":"webhookscript/examples.html#telegram-bot","title":"Telegram bot","text":"<p>The Messaging service Telegram allows bots using their API. The general principle is this:</p> <ol> <li>Create a Bot using the /newbot command sent to the BotFather Telegram User</li> <li>Using the bot token sent from BotFather, use the Telegram API to create a Webhook subscription (using your Webhook.site URL)</li> <li>Add some logic using WebhookScript!</li> </ol> <p>Note: Everywhere you see <code>TELEGRAM_TOKEN</code>, replace it with the token you got from BotFather!</p>"},{"location":"webhookscript/examples.html#subscribe-to-webhook","title":"Subscribe to Webhook","text":"<p>To create the Webhook subscription, change the token and the Webhook.site URL to your own and go to the following URL in your browser:</p> <p>https://api.telegram.org/botTELEGRAM_TOKEN/setWebhook?url=https://webhook.site/a1351781</p> <p>You should get a response similar to this:</p> <pre><code>{\n\"ok\": true,\n\"result\": true,\n\"description\": \"Webhook was set\"\n}\n</code></pre>"},{"location":"webhookscript/examples.html#first-incoming-webhook","title":"First incoming Webhook","text":"<p>When you add your bot to your Telegram contacts list, Telegram automatically sends a <code>/start</code> command to the bot, which triggers a Webhook similar to this:</p> <pre><code>{\n\"update_id\": 176446573,\n\"message\": {\n\"message_id\": 1,\n\"from\": {\n\"id\": 2346545645,\n\"is_bot\": false,\n\"first_name\": \"Simon\",\n\"language_code\": \"en\"\n},\n\"chat\": {\n\"id\": 34534673234,\n\"first_name\": \"Simon\",\n\"type\": \"private\"\n},\n\"date\": 1581706369,\n\"text\": \"/start\",\n\"entities\": [\n{\n\"offset\": 0,\n\"length\": 6,\n\"type\": \"bot_command\"\n}\n]\n}\n}\n</code></pre> <p>You should be able to see this in the Webhook.site requests list.</p> <p>From this, we have all the parts needed to build a script that answers to commands:</p> <pre><code>// Telegram API token\ntoken = 'TELEGRAM_TOKEN';\ncontent = json_decode(var('$request.content$'));\nmsg = content['message']['text'];\nresponse = \"Couldn't come up with anything witty.\";\nif (msg == \"How's it going?\") {\nresponse = 'Pretty good.'\n}\nif (msg == r\"You're (.*)\") {\nmatch = regex_extract_first(r\"You're (.*)\", msg)\nresponse = 'No, YOU are {}'.format(match);\n}\nif (msg == \"/start\") {\nresponse = \"Hi! I'm WebhookBot.\"\n}\nurl = 'https://api.telegram.org/bot{}/sendMessage'.format(token)\njson = [\n'chat_id': content['message']['chat']['id'],\n'text': response\n]\nrequest(url, json_encode(json), 'POST');\n</code></pre> <p>Things to note:</p> <ul> <li>The API token is added to the script, but could also have been saved in Global Variables in Control Panel and fetched out with the <code>var()</code> function.</li> <li>The third if-statement uses regex matching to provide a dynamic response. Someone typing \"You're a bot\" would receive \"No, YOU are a bot\"</li> <li>Finally, we JSON encode a WebhookScript array and send it using the <code>request()</code> function.</li> </ul> <p>Simply copy this script into a WebhookScript Custom Action (remember to change the token!), and click Save Action.</p> <p></p> <p>Then, you can interact with the bot using the Telegram app:</p> <p></p> <p>And that's it! Congratulations on your bot. It's not very smart, but from here, the possibilities are endless!</p>"},{"location":"webhookscript/examples.html#building-html-content","title":"Building HTML content","text":"<p>The following script builds a piece of HTML content using the string_format function, based on previously defined variables, and shows how to use a function to return different content based on input.</p> <p>After this, it sends a JSON request (by converting an array to JSON via the json_encode function) containing the HTML using basic Bearer authentication.</p> <pre><code>function alert_class() {\nif (status == 'Operational') { return 'success'; }\nif (status == 'Degraded Performance') { return 'warning'; }\nif (string_contains(status, 'Disruption')) { return 'danger'; }\n}\ntemplate = '\n  &lt;div class=\"alert alert-{}\"&gt;\n    &lt;h2 class=\"alert-title\"&gt;{} - {}&lt;/h2&gt;\n    &lt;p&gt;\n      {}&lt;br /&gt;\n      State: {}&lt;br /&gt;\n      Component affected: {}\n    &lt;/p&gt;\n    &lt;p&gt;{}&lt;/p&gt;\n  &lt;/div&gt;';\npostbody = string_format(\ntemplate,\nalert_class(),\nmessage,\nstate,\ncomponent,\nto_date('now').date_format('LLLL')\n)\njson = [\n'alert': [\n'title': '{} - {}'.format(component, state),\n'body': postbody,\n'draft': false,\n'types': ['alert']\n],\n]\nrequest(\n'http://example.com/alerts',\njson_encode(json),\n'POST',\n[\n'Content-Type: application/json',\n'Authorization: Basic {}'.format(token)\n]\n)\n</code></pre>"},{"location":"webhookscript/examples.html#uploading-and-parsing-csv-file","title":"Uploading and parsing CSV file","text":"<p>With this script, a file upload form is displayed when visiting the URL. After submitting the form, the CSV file is processed and validated (in this example, there must be more than 2 rows). If it can't be validated, an error message is shown. Finally, the user is shown an \"Upload successful\" message if the CSV file is valid.</p> <pre><code>url = var('request.url')\nset_header('content-type', 'text/html');\n// Display file upload form and exit if HTTP method is not POST\nif (var('request.method') != 'POST') {\nrespond('\n        &lt;html&gt;\n            &lt;head&gt;&lt;title&gt;Upload CSV&lt;/title&gt;&lt;/head&gt;\n            &lt;body&gt;\n                &lt;h1&gt;Upload CSV&lt;/h1&gt;\n                &lt;form action=\"{}\" method=\"POST\" enctype=\"multipart/form-data\"&gt;\n                    &lt;input type=\"file\" name=\"file\"/&gt;\n                    &lt;button type=\"submit\"&gt;Upload&lt;/button&gt;\n                &lt;/form&gt;\n            &lt;/body&gt;\n        &lt;/html&gt;\n    '.format(url))\n}\n// Use a comma as delimiter and treat first row (0) as header row\narray = csv_to_array(var('request.file.file.content'), ',', 0)\n// If CSV can't be parsed, or there's less than 2 rows, fail\nif (!array or array.length() &lt; 2) {\nrespond('\n        &lt;h1&gt;Could not parse CSV&lt;/h1&gt;\n        &lt;a href=\"{}\"&gt;Upload again&lt;/a&gt;\n    '.format(url));\n}\n// Display the parsed CSV in JSON format \nrespond('\n    &lt;h1&gt;Upload successful&lt;/h1&gt;\n    &lt;pre&gt;{}&lt;/pre&gt;\n    &lt;p&gt;\n        &lt;a href=\"{}\"&gt;Upload again&lt;/a&gt;\n    &lt;/p&gt;\n'.format(json_encode(array), url))\n</code></pre>"},{"location":"webhookscript/functions.html","title":"Functions","text":"<p>The functions page has been split up in multiple sub-pages, please start here.</p>"},{"location":"webhookscript/reference.html","title":"Reference","text":""},{"location":"webhookscript/reference.html#language-reference","title":"Language Reference","text":"<p>These are the functions that can be used in your script, and includes various utility functions and functions to interact with your Webhook.site URL.</p>"},{"location":"webhookscript/reference.html#syntax","title":"Syntax","text":"<p>The language is built with a familiar PHP/JS/C-like syntax. Statements are separated using the <code>;</code> character, but this is only required for multiple statements on the same line:</p> <ul> <li> <p>Using semicolons (recommended):     </p><pre><code>a = 1 + 2; b = a + 3;\nc = b - a;\n</code></pre><p></p> </li> <li> <p>Using newlines:     </p><pre><code>a = 1 + 2\nb = a + 3\nc = b - a\n</code></pre><p></p> </li> </ul>"},{"location":"webhookscript/reference.html#data-types","title":"Data types","text":"<p>The language has 6 data types:</p> <ul> <li>Bool</li> <li>Number</li> <li>String</li> <li>Regex</li> <li>Array</li> <li>Function</li> </ul>"},{"location":"webhookscript/reference.html#boolean","title":"Boolean","text":"<p>Example usage: </p><pre><code>a = true;\nb = 1 == 2; // false\nc = b == false; // true\nd = c == \"hello\"; // ERR: Cannot compare 'bool' and 'string'\ne = \"hello\" == r\"[0-9]\"; // false\nf = \"hello\" == r\"l{2}\"; // true\n</code></pre><p></p>"},{"location":"webhookscript/reference.html#number","title":"Number","text":"<p>Both integer and float values are supported.</p> <p>Example usage:</p> <pre><code>a = 4 - 3; // 1\nb = a / 3; // 0.333...\n</code></pre>"},{"location":"webhookscript/reference.html#string","title":"String","text":"<p>This data types represents a series of characters. Multi-byte characters (accents, diacritics) are treated properly.</p> <p>Example usage: </p><pre><code>a = \"hello\";\nb = \"w\u00f3\u00f3\u00f3rld!\";\nc = a + \" \" + b; // \"hello w\u00f3\u00f3\u00f3rld!\"\n</code></pre><p></p>"},{"location":"webhookscript/reference.html#regex","title":"Regex","text":"<p>Regex data type exists for advanced string matching. It is defined using the <code>r\"...\"</code> literal (a string literal prefixed with <code>r</code>) and treated as PCRE (Perl-compatible) regular expressions (the same as within PHP itself) with Unicode mode enabled.</p> <p>Example usage: </p><pre><code>a = \"facebook\";\nb = r\"[o]{2}.*\";\nc = a == b; // true\n</code></pre><p></p>"},{"location":"webhookscript/reference.html#array","title":"Array","text":"<p>Arrays are untyped (PHP-style) containers that can accomodate multiple values of different (or same) types. Optionally, array index can be defined for a value. By default, integer index starting from the lowest index found (or from <code>0</code>) is used, but strings can also be used.</p> <p>Example usage: </p><pre><code>a = [\"abc\", 123, 4: true, false, r\"[A-Z]+\"];\n// Resulting array: [0: \"abc\", 1: 123, 4: true, 5: false, 6: r\"[A-Z]+\"]\nb = json_encode([\"the_number\": 123, \"other_numbers\": [42, 1337, 80085]])\n// Result:\n// {\n//     \"the_number\": 123,\n//     \"other_numbers\": [\n//         42,\n//         1337,\n//         80085\n//     ]\n// }\n</code></pre><p></p>"},{"location":"webhookscript/reference.html#ranges","title":"Ranges","text":"<p>Simple way of defining ranges between numbers is provided via the <code>a..[s..]b</code> range syntax.</p> <ul> <li><code>a</code> is the from value.</li> <li><code>b</code> is the to value, inclusive, if it is not \"skipped\" due to a rather large step (see below).</li> <li><code>s</code> (optionally) is the step value which to use.</li> </ul> <p>Example usage: </p><pre><code>a = 1..4; // (array) [0: 1, 1: 2, 4: 3, 5: 4]\nb = 1..2..4; // (array) [0: 1, 1: 3]\nc = 10..4..16; // (array) [0: 10, 1: 14]\n_x = 3\n_y = 6\n_z = 2\nd = _x.._z.._y; // (array) [0: 3, 1: 5]\n</code></pre> Return value of such \"range literal\" is a new <code>array</code> having values that are based on the range's parameters.<p></p>"},{"location":"webhookscript/reference.html#functions","title":"Functions","text":"<p>Function is a value type that represents a \"unit\" of some self-contained logic. In WebhookScript they have their own type and are treated as first-class citizens: they can be stored inside variables and passed around as such. Direct invocation of an anonymous function is supported, provided that the anonymous function's definition is enclosed in parentheses. A function does capture its surrounding variables.</p> <p>Example usage: </p><pre><code>// Traditional definition.\nfunction sub(a, b) {\nreturn a - b;\n}\n// A variable \"sub\" that holds the \"sub()\" function is now defined in current scope.\nsub(1, 2); // Returns -1\n// Storing a function value into a variable.\n// Note: This is equivalent to the previous definition.\nsub_2 = function(a, b) {\nreturn a - b;\n};\n// A variable \"sub_2\" that holds the \"sub_2()\" function is now defined in current scope.\nsub_2(1, 2); // Returns -1\n// Creating a function with alternative, short syntax.\n// Note: This is equivalent all of the previous definitions.\nsub_3 = (a, b) =&gt; {\nreturn a - b;\n};\n// A variable \"sub_3\" that holds the \"sub_3()\" function is now defined in current scope.\nsub_3(1, 2); // Returns -1\n// Creating and using an anonymous function directly.\n// Using an alternative, short syntax.\n((a, b) =&gt; {\nreturn a - b;\n})(1, 2); // Returns -1\n</code></pre><p></p>"},{"location":"webhookscript/reference.html#chained-functions","title":"Chained functions","text":"<p>In addition to classical function invocation, WebhookScript additionaly supports Uniform Function Call Syntax (UFCS) as a way to call functions \"on values\". Essentially, it means that calling <code>foo(bar);</code> is equivalent to calling <code>bar.foo()</code>, or - to provide an example with additional parameters - that calling <code>foo(bar, 1, true, \"something\");</code> is equivalent to calling <code>bar.foo(1, true, \"something\")</code>.</p>"},{"location":"webhookscript/reference.html#value-type-based-inference-of-called-function-name","title":"Value-type based inference of called function name","text":"<p>When using chained function invocation, the interpreter will try to find the most fitting function to call. \"Most fitting\" meaning that when the client calls <code>bar()</code> function on a value having the <code>string</code> type, WebhookScript will try to find and use the <code>string_bar()</code> first. If such function is not defined, only then will the interpreter use the original <code>bar()</code> function.</p> <p>Consider this a syntactic sugar to make coding in WebhookScript a bit more user-friendly. Because of this the user is able to call <code>\"something\".length()</code> on a string the same way as calling <code>[1, 2, 3].length()</code> on an array, even though there are in fact two separate functions <code>string_length()</code> and <code>array_length()</code> invoked behind the scenes.</p>"},{"location":"webhookscript/reference.html#operators","title":"Operators","text":"<p>Plethora of well known operators can be used to define relationships between and/or affect various values. Different operators can have various effects on various data types, some of which are covered down below.</p>"},{"location":"webhookscript/reference.html#precedence","title":"Precedence","text":"<p>Precedence of various operators is defined as follows (from highest to lowest): - <code>(</code> ... <code>)</code> (parentheses) - <code>!</code> (logical not) - <code>*</code>, <code>/</code> (multiplication/division) - <code>+</code>, <code>-</code> (addition/subtraction) - <code>==</code>, <code>!=</code>, <code>&gt;=</code>, <code>&lt;=</code>, <code>&gt;</code>, <code>&lt;</code> (comparison) - <code>and</code> (logical and) - <code>or</code> (logical not) - <code>=</code> (assignment)</p>"},{"location":"webhookscript/reference.html#precedence-example","title":"Precedence example","text":"Raw source Equivalent to <code>1 + 2 + 3 + 4</code> <code>((1 + 2) + 3) + 4</code> <code>1 - 2 + 3 - 4</code> <code>((1 - 2) + 3) - 4</code> <code>1 + 2 * 3 + 4</code> <code>1 + (2 * 3) + 4</code> <code>1 + 2 * 3 / 4</code> <code>1 + ((2 * 3) / 4)</code> <code>1 + -2 * 3 / 4</code> <code>1 + (((-2) * 3) / 4)</code> <code>1 and 2 or 3 and 4</code> <code>(1 and 2) or (3 and 4)</code> <code>1 or 2 or 3 and 4</code> <code>(1 or 2) or (3 and 4)</code> <code>1 or !2 or !3 and 4</code> <code>(1 or (!2)) or ((!3) and 4))</code> <code>x = true or false and true</code> <code>x = (true or (false and true))</code> <code>x = a == b</code> <code>x = (a == b)</code> <code>x = a &gt; 5 and b &lt; 6</code> <code>x = ((a &gt; 5) and (b &lt; 6))</code>"},{"location":"webhookscript/reference.html#logical-operators","title":"Logical operators","text":"<ul> <li><code>and</code><ul> <li>Returns <code>true</code> if both operands are truthy.</li> <li>Otherwise returns <code>false</code>.</li> </ul> </li> <li><code>or</code><ul> <li>Returns <code>true</code> if either one (or both) operand is truthy.</li> <li>Otherwise returns <code>false</code>.</li> </ul> </li> </ul>"},{"location":"webhookscript/reference.html#negation","title":"Negation","text":"<ul> <li><code>!</code><ul> <li>Negate the value located after this operator.</li> <li>Examples:     <pre><code>a = true;\nb = !a; // false\nc = !b; // true\nd = !!b; // false\n</code></pre></li> </ul> </li> </ul>"},{"location":"webhookscript/reference.html#assignment","title":"Assignment","text":"<ul> <li><code>=</code><ul> <li>Assigns some value to a variable.</li> <li>Can also be used to insert values to values that support it (eg. arrays).</li> <li>Examples:     <pre><code>a = 1;\nb = \"a word\";\nc = false;\nd = r\"regul[ar]+\";\ne = [\"x\", \"b\": \"z\"];\ne[\"c\"] = \"x\"; // e == [\"x\", \"b\": \"z\", \"c\": \"x\"]\n</code></pre></li> </ul> </li> </ul>"},{"location":"webhookscript/reference.html#addition-and-multiplication","title":"Addition and multiplication","text":"<ul> <li><code>+</code>, <code>-</code><ul> <li>Performs addition (subtraction) of two values.<ul> <li>Numbers:<ul> <li><code>+</code> Add two numbers.</li> <li><code>-</code> Subtract two numbers.</li> </ul> </li> <li>Strings:<ul> <li><code>+</code> Concatenate two strings.</li> <li><code>-</code> Removes all occurences of the right side from the left side.</li> <li><code>-</code> (if the right side is a Regex value) Removes all matches of the regex from the left side string.</li> </ul> </li> </ul> </li> <li>Examples:     <pre><code>a = 5 + 4 // (number) 9\nb = 5 - 4; // (number) 1\nc = \"a word and number \" + 5.to_string(); // (string) \"a word and number 5\"\nd = \"a word and number {}\".format(5); // (string) \"a word and number 5\"\ne = \"a word\" + \" and one more\"; // (string) \"a word and one more\"\nf = \"a word\" - \"or\"; // (string) \"a wd\"\ng = \"regular expressions\" - r\"regul[ar]+\\s*\"; // (string) \"expressions\"\n_x = 5 + \"4\" // ERR: Cannot use operator '+' with 'number' and 'string'\n_x = \"a word and number \" + 5; // ERR: Cannot use operator '+' with 'number' and 'string'\n</code></pre></li> </ul> </li> <li><code>*</code>, <code>/</code><ul> <li>Performs multiplication (division) of two values.<ul> <li>Numbers:<ul> <li><code>+</code> Multiply two numbers.</li> <li><code>-</code> Divide two numbers.</li> </ul> </li> </ul> </li> <li>Examples:     <pre><code>a = 1 * -2; // (number) -2\nb = 2 * 3; // (number) 6\nc = 2 * \"3\"; // (string) \"33\"\nd = \"3\" * 4; // (string) \"3333\"\ne = 5 / 4; // (number) 1.25\ng = 5 / 5; // (number) 1\n_x = \"2\" * \"3\"; // ERR: Cannot use operator '*' with 'string' and 'string'\n_x = 5 / \"4\"; // ERR: Cannot use operator '/' with 'number' and 'string'\n_x = \"20\" / 4; // ERR: Cannot use operator '/' with 'string' and 'number'\n</code></pre></li> </ul> </li> </ul>"},{"location":"webhookscript/reference.html#control-structures","title":"Control structures","text":"<p>You can control the flow of your program with several kinds of statements the language provides.</p>"},{"location":"webhookscript/reference.html#if-construct","title":"if construct","text":"<p>The <code>if</code> construct - as in all other programming languages - allows you to dynamically branch your program flow based on some conditions during runtime.</p>"},{"location":"webhookscript/reference.html#examples","title":"Examples","text":"<pre><code>a = true;\nif (a) {\nb = 1;\n}\n// b == 1\n</code></pre> <pre><code>c = false;\nif (c) {\nd = 1;\n} else {\nd = 2;\n}\n// d == 2\n</code></pre> <pre><code>a = false;\nb = true;\nc = 5;\nif (a or b) {\nd = 1;\nif (d &lt; c) {\ne = d + c;\n}\n}\n// d == 1, e == 6\n</code></pre>"},{"location":"webhookscript/reference.html#for-construct","title":"for construct","text":"<p>The <code>for</code> construct allows you to iterate over a value that supports it (<code>array</code> or <code>string</code> values), while performing a task on that collection's single item.</p>"},{"location":"webhookscript/reference.html#examples_1","title":"Examples","text":"<pre><code>txt = \"123456789\";\nresult = [];\nfor (n in txt) {\nif (5 &gt; n.to_number() &gt; 0) {\nresult.push(n);\n}\n}\n// result == [0: \"1\", 1: \"2\", 2: \"3\", 3: \"4\"]\n</code></pre> <pre><code>prices = [100, 200, 300, 600, 1200];\nsentence_template = \"This costs {} units of money!\";\nresults = [];\nfor (price in prices) {\nresults.push(sentence_template.format(price));\n}\n// results == [\n//   0: \"This costs 100 units of money!\",\n//   1: \"This costs 200 units of money!\",\n//   2: \"This costs 300 units of money!\",\n//   3: \"This costs 600 units of money!\",\n//   4: \"This costs 1200 units of money!\"\n// ]\n</code></pre> <p>Note: The flow of program inside the <code>for</code> cycle can be controlled further by using the <code>continue</code> and <code>break</code> statements.</p>"},{"location":"webhookscript/reference.html#while-construct","title":"while construct","text":"<p>The <code>while</code> construct does a thing if a specified condition is met (if the condition expression has a truthy value).</p> <pre><code>c = 0;\nwhile (c &lt; 100) {\ntotal = total + c;\nc = c + 1;\n}\n// total == 4950\n</code></pre> <p>Note: The flow of program inside the <code>while</code> cycle can be controlled further by using the <code>continue</code> and <code>break</code> statements.</p>"},{"location":"webhookscript/functions/array.html","title":"Arrays","text":""},{"location":"webhookscript/functions/array.html#array_containsarray-array-stringnumber-needle-bool","title":"array_contains(array array, string/number needle) : bool","text":"<p>Returns true or false depending on whether array contains a value equal to needle.</p> <p>To check whether a key exists, use the <code>array_has</code> function.</p> <pre><code>employees = [6547: 'Simon', 235345: 'Jack', 4657: 'Jim']\ndd(array_contains(employees, 'Simon'))\n// -&gt; true\n</code></pre>"},{"location":"webhookscript/functions/array.html#array_chunkarray-array-number-count-bool-preserve_keys-false-array","title":"array_chunk(array array, number count, bool preserve_keys = false) : array","text":"<p>Splits a single array into chunks of <code>count</code>. When <code>preserve_keys</code> is set to <code>true</code>, the array keys are preserved.</p> <pre><code>test_arr = [\n'a': 123,\n'b': 234,\n'c': 345,\n'd': 345, 'e': 456\n]\ndump(array_chunk(test_arr, 2, true))\n// -&gt; [0: [\"a\": 123, \"b\": 234], 1: [\"c\": 345, \"d\": 345], 2: [\"e\": 456]]\ndump(array_chunk(test_arr, 2, false))\n// -&gt; [0: [0: 123, 1: 234], 1: [0: 345, 1: 345], 2: [0: 456]]\n</code></pre>"},{"location":"webhookscript/functions/array.html#array_copyarray-array-array","title":"array_copy(array array) : array","text":"<p>Returns a copy of array</p>"},{"location":"webhookscript/functions/array.html#array_diffarray-array1-array-array2-array","title":"array_diff(array array1, array array2) : array","text":"<p>Returns the items of array1 that are not present in array2 while keeping the array indices.</p>"},{"location":"webhookscript/functions/array.html#array_getarray-array-stringnumber-index-any-default-any","title":"array_get(array array, string/number index, any default) : any","text":""},{"location":"webhookscript/functions/array.html#array_hasarray-array-stringnumber-key-bool","title":"array_has(array array, string/number key) : bool","text":"<p>Returns true if <code>array</code> contains <code>key</code>, and false if it does not.</p> <p>To check whether a value exists, use the <code>array_contains</code> function.</p> <pre><code>employees = [6547: 'Simon', 235345: 'Jack', 4657: 'Jim']\ndd(array_has(employees, 235345))\n// -&gt; true\n</code></pre>"},{"location":"webhookscript/functions/array.html#array_joinarray-array-string-joiner-string","title":"array_join(array array, string joiner) : string","text":"<p>Returns a string where all the values are joined by <code>joiner</code>.</p> <pre><code>['hello', 'world'].join(',')\n-&gt; \"hello,world\"\n</code></pre>"},{"location":"webhookscript/functions/array.html#array_keysarray-array-array","title":"array_keys(array array) : array","text":"<p>Returns the keys of an array.</p>"},{"location":"webhookscript/functions/array.html#array_lengtharray-array-number","title":"array_length(array array) : number","text":""},{"location":"webhookscript/functions/array.html#array_maparray-array-func-function","title":"array_map(array array, func function)","text":"<p>Runs function with each array value, and returns array with key as result.</p> <pre><code>employees = ['Simon', 'Jack', 'Jim']\nresult = array_map(employees, function (employee) {\nreturn 'Hello, '+employee+'!'\n})\ndd(result)\n// -&gt; [0: \"Hello, Simon!\", 1: \"Hello, Jack!\", 2: \"Hello, Jim!\"]\n</code></pre>"},{"location":"webhookscript/functions/array.html#array_mergearray-array1-array-array2-array","title":"array_merge(array array1, array array2): array","text":"<p>Merges 2 arrays into a single array.</p> <pre><code>test1 = [123, 234, 345]\ntest2 = [345, 456]\ndump(array_merge(test1, test2))\n// -&gt; [0: 123, 1: 234, 2: 345, 3: 345, 4: 456]\n</code></pre>"},{"location":"webhookscript/functions/array.html#array_number_ofarray-stringnumber-value-number","title":"array_number_of(array, string/number value) : number","text":"<p>Returns amount of value</p>"},{"location":"webhookscript/functions/array.html#array_poparray-array-any","title":"array_pop(array array) : any","text":"<p>Pop element off end of array</p>"},{"location":"webhookscript/functions/array.html#array_pusharray-array-any-value-any","title":"array_push(array array, any value) : any","text":"<p>Adds value to end of array and returns value</p>"},{"location":"webhookscript/functions/array.html#array_randomarray-array-any","title":"array_random(array array) : any","text":"<p>Returns random value of array </p>"},{"location":"webhookscript/functions/array.html#array_rangearray-array-int-offset-int-length-0-bool-preserve_keys-false-array","title":"array_range(array array, int offset, ?int length = 0, ?bool preserve_keys = false) : array","text":"<p>Returns a range of <code>array</code>, starting from <code>offset</code>, and returns the amount specified in <code>length</code> if set (otherwise until the end of the array.) </p> <p>If <code>preserve_keys</code> is true, the result has the array keys preserved.</p> <pre><code>array = ['one', 'two', 'three', 'four', 'five']\ndump(array_slice(array, 2))\n// [0: \"three\", 1: \"four\", 2: \"five\"]\ndump(array_slice(array, 2, 2))\n// [0: \"three\", 1: \"four\"]\ndump(array_range(array, -3, 2))\n// [0: \"three\", 1: \"four\"]\n</code></pre>"},{"location":"webhookscript/functions/array.html#array_reversearray-array-array","title":"array_reverse(array array) : array","text":"<p>Returns array in reverse order</p> <pre><code>employees = [6547: 'Simon', 235345: 'Jack', 4657: 'Jim']\ndd(array_reverse(employees))\n// -&gt; [0: \"Jim\", 1: \"Jack\", 2: \"Simon\"]\n</code></pre>"},{"location":"webhookscript/functions/array.html#array_shufflearray-array-array","title":"array_shuffle(array array) : array","text":"<p>Returns shuffled version of array</p>"},{"location":"webhookscript/functions/array.html#array_sortarray-array-array","title":"array_sort(array array) : array","text":"<p>Sorts array by its values. Keys are kept as-is.</p>"},{"location":"webhookscript/functions/array.html#array_splicearray-array-int-offset-int-length-array-replacement-array","title":"array_splice(array array, int offset, ?int length, array replacement) : array","text":"<p>Removes <code>length</code> amount of values from <code>array</code>, starting from <code>offset</code> (if <code>offset</code> is negative, starts from the end of the array.)</p> <p>If <code>replacement</code> is specified, the removed values are replaced with it.</p> <pre><code>array = ['one', 'two', 'three', 'four', 'five']\ndump(array_splice(array, 2, 2))\n// [0: \"one\", 1: \"two\", 2: \"five\"]\ndump(array_splice(array, 2, 2, ['hello']))\n// [0: \"one\", 1: \"two\", 2: \"hello\", 3: \"five\"]\n</code></pre>"},{"location":"webhookscript/functions/array.html#array_valuesarray-array-array","title":"array_values(array array) : array","text":"<p>Returns the values of an array.</p> <pre><code>employees = [6547: 'Simon', 235345: 'Jack', 4657: 'Jim']\ndd(array_values(employees))\n// -&gt; [0: \"Simon\", 1: \"Jack\", 2: \"Jim\"]\n</code></pre>"},{"location":"webhookscript/functions/array.html#to_arrayarray-array-array","title":"to_array(array array) : array","text":"<p>Returns array.</p>"},{"location":"webhookscript/functions/bool.html","title":"Booleans","text":""},{"location":"webhookscript/functions/bool.html#bool_andbool-value1-bool-value2-bool","title":"bool_and(bool value1, bool value2): bool","text":"<p>Returns <code>value1 &amp;&amp; value2</code></p>"},{"location":"webhookscript/functions/bool.html#bool_notbool-value-bool","title":"bool_not(bool value) : bool","text":"<p>Returns <code>!value</code></p>"},{"location":"webhookscript/functions/bool.html#is_emptyany-value-bool","title":"is_empty(any value): bool","text":"<p>Returns <code>true</code> if:</p> <ul> <li>value is <code>\"\"</code> (empty string)</li> <li>value is <code>[]</code> (empty array)</li> <li>value is <code>null</code></li> </ul>"},{"location":"webhookscript/functions/bool.html#is_nullany-value-bool","title":"is_null(any value) : bool","text":"<p>Returns <code>true</code> if value is <code>null</code>. An alternative to <code>if (value == null)</code> that won't break when <code>value</code> isn't null due to type checking.</p> <p>Example:</p> <pre><code>value = 'example'\nif (is_null(value)) {\n// Won't trigger a type error\n}\n</code></pre>"},{"location":"webhookscript/functions/bool.html#to_boolstringnumberarraybool-value-bool","title":"to_bool(string/number/array/bool value) : bool","text":"<p>Casts <code>value</code> to a bool.</p>"},{"location":"webhookscript/functions/database.html","title":"Databases","text":""},{"location":"webhookscript/functions/database.html#database","title":"Database","text":""},{"location":"webhookscript/functions/database.html#dbstringint-db_id-function","title":"db(string/int db_id) : function","text":"<p>The <code>db_id</code> parameter must either be the name or ID of a Webhook.site Database instance.</p> <p>When called directly, <code>db()</code> returns a Webhook.site Database instance in the form of a function that takes the following arguments: <code>query</code>, <code>params</code> and returns an array with the following keys: <code>result</code>, <code>error</code>, <code>time</code>.</p> <pre><code>// Connect to a Webhook.site Database instance\nmydb = db('mydb')\n// You can use both numeric parameter names ...\nres = mydb(\n'insert into users (name, email) values (?, ?)',\n[\nget('request.query.name'),\nget('request.query.email')\n]\n)\ndump(res)\n// [\n//   \"result\": [\n//     0: []\n//   ], \n//   \"error\": null, \n//   \"time\": 0\n// ]\n// ... as well as named\nres = mydb(\n'select * from users where email = :email',\n[\n'email': get('request.query.email')\n]\n)\ndump(res)\n// [\n//   \"result\": [\n//     0: [\n//       \"name\": \"example\", \n//       \"email\": \"user@example.com\"\n//       ]\n//     ], \n//   \"error\": null, \n//   \"time\": 0\n// ]\n// On error, the `error` key is set:\nres = db('select * from nonexisting_table')\ndump(res)\n// [\n//   \"result\": null, \n//   \"error\": \"Undefined table: 7 ERROR: relation \\\"nonexisting\\\" does not exist\", \n//   \"time\": 0\n// ]\n</code></pre>"},{"location":"webhookscript/functions/date.html","title":"Dates","text":""},{"location":"webhookscript/functions/date.html#date-and-time-manipulation","title":"Date and Time Manipulation","text":""},{"location":"webhookscript/functions/date.html#supported-date-and-time-formats","title":"Supported date and time formats","text":"<p>In WebhookScript, dates are not a specific type, but rather expressed as strings that WebhookScript will attempt to parse using a very powerful date parsing engine.</p> <p>WebhookScript supports a variety of date formats, and functions taking a date will attempt to guess the format of the input string in order to parse the date into a ISO-8601 format</p> <p>If possible, it's recommended to use the ISO-8601 format, for example <code>2020-05-27T04:00:00.000000Z</code>.</p> <ul> <li> <p>List of date format characters for the <code>to_date</code> and <code>date_format</code> functions.</p> </li> <li> <p>List of locales/translations available for date display functions</p> </li> <li> <p>List of Timezone names</p> </li> </ul>"},{"location":"webhookscript/functions/date.html#recognized-date-formats","title":"Recognized date formats","text":"<p>In addition to automatically recognizing date strings like ISO-8601, WebhookScript has ability to recognize the following special formats.</p> <ul> <li><code>now</code></li> <li><code>+4 day</code>, <code>-2 month</code> - adds or subtracts to the current date and time, can be suffixed to other dates<ul> <li>Other units supported: <code>second</code>, <code>minute</code>, <code>hour</code>, <code>day</code>, <code>fortnight</code>, <code>week</code>, <code>month</code>, <code>year</code></li> <li>Can be combined: <code>2022-12-15T11:00:00.000000Z +5 minute</code> adds 5 minutes</li> </ul> </li> <li><code>next Thursday</code></li> <li><code>last Monday</code></li> <li><code>first day of January 2008</code></li> <li><code>first Saturday of July 2008</code></li> <li><code>Monday next week</code></li> <li><code>@1215282385</code> - UNIX timestamp</li> </ul> <p>For more information, PHP Supported Date and Time Formats.</p>"},{"location":"webhookscript/functions/date.html#nowstring-timezone-string","title":"now(?string timezone) : string","text":"<p>Returns the current date in ISO-8601 format, using <code>timezone</code>, if specified.</p> <pre><code>now()\n// -&gt; 2022-12-15T11:00:00.000000Z\nnow('America/Los_Angeles')\n// -&gt; 2022-12-15T03:00:00.000000-08:00\n</code></pre>"},{"location":"webhookscript/functions/date.html#to_datestring-date-string-input_format-locale-locale-string-timezone-bool-keep_timezone-false-string","title":"to_date(string date, ?string input_format, ?locale locale, ?string timezone, bool keep_timezone = false): ?string","text":"<p>Returns a ISO-8601 formatted date string in UTC time from the provided <code>date</code> string.</p> <p>If specified, <code>input_format</code> is used to parse the date without having to guess the format (see the Date Format Characters specification.) Otherwise, see Recognized date formats. </p> <p>If the <code>keep_timezone</code> parameter is set to true, the resulting date string will keep the timezone. The <code>locale</code> parameter will attempt to parse the date using the specified locale.</p> <p>If the date is invalid or could not be guessed, <code>null</code> is returned.</p> <pre><code>// Current date and time\n'now'.to_date()\n// -&gt; 2020-11-25T00:00:00.000000Z\n// Relative formats\n'first monday august 2019'.to_date()\n// Automatic format guessing\n'2020-01-01 23:02:01'.to_date()\n// Timezone handling\n'2020-01-01 23:02:01'.to_date(null, null, 'GMT-5')\n// -&gt; \"2020-01-02T04:02:01.000000Z\", interpreted as GMT-5 and converted to UTC\n'2020-01-01 23:02:01'.to_date(null, null, 'GMT-5', true)\n// -&gt; \"2020-01-01T23:02:01.000000-05:00\", date keeps timezone\n// Unix timestamp\n'@1215282385'.to_date()\n// 2008-07-05T18:26:25.000000Z\n// Custom date format\n'2/4/12 06:03'.to_date('M/D/YY HH:mm')\n// -&gt; 2012-02-04T06:03:00.000000Z\n// To escape characters in the format string, backslashes can be used\n'2020-01-05 12h30m15s'.to_date('YYYY-MM-DD HH\\\\hmm\\\\mss\\\\s')\n// -&gt; 2020-01-05T12:30:15.000000Z\n</code></pre>"},{"location":"webhookscript/functions/date.html#date_formatstring-date-string-format-string-locale-string-timezone-string","title":"date_format(string date, ?string format, ?string locale, ?string timezone): string","text":"<p>Returns a date converted to the format specified in <code>format</code>. <code>date</code> is automatically parsed and can be a date string (ISO-8601 recommended) or one of the recognized date formats.</p> <p>For a full list of date format characters, see the Date Format Characters specification.</p> <p>If <code>format</code> is not specified, a default human readable readable string is returned.</p> <pre><code>date_format('2008-07-05T18:26:25.000000Z', 'YYYY-MM-DD') // -&gt; 2008-07-05\ndate_format('2008-07-05T18:26:25.000000Z', 'LLLL', 'da') // -&gt; l\u00f8rdag d. 5. juli 2008 kl. 18:26\ndate_format('2020-01-01T23:02:01.000000-05:00', 'LLLL', null, 'GMT+2') // -&gt; Thursday, January 2, 2020 6:02 AM\ndate_format('now', 'x')\n// -&gt; 1606329669220 (current date in UNIX timestamp with microseconds)\n// Add 1 hour to an existing date (see Recognized date formats above)\ndate_format('2021-10-28 11:28:55 +1 hour', 'YYYY-MM-DD HH:mm:ss')\n// -&gt; 2021-10-28 12:28:55\n// Format UNIX timestamp and convert to GMT+10 timzone\ndate_format('@1718463517', 'YYYY-MM-DD HH:mm:ss', null, 'GMT+10')\n// 2024-06-16 00:58:37\n</code></pre>"},{"location":"webhookscript/functions/date.html#date_to_arraystring-array","title":"date_to_array(string): array","text":"<p>Returns an array containing all the components of a given date.</p> <pre><code>dump(date_to_array('2008-07-05T18:26:25.324542Z'))\n// [\n//   \"year\": 2008,\n//   \"month\": 7,\n//   \"day\": 5,\n//   \"dayOfWeek\": 6,\n//   \"dayOfYear\": 187,\n//   \"hour\": 18,\n//   \"minute\": 26,\n//   \"second\": 25,\n//   \"micro\": 324542,\n//   \"timestamp\": 1215282385,\n//   \"formatted\": \"2008-07-05 18:26:25\",\n//   \"timezone\": \"Z\"\n// ]\n</code></pre>"},{"location":"webhookscript/functions/date.html#date_intervalstring-date1-string-date2-string-format-stringint","title":"date_interval(string date1, ?string date2, ?string format): string/int","text":"<p>Calculates the interval between <code>date1</code> and <code>date2</code>. When <code>date2</code> is unspecified/null, <code>now</code> is used.</p> <p>If no format string is specified, the interval is returned as the number of seconds between the dates, with the number being negative if <code>date2</code> is before <code>date1</code>.</p> <p>For the <code>format</code> string, the PHP <code>DateInterval</code> format specification is used.</p> <pre><code>date_interval('2008-07-16T23:13:26.234212Z', '2008-07-05T18:26:25.324542Z') // -&gt; -967620\ndate_interval(\n'2008-07-16T23:13:26.234212Z',\n'2008-07-05T18:26:25.324542Z',\n'%d days, %h hours, %i minutes'\n)\n// -&gt; 11 days, 4 hours, 47 minutes\n</code></pre>"},{"location":"webhookscript/functions/date.html#date_interval_humanstring-date1-string-date2-string-locale-stringint","title":"date_interval_human(string date1, ?string date2, ?string locale): string/int","text":"<p>Formats the difference between 2 dates in a way that's easy to read for humans.</p> <p>If no locale is specified, English is used.  When <code>date2</code> is unspecified/null, <code>now</code> is used.</p> <pre><code>date_interval_human(\n'2008-07-16T23:13:26.234212Z',\n'2008-07-05T18:26:25.324542Z'\n)\n// -&gt; 1 week after\ndate_interval_human(\n'2008-07-16T23:13:26.234212Z',\n'2008-07-05T18:26:25.324542Z',\n'es'\n)\n// -&gt; 1 semana despu\u00e9s\n</code></pre>"},{"location":"webhookscript/functions/files.html","title":"File handling","text":"<p>When you send an email, or send a multipart/form-data request, files are extracted as the <code>file.*.*</code> variables, but you can also loop over files using WebhookScript.</p>"},{"location":"webhookscript/functions/files.html#filesstring-name-array","title":"files(string name) : array","text":"<p>Returns an array of files, with the following keys:</p> <ul> <li>id - unique file ID</li> <li>filename - original filename</li> <li>size - size of the file in bytes</li> <li>content-type - mime content type of the file</li> </ul> <pre><code>dump(files())\n// [\n//   0: [\n//     \"id\": \"76b7274a-e806-4f72-ba49-85ad05926ef0\", \n//     \"filename\": \"Screen Shot 2020-06-05 at 2.15.29 PM.png\", \n//     \"size\": 1203671, \n//     \"content_type\": \"image/png\"\n//   ]\n// ]\n// Filtering files by type\nfor (file in files()) {\nif (r'.*\\.png'.match(file['filename'])) {\ndump(file['filename'] + ' is png.')\n}\n}\n// \"Screen Shot 2020-06-05 at 2.15.29 PM.png is png.\"\n</code></pre>"},{"location":"webhookscript/functions/files.html#file_contentstring-fileid-string","title":"file_content(string fileId) : string","text":"<p>Returns the content of a specific file, using the <code>id</code> key from the <code>files()</code> function above.</p> <pre><code>firstFile = array_get(files(), 0)\nfileContent = file_contents(firstFile['id']);\n</code></pre>"},{"location":"webhookscript/functions/flow.html","title":"Flow Control and Responses","text":""},{"location":"webhookscript/functions/flow.html#script-execution","title":"Script Execution","text":""},{"location":"webhookscript/functions/flow.html#actionstring-action_type-array-parameters-array","title":"action(string action_type, array parameters) : array","text":"<p>Runs Custom Actions in WebhookScript. Can be used to loop over items in a way that not possible using the visual Custom Actions editor.</p> <p>The function returns an array of runtime variables which can be used to fetch the result of an action that sets a variable, like <code>google_sheets_get_values</code>.</p> <p>The <code>action_type</code>s and their parameters can be seen here.</p> <p>The following action extracts a list of files from an array of objects in a JSON array and uploads each file to Dropbox using the <code>dropbox_upload_file</code> action.</p> <p>Example</p> <p>In this example, we assume that the request content sent to the Webhook.site URL contains the following:</p> <pre><code>{\n\"files\": [\n{\n\"url\": \"https://example.com/path/980e683e-9bd7-4512-bc0e-acfd6e022a81\",\n\"name\": \"example_1.png\"\n},\n{\n\"url\": \"https://example.com/path/c8e1282f-46a7-45ab-9699-0472ff9ab96c\",\n\"name\": \"example_2.png\"\n}\n]\n}\n</code></pre> <p>In the script, the request contents are JSON decoded and looped over. For each item, the file's URL is downloaded and a Dropbox Upload File action is executed.</p> <pre><code>files = json_path(var('request.content'), '.files.*')\nfor (file_info in files) {\n// Download file from URL\nfile_download = request(file_info['url'])\n// Generate a destination path for the Dropbox file\ndestination_path = '/Example Files/%s'.format(file_info['name'])\n// Execute Dropbox Upload File action\naction(\n'dropbox_upload_file',\n[\n'path': destination_path,\n'body': file_download['content'],\n'mode': 'update',\n'provider_id': providerId\n]\n)\n}\n</code></pre>"},{"location":"webhookscript/functions/flow.html#delayint-seconds-string-code-deprecated","title":"delay(int seconds, string code) [deprecated]","text":"<p>Warning</p> <p>This function has been deprecated and should no longer be used. As an alternative, it's recommended that you mark a WebhookScript Custom Action as Queued. More info here.</p> <p>Executes code in the future. Any output will be stored on the request and will show with a \"Was delayed\" label. </p> <p>The code will not inherit the execution scope.</p> <p>In this example, the <code>format</code> function is used to prepare the code string with a URL, causing <code>{}</code> to be replaced with with <code>https://example.com</code>.</p> <pre><code>code = '\n  request(\n      \"{}\",\n      \\'{\"message\": \"Hello World!\"}\\',\n      \"POST\"\n  )\n'\nurl = 'https://example.com'\ndelay(5, code.format(url));\n</code></pre> <p>The maximum amount of seconds allowed is 604800 (7 days).</p>"},{"location":"webhookscript/functions/flow.html#dont_save","title":"dont_save()","text":"<p>Marks the request so it is not saved in Webhook.site, which is useful when receiving a large amount of requests. The request can still be seen when it comes in, but will not be available through through the app later, or through the API. The action is useful in cases where e.g. a URL receive a large amount of requests.</p>"},{"location":"webhookscript/functions/flow.html#execstring-code-any","title":"exec(string code) : any","text":"<p>Executes code in <code>code</code> and returns the result. The code will inherit the execution scope.</p>"},{"location":"webhookscript/functions/flow.html#importstring-url-any","title":"import(string url) : any","text":"<p>Downloads code located at <code>url</code> and returns the result. The code will inherit the execution scope. </p> <p>As an example, this can be used if you want to re-use code. Just upload it to a server or e.g. Github and use it in different WebhookScript actions.</p> <pre><code>result = import('https://raw.githubusercontent.com/webhooksite/scripts/ec22946a83ea85f607fcc6bff83f9d81ed2fe4ed/hello_world.ws')\necho(result) // value\n</code></pre>"},{"location":"webhookscript/functions/flow.html#stop","title":"stop()","text":"<p>Stops Custom Action execution.</p>"},{"location":"webhookscript/functions/flow.html#responses","title":"Responses","text":""},{"location":"webhookscript/functions/flow.html#respondstring-content-int-status-array-headers","title":"respond(string content, int status, array headers)","text":"<p>Stops Custom Action execution and return a response immediately.</p>"},{"location":"webhookscript/functions/flow.html#set_contentstring-content","title":"set_content(string content)","text":"<p>Sets or overwrites the response content of the URL. Script execution continues.</p>"},{"location":"webhookscript/functions/flow.html#set_headerstring-header_name-string-header_value","title":"set_header(string header_name, string header_value)","text":"<p>Sets or overwrites a response header of the URL. Script execution continues.</p>"},{"location":"webhookscript/functions/flow.html#set_responsestring-content-int-status-array-headers","title":"set_response(string content, int status, array headers)","text":"<p>Sets or overwrites response content, status and headers in single function.  Script execution continues.</p> <p><code>headers</code> should be an array of strings e.g. <code>[\"X-Example: Value\", \"X-Foo: Bar\"]</code>.</p>"},{"location":"webhookscript/functions/flow.html#set_statusnumber-status","title":"set_status(number status)","text":"<p>Sets or overwrites the HTTP response status of the current URL.  Script execution continues.</p>"},{"location":"webhookscript/functions/general.html","title":"General","text":""},{"location":"webhookscript/functions/general.html#about-functions","title":"About Functions","text":"<p>These are the functions that can be used in your script, and includes various utility functions and functions to interact with your Webhook.site URL.</p>"},{"location":"webhookscript/functions/general.html#chaining","title":"Chaining","text":"<p>Functions can be chained directly to a primitive (strings, numbers, arrays).</p> <p>These two statements are equivalent:</p> <pre><code>'Hello World'.echo()\n</code></pre> <pre><code>echo('Hello World')\n</code></pre> <p>They can even be chained, for example:</p> <pre><code>'Hello World'.hash('md5').echo() </code></pre> <p>Furthermore, functions that begin in a type can be referenced without it, for example, when calling the <code>format</code> function with the first argument being a string, the language infers that actually the <code>string_format</code> function should be used.</p> <pre><code>echo(string_format('hello %s', 'world')) // hello world\n'hello %s'.format('world').echo() // hello world\n</code></pre> <p>Read more about functions in the reference.</p>"},{"location":"webhookscript/functions/general.html#custom-functions","title":"Custom functions","text":"<p>Define your own functions like this:</p> <pre><code>function sub(a, b) {\nreturn a - b;\n}\n</code></pre> <p>Read more about functions in the reference.</p>"},{"location":"webhookscript/functions/general.html#debugging-and-output","title":"Debugging and output","text":""},{"location":"webhookscript/functions/general.html#echostring-string","title":"echo(...string string)","text":"<p>Adds <code>string</code> to script debug output.</p>"},{"location":"webhookscript/functions/general.html#ddany-value","title":"dd(...any value)","text":"<p>Stops Custom Action execution and adds <code>value</code> to script debug output.</p>"},{"location":"webhookscript/functions/general.html#dumpany-value","title":"dump(...any value)","text":"<p>Adds <code>value</code> as a decoded string to script debug output.</p>"},{"location":"webhookscript/functions/general.html#types","title":"Types","text":""},{"location":"webhookscript/functions/general.html#typeany-value-string","title":"type(any value) : string","text":"<p>Returns the type name of a value, e.g. <code>\"string\"</code>.</p>"},{"location":"webhookscript/functions/math.html","title":"Math and Numbers","text":""},{"location":"webhookscript/functions/math.html#trigonometry","title":"Trigonometry","text":""},{"location":"webhookscript/functions/math.html#atannumber-number-number","title":"atan(number number) : number","text":""},{"location":"webhookscript/functions/math.html#cosnumber-number-number","title":"cos(number number) : number","text":""},{"location":"webhookscript/functions/math.html#sinnumber-number-number","title":"sin(number number) : number","text":""},{"location":"webhookscript/functions/math.html#tannumber-number-number","title":"tan(number number) : number","text":""},{"location":"webhookscript/functions/math.html#hexadecimal-binary","title":"Hexadecimal &amp; Binary","text":""},{"location":"webhookscript/functions/math.html#bin2hexstring-data-string","title":"bin2hex(string data): string","text":"<p>Converts a binary tring to a hexadecimal representation.</p>"},{"location":"webhookscript/functions/math.html#hex2binstring-hex_string-string","title":"hex2bin(string hex_string) : ?string","text":""},{"location":"webhookscript/functions/math.html#num2hexnumber-number-string","title":"num2hex(number number) : string","text":""},{"location":"webhookscript/functions/math.html#hex2numstring-hex_string-number","title":"hex2num(string hex_string) : number","text":""},{"location":"webhookscript/functions/math.html#general","title":"General","text":""},{"location":"webhookscript/functions/math.html#absnumber-number-number","title":"abs(number number) : number","text":""},{"location":"webhookscript/functions/math.html#ceilnumber-number-number","title":"ceil(number number) : number","text":"<p>Rounds a number up to nearest integer.</p>"},{"location":"webhookscript/functions/math.html#floornumber-number-number","title":"floor(number number) : number","text":"<p>Rounds a number down to nearest integer.</p>"},{"location":"webhookscript/functions/math.html#is_numericany-value-bool","title":"is_numeric(any value) : bool","text":"<p>Returns <code>true</code> if <code>value</code> is numeric. </p> <p>Examples: </p> <ul> <li><code>12345</code> returns <code>true</code>.</li> <li><code>\"1.0\"</code> returns <code>true</code>.</li> <li><code>null</code> returns <code>false</code>.</li> </ul>"},{"location":"webhookscript/functions/math.html#maxarray-numbers-number","title":"max(array numbers) : number","text":""},{"location":"webhookscript/functions/math.html#minarray-numbers-number","title":"min(array numbers) : number","text":""},{"location":"webhookscript/functions/math.html#modnumber-number-number-divisor-number","title":"mod(number number, number divisor) : number","text":"<p>Returns the remainder after number is divided by <code>divisor</code>.</p>"},{"location":"webhookscript/functions/math.html#number_lengthnumber-number-number","title":"number_length(number number) : number","text":""},{"location":"webhookscript/functions/math.html#pi-number","title":"pi() : number","text":"<p>Returns the value of Pi.</p>"},{"location":"webhookscript/functions/math.html#pownumber-number-number-power-number","title":"pow(number number, number power) : number","text":""},{"location":"webhookscript/functions/math.html#randnumber-min-number-max-number","title":"rand(number min, number max) : number","text":"<p>Returns a random number between <code>min</code> and <code>max</code>.</p>"},{"location":"webhookscript/functions/math.html#roundnumber-number-number-precision-number","title":"round(number number, number precision) : number","text":"<p>Rounds a number up with specified precision (number of digits after decimal point.)</p> <pre><code>round(1.39, 1) // -&gt; 1.4\n</code></pre>"},{"location":"webhookscript/functions/math.html#sqrtnumber-number-number","title":"sqrt(number number) : number","text":""},{"location":"webhookscript/functions/math.html#to_numberany-value-number","title":"to_number(any value) : number","text":""},{"location":"webhookscript/functions/network.html","title":"Network and HTTP","text":""},{"location":"webhookscript/functions/network.html#http","title":"HTTP","text":""},{"location":"webhookscript/functions/network.html#queryarray-form_values-string","title":"query(array form_values) : string","text":"<p>Converts an associative array into a form-style string, used for e.g. <code>application/x-www-form-urlencoded</code> requests or HTTP query strings.</p> <pre><code>query(['country': 'Cura\u00e7ao', 'population': 158665]) // country=Cura%C3%A7ao&amp;population=158665\n</code></pre>"},{"location":"webhookscript/functions/network.html#httpstring-url-array-options-array","title":"http(string url, array options) : array","text":"<p>Sends a HTTP request and returns an array with the following keys containing response data:</p> <ul> <li><code>content</code> (contains a cURL error message in case of an error)</li> <li><code>status</code> (<code>null</code> in case of an error)</li> <li><code>headers</code></li> <li><code>url</code></li> </ul>"},{"location":"webhookscript/functions/network.html#options-array","title":"Options array","text":"<p>The <code>options</code> array can contain the following keys; none are required.</p> <ul> <li><code>mode</code> - string, one of: text (default), multipart, urlencoded, forward</li> <li><code>content</code> - string, body content, used when mode is text</li> <li><code>method</code> - string, HTTP method, e.g. POST</li> <li><code>multipart</code> - array of arrays, used when mode is multipart, containing keys:<ul> <li><code>name</code> - required, string, form item name</li> <li><code>filename</code> - string</li> <li><code>content-type</code> - string</li> <li><code>content</code> - string</li> </ul> </li> <li><code>urlencoded</code> - array of arrays, used when mode is urlencoded, containing keys:<ul> <li><code>name</code> - required, string, form item name</li> <li><code>value</code> - string</li> </ul> </li> <li><code>headers</code> - array of strings, HTTP headers</li> <li><code>skip_ssl_verification</code> - default false, skips TLS/SSL certificiate validation for HTTPS requests</li> <li><code>timeout</code> - number, default 5, timeout in seconds</li> </ul>"},{"location":"webhookscript/functions/network.html#post-request","title":"POST Request","text":"<p>To send a simple POST request containing e.g. JSON data, use the following:</p> <pre><code>http(\n'https://example.com',\n[\n'method': 'POST', 'content': '{\"example\": \"json\"}', 'headers': ['Content-Type: application/json']\n]\n)\n</code></pre>"},{"location":"webhookscript/functions/network.html#formmultipart-request","title":"form/multipart request","text":"<pre><code>http(\n'https://example.com', [\n'method': 'POST',\n'mode': 'multipart', 'multipart': [\n[\n'name': 'value1',\n'content': 'This is a value',\n]\n]\n]\n)\n</code></pre>"},{"location":"webhookscript/functions/network.html#requeststring-url-string-body-string-method-get-array-headers-bool-override-false-timeout-5-array","title":"request(string url, string body, string method = 'GET', array headers, bool override = false, timeout = 5) : array","text":"<p>Sends a HTTP request and returns an array with the following keys containing response data:</p> <ul> <li><code>content</code> (contains a cURL error message in case of an error)</li> <li><code>status</code> (<code>null</code> in case of an error)</li> <li><code>headers</code></li> <li><code>url</code></li> </ul> <p>The headers should be an array of strings, for example:</p> <pre><code>[\n'Content-Type: application/json',\n'Accept: application/json, text/plain, */*'\n]\n</code></pre> <p>To get a JSON document, validate if valid JSON, and get a property:</p> <pre><code>response = request('https://example.com')\ndecoded = json_decode(response['content'])\nif (decoded) {\nvalue = decoded['value']\n}\n</code></pre> <p>If <code>override</code> is set to true, none of the content from the original request is included (e.g. query strings, headers, content.)</p>"},{"location":"webhookscript/functions/network.html#multipartstring-url-array-items-string-method-post-array-headers-num-timeout-array","title":"multipart(string url, array items, string method = 'POST', array headers, num timeout) : array","text":"<p>Sends a HTTP Multipart request, e.g. for uploading files.</p> <p><code>name</code> (the form name value) and <code>content</code> are required in the <code>items</code> array; the rest is optional.</p> <p><code>timeout</code> specifies the request timeout in seconds.</p> <p>The return value is an array with the following keys containing response data:</p> <ul> <li><code>content</code> (contains a cURL error message in case of an error)</li> <li><code>status</code> (<code>null</code> in case of an error)</li> <li><code>headers</code></li> <li><code>url</code></li> </ul> <p>Example:</p> <pre><code>multipart(\n'https://example.com/file-upload', [\n[\n'name': 'file[]',\n'filename': 'file1.txt',\n'content': 'hello world',\n'headers': ['Header1': 'value', 'Header2': 'othervalue']\n],\n[\n'name': 'client_id',\n'content': 'abcd123',\n]\n],\n'POST',\n['Api-Key: xxxx']\n)\n</code></pre>"},{"location":"webhookscript/functions/network.html#url_decodestring-value-string","title":"url_decode(string value) : string","text":"<p>Returns an URL-decoded version of value.</p>"},{"location":"webhookscript/functions/network.html#url_encodestring-value-string","title":"url_encode(string value) : string","text":"<p>Returns an URL-encoded version of value.</p> <pre><code>url_encode('here\\'s a value') // here%27s+a+value\n</code></pre>"},{"location":"webhookscript/functions/string.html","title":"Strings","text":""},{"location":"webhookscript/functions/string.html#general-string-functions","title":"General string functions","text":""},{"location":"webhookscript/functions/string.html#string_containsstring-subject-numberstringregex-value-bool","title":"string_contains(string subject, number/string/regex value) : bool","text":"<p>Returns boolean if subject contains value</p>"},{"location":"webhookscript/functions/string.html#string_find_firststring-subject-numberstring-value-number","title":"string_find_first(string subject, number/string value) : number","text":"<p>Returns position of value in subject, or false if not found</p>"},{"location":"webhookscript/functions/string.html#string_find_laststring-subject-numberstring-value-number","title":"string_find_last(string subject, number/string value) : number","text":"<p>Returns position of value in subject, or false if not found</p>"},{"location":"webhookscript/functions/string.html#string_formatstring-formatstring-any-items-string","title":"string_format(string formatString, ...any items) : string","text":"<p>Sprintf-like formatting of formatString with items, see PHP sprintf docs.</p>"},{"location":"webhookscript/functions/string.html#string_lengthstring-string-number","title":"string_length(string string) : number","text":"<p>Returns length of string (multibyte-aware)</p>"},{"location":"webhookscript/functions/string.html#string_lowerstring-string-string","title":"string_lower(string string) : string","text":"<p>Converts <code>string</code> to lowercase (multibyte-aware)</p>"},{"location":"webhookscript/functions/string.html#string_number_ofstring-string-number","title":"string_number_of(string string) : number","text":"<p>Returns number value of string</p>"},{"location":"webhookscript/functions/string.html#string_randomnumber-length-string","title":"string_random(number length) : string","text":"<p>Returns a random string of length using the  <code>A\u2013Z,a\u2013z,0\u20139</code> alphabet.</p>"},{"location":"webhookscript/functions/string.html#string_replacestring-subject-stringregexarray-search-string-replace-string","title":"string_replace(string subject, string/regex/array search, string replace) : string","text":"<p>Replaces string search with replace found in subject.</p> <pre><code>string_replace('this is a sentence', 'sentence', 'string') // -&gt; this is a string\nstring_replace('this is great', r'(.*) is (.*)', '$1 was $2') // -&gt; this was great\n</code></pre>"},{"location":"webhookscript/functions/string.html#string_replacestring-subject-array-replace_pairs-string","title":"string_replace(string subject, array replace_pairs) : string","text":"<p>Replaces items found in subject using the replace_pairs array:</p> <pre><code>string_replace(\"hello, it's good\", [\n'hello': 'hi',\n'good': 'great'\n]) // -&gt; hi, it's great\n</code></pre>"},{"location":"webhookscript/functions/string.html#string_reversestring-subject-string","title":"string_reverse(string subject) : string","text":"<p>Reverses string subject </p>"},{"location":"webhookscript/functions/string.html#string_slicestring-subject-number-from-number-to-null-string","title":"string_slice(string subject, number from, number to = null) : string","text":"<p>Extracts a segment of a string. Multibyte-aware.</p> <p><code>string_slice('hello world', 0, 5)</code> returns <code>hello</code>.</p> <p><code>string_slice('hello world', 6)</code> returns <code>world</code>.</p>"},{"location":"webhookscript/functions/string.html#string_shufflestring-string-string","title":"string_shuffle(string string) : string","text":"<p>Returns string where the individual characters has been shuffled.</p>"},{"location":"webhookscript/functions/string.html#string_splitstring-subject-stringregex-delimiter-array","title":"string_split(string subject, string/regex delimiter) : array","text":"<p>Returns array of split string subject with delimiter </p>"},{"location":"webhookscript/functions/string.html#string_titlestring-string-string","title":"string_title(string string) : string","text":"<p>Returns <code>string</code> converted to title case.</p> <p><code>string_title('hello world')</code> returns <code>Hello World</code>.</p>"},{"location":"webhookscript/functions/string.html#string_upperstring-string-string","title":"string_upper(string string) : string","text":"<p>Converts <code>string</code> to UPPERCASE (multibyte-aware).</p>"},{"location":"webhookscript/functions/string.html#to_regexstring-regex-regex","title":"to_regex(string regex) : regex","text":"<p>Converts a regex string to a regex type</p>"},{"location":"webhookscript/functions/string.html#to_stringstringnumberbool-value-string","title":"to_string(string/number/bool value) : string","text":"<p>Returns value as string </p>"},{"location":"webhookscript/functions/string.html#trimstring-string-string","title":"trim(string string): string","text":"<p>Returns <code>string</code> with space, tab and newline characters removed from the beginning and end of the string.</p>"},{"location":"webhookscript/functions/string.html#uuid-string","title":"uuid() : string","text":"<p>Returns a random v4 UUID.</p>"},{"location":"webhookscript/functions/string.html#csv","title":"CSV","text":""},{"location":"webhookscript/functions/string.html#csv_to_arraystring-content-string-delimiter-int-header_offset-string-enclosure-string-escape-array","title":"csv_to_array(string content, string delimiter, ?int header_offset, string enclosure, string escape) : array","text":"<p>Takes a CSV string and outputs to an array, with each row being an item in the array.</p> <ul> <li><code>content</code> should be a string containing the CSV document.</li> <li><code>delimiter</code> will explicitly set the CSV delimiter the parser will attempt to use (e.g. <code>;</code>). Must be a single character. Defaults to <code>,</code> (comma.)</li> <li><code>header_offset</code>, when specified, causes the output array item's keys to be set to the header values. Setting to <code>0</code> will mark the first row as the header row. </li> <li><code>enclosure</code> sets the field enclosure character. Must be a single character. Defaults to <code>\"</code> (double quote.)</li> <li><code>escape</code> sets the field escape character. Must be a single character. Defaults to <code>\\</code> (backslash.)</li> </ul> <pre><code>csv_content = 'firstname,lastname,title\n\"M. J.\",Plumley,\"Sr. Developer\"\nEmily,\"Jenna Platt\",\"Chief Information Officer\"'\narray = csv_to_array(csv_content, ',', 0)\necho(json_encode(array))\n// [\n//     {\n//         \"firstname\": \"John\",\n//         \"lastname\": \"Doe\",\n//         \"title\": \"Sr. Developer\"\n//     },\n//     {\n//         \"firstname\": \"Emily\",\n//         \"lastname\": \"Jenna Platt\",\n//         \"title\": \"Chief Information Officer\"\n//     }\n// ]\n</code></pre>"},{"location":"webhookscript/functions/string.html#base64","title":"Base64","text":""},{"location":"webhookscript/functions/string.html#base64_decodestring-string-string","title":"base64_decode(string string) : string","text":"<p>Returns a base64-decoded string.</p>"},{"location":"webhookscript/functions/string.html#base64_urldecodestring-string-string","title":"base64_urldecode(string string) : string","text":"<p>Returns a base64url-decoded string.</p> <p>If the base64 string was encoded using URL-friendly <code>base64url</code> format, this function should be used rather the regular <code>base64_decode</code> function.</p>"},{"location":"webhookscript/functions/string.html#base64_encodestring-string-string","title":"base64_encode(string string) : string","text":"<p>Returns base64-encoded string.</p>"},{"location":"webhookscript/functions/string.html#base64_urlencodestring-string-string","title":"base64_urlencode(string string) : string","text":"<p>Returns a URL-friendly base64url-encoded string, where characters <code>+</code>, <code>/</code> have been replaced by <code>-</code> and <code>_</code>, and any <code>=</code> padding characters have been removed.</p>"},{"location":"webhookscript/functions/string.html#hashing","title":"Hashing","text":""},{"location":"webhookscript/functions/string.html#hashstringnumber-value-string-algo-string","title":"hash(string/number value, string algo) : string","text":"<p>Returns a hashed version of <code>value</code> using the <code>algo</code> algorithm.</p> <p></p><pre><code>'hello world'.hash('md5')  // 5eb63bbbe01eeed093cb22bb8f5acdc3\n</code></pre> <p></p> <p>The following built-in algorithms are available: <code>md2</code>, <code>md4</code>, <code>md5</code>, <code>sha1</code>, <code>sha224</code>, <code>sha256</code>, <code>sha384</code>, <code>sha512/224</code>, <code>sha512/256</code>, <code>sha512</code>, <code>sha3-224</code>, <code>sha3-256</code>, <code>sha3-384</code>, <code>sha3-512</code>, <code>ripemd128</code>, <code>ripemd160</code>, <code>ripemd256</code>, <code>ripemd320</code>, <code>whirlpool</code>, <code>tiger128,3</code>, <code>tiger160,3</code>, <code>tiger192,3</code>, <code>tiger128,4</code>, <code>tiger160,4</code>, <code>tiger192,4</code>, <code>snefru</code>, <code>snefru256</code>, <code>gost</code>, <code>gost-crypto</code>, <code>adler32</code>, <code>crc32</code>, <code>crc32b</code>, <code>fnv132</code>, <code>fnv1a32</code>, <code>fnv164</code>, <code>fnv1a64</code>, <code>joaat</code>, <code>haval128,3</code>, <code>haval160,3</code>, <code>haval192,3</code>, <code>haval224,3</code>, <code>haval256,3</code>, <code>haval128,4</code>, <code>haval160,4</code>, <code>haval192,4</code>, <code>haval224,4</code>, <code>haval256,4</code>, <code>haval128,5</code>, <code>haval160,5</code>, <code>haval192,5</code>, <code>haval224,5</code>, <code>haval256,5</code>.</p>"},{"location":"webhookscript/functions/string.html#hmacstring-value-string-algo-string-secret-string","title":"hmac(string value, string algo, string secret) : string","text":"<p>Returns the calculated message digest/hash in a hexadecimal formatted as a string.</p> <p>For a list of possible values for <code>algo</code>, see <code>hash()</code> above.</p> <p>See also binary and hexadecimal conversion functions.</p> <p>In the following example, the hash needs to be converted to binary, and then to base64, to match the signature.</p> <pre><code>hmac = hmac(var('request.content'), 'sha256', 'insert_secret_here');\nsignature = var('request.header.x-signature', '');\nhash = base64_encode(hex2bin(hmac))\nif (hash != signature) {\nrespond('Unauthorized', 401);\n}\n</code></pre>"},{"location":"webhookscript/functions/string.html#cryptography","title":"Cryptography","text":"<p>List of available algorithms for functions in the Cryptography section:</p> <ul> <li><code>blake2b512</code></li> <li><code>blake2s256</code></li> <li><code>md4</code></li> <li><code>md5</code></li> <li><code>md5-sha1</code></li> <li><code>ripemd160</code></li> <li><code>sha1</code></li> <li><code>sha224</code></li> <li><code>sha256</code></li> <li><code>sha3-224</code></li> <li><code>sha3-256</code></li> <li><code>sha3-384</code></li> <li><code>sha3-512</code></li> <li><code>sha384</code></li> <li><code>sha512</code></li> <li><code>sha512-224</code></li> <li><code>sha512-256</code></li> <li><code>shake128</code></li> <li><code>shake256</code></li> <li><code>sm3</code></li> <li><code>whirlpool</code></li> </ul>"},{"location":"webhookscript/functions/string.html#signstring-value-string-private_key-string-algo-falsestring","title":"sign(string value, string private_key, string algo) : false/string","text":"<p>Signs <code>value</code> using <code>private_key</code> and <code>algo</code>. Returns signature on success, <code>false</code> on failure.</p> <p>For an example using sign() for JWT authorization, see here.</p>"},{"location":"webhookscript/functions/string.html#digeststring-value-string-algo-falsestring","title":"digest(string value, string algo) : false/string","text":"<p>Returns a cryptographic digest of <code>value</code> using <code>algo</code>. Returns <code>false</code> on failure.</p>"},{"location":"webhookscript/functions/string.html#verifystring-value-string-signature-string-public_key-string-algo-truefalse","title":"verify(string value, string signature, string public_key, string algo) : true/false","text":"<p>Verifies <code>value</code> using <code>signature</code>, <code>public_key</code> and <code>algo</code></p>"},{"location":"webhookscript/functions/string.html#html-and-markdown","title":"HTML and Markdown","text":""},{"location":"webhookscript/functions/string.html#html_strip_tagsstring-string-string","title":"html_strip_tags(string string) : string","text":"<p>Returns a string with all HTML tags removed.</p> <p><code>html_strip_tags('&lt;b&gt;test&lt;/b&gt;')</code> returns <code>test</code>.</p>"},{"location":"webhookscript/functions/string.html#html_to_textstring-string-string","title":"html_to_text(string string) : string","text":"<p>Converts HTML to plaintext. A more aggressive version of <code>html_strip_tags</code>.</p> <p><code>html_to_text('&lt;b&gt;test&lt;/b&gt;')</code> returns <code>test</code>.</p>"},{"location":"webhookscript/functions/string.html#html_decodestring-string-string","title":"html_decode(string string) : string","text":"<p>Decodes all HTML entities (for example, <code>&amp;nbsp;</code>) to normal characters.</p>"},{"location":"webhookscript/functions/string.html#html_encodestring-string-string","title":"html_encode(string string) : string","text":"<p>Replaces characters in a string with HTML encoded versions.</p>"},{"location":"webhookscript/functions/string.html#markdown_to_htmlstring-string-bool-safe_mode-false-string","title":"markdown_to_html(string string, bool safe_mode = false) : string","text":"<p>Converts a Markdown string to HTML.</p> <p><code>markdown_to_html('# Hello world')</code> returns <code>&lt;h1&gt;Hello world&lt;/h1&gt;</code>.</p> <p>If <code>safe_mode</code> is set to true, characters like <code>&lt;</code>, <code>&gt;</code> are HTML-entity encoded.</p>"},{"location":"webhookscript/functions/string.html#json","title":"JSON","text":""},{"location":"webhookscript/functions/string.html#is_jsonany-value-bool","title":"is_json(any value) : bool","text":"<p>Returns true if <code>value</code> is a valid JSON string.</p> <pre><code>is_json('{\"test\": \"test\"}').dump() // true\n</code></pre>"},{"location":"webhookscript/functions/string.html#json_decodestring-json-array","title":"json_decode(string json) : array","text":"<p>Decodes <code>json</code> and returns an array.</p> <pre><code>array = json_decode(var('request.content'))\n</code></pre>"},{"location":"webhookscript/functions/string.html#json_encodearray-array-bool-format-true-string","title":"json_encode(array array, bool format = true) : string","text":"<p>Takes an array and encodes it as a JSON string.</p> <p>Per default, the JSON array is formatted with whitespace. To turn it off, set <code>format</code> to false.</p>"},{"location":"webhookscript/functions/string.html#json_pathstring-json-string-jsonpath-bool-return_first-true-string","title":"json_path(string json, string jsonpath, bool return_first = true) : string","text":"<p>Returns the result of a <code>json</code> string parsed using the JSONPath functionality.</p> <p>Per default, if there's just one match (e.g. if matching on a property value that's a string), this value is returned. To always return an array, set <code>return_first</code> to false. </p> <pre><code>dump(json_path('{\"v\": []}', 'v[*]', false))\ndump(json_path('{\"v\": []}', 'v[*]'))\n// []\n// \"\"\ndump(json_path('{\"v\": [\"item1\"]}', 'v[*]', false))\ndump(json_path('{\"v\": [\"item1\"]}', 'v[*]'))\n// [0: \"item1\"]\n// \"item1\"\ndump(json_path('{\"v\": [\"item1\", \"item2\"]}', 'v[*]', false))\ndump(json_path('{\"v\": [\"item1\", \"item2\"]}', 'v[*]'))\n// [0: \"item1\", 1: \"item2\"]\n// [0: \"item1\", 1: \"item2\"]\n</code></pre>"},{"location":"webhookscript/functions/string.html#json_escapestring-json-string","title":"json_escape(string json) : string","text":"<p>JSON-escapes all special JSON characters like double quotes, newlines, etc.</p>"},{"location":"webhookscript/functions/string.html#regex","title":"Regex","text":""},{"location":"webhookscript/functions/string.html#preg_matchstring-regex-string-subject-arrayfalse","title":"preg_match(string regex, string subject) : array/false","text":"<p>Returns the matching values as an array, or <code>false</code> if the regex did not match. Supports regex pattern modifiers.</p> <pre><code>// Returns anything enclosed within &lt;html&gt; tags in a string\nhtml = preg_match('/&lt;html&gt;(.*)&lt;\\\\/html&gt;/s', content)\n</code></pre>"},{"location":"webhookscript/functions/string.html#regex_extractregex-regex-string-subject-arrayfalse","title":"regex_extract(regex regex, string subject) : array/false","text":"<p>Returns the matching string and all match groups as an array, and <code>false</code> on failure.</p> <pre><code>input = \"You're a good bot\"\noutput = regex_extract(r\"You're (\\w) (.*)\", input)\ndump(output) // [0: \"You're a good bot\", 1: \"a\", 2: \"good bot\"]\n</code></pre>"},{"location":"webhookscript/functions/string.html#regex_extract_firstregex-regex-string-subject-any-default-stringfalse","title":"regex_extract_first(regex regex, string subject, any default) : string/false","text":"<p>Returns the first match group of a regex, and <code>false</code> (or <code>default</code>, if set) on failure.</p> <pre><code>input = \"You're a good bot\"\noutput = regex_extract(r\"You're (.*)\", input)\ndump(output) // \"a good bot\"\ninput = \"Hello world\"\noutput = regex_extract(r\"You're (.*)\", input, 'no value')\ndump(output) // \"no value\"\n</code></pre>"},{"location":"webhookscript/functions/string.html#regex_matchregex-regex-string-subject-stringfalse","title":"regex_match(regex regex, string subject) : string/false","text":"<p>Returns the first matching string, otherwise false.</p> <pre><code>input = \"You're a good bot\"\noutput = regex_match(r\"You're .*\", input)\ndump(output) // \"You're a good bot\"\n</code></pre>"},{"location":"webhookscript/functions/string.html#regex_to_stringregex-regex-string","title":"regex_to_string(regex regex) : string","text":"<p>Returns the regex converted to a string</p>"},{"location":"webhookscript/functions/string.html#xml","title":"XML","text":""},{"location":"webhookscript/functions/string.html#xml2arraystring-xml-array","title":"xml2array(string xml) : array","text":"<p>Converts XML to a WebhookScript array. This can be useful for parsing XML, or e.g. converting XML to JSON.</p> <p>Note that this function is opinionated - there's no one way to convert XML to an array as XML has more features than WebhookScript arrays. Therefore the function attempts to carry over all the data by automatically generating properties like <code>@value</code> and <code>@attributes</code> depending on the input data.</p> <p>For example, the following XML:</p> <pre><code>&lt;orders&gt;\n&lt;record&gt;\n&lt;Name type=\"full\"&gt;John Doe&lt;/Name&gt;\n&lt;Reference&gt;49690&lt;/Reference&gt;\n&lt;/record&gt;\n&lt;record&gt;\n&lt;Name type=\"username\"&gt;someone@example.com&lt;/Name&gt;\n&lt;Reference&gt;49690&lt;/Reference&gt;\n&lt;/record&gt;\n&lt;/orders&gt;\n</code></pre> <p>Converts to JSON via the following script:</p> <pre><code>json_encode(xml2array(var('request.content')))\n</code></pre> <p>Which returns:</p> <pre><code>{\n\"orders\": {\n\"record\": [\n{\n\"Name\": {\n\"@value\": \"John Doe\",\n\"@attributes\": {\n\"type\": \"full\"\n}\n},\n\"Reference\": 49690\n},\n{\n\"Name\": {\n\"@value\": \"someone@example.com\",\n\"@attributes\": {\n\"type\": \"username\"\n}\n},\n\"Reference\": 49690\n}\n]\n}\n}\n</code></pre>"},{"location":"webhookscript/functions/string.html#xpathstring-xpath-string-input-stringnull","title":"xpath(string xpath, string input): string/null","text":"<p>Returns the first result of an XPath query on XML document <code>input</code>.</p> <p>Given a request with the following content:</p> <pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;organization name=\"ExampleCo\"&gt;\n&lt;employees&gt;\n&lt;employee id=\"1\"&gt;Jack&lt;/employee&gt;\n&lt;employee id=\"2\"&gt;Ann&lt;/employee&gt;\n&lt;/employees&gt;\n&lt;/organization&gt;\n</code></pre> <ul> <li><code>xpath(var('$request.content$'), '//employee[1]') // returns \"Jack\"</code></li> </ul> <p>More information and examples regarding XPath.</p>"},{"location":"webhookscript/functions/string.html#xpath_allstring-xpath-string-input-stringnull","title":"xpath_all(string xpath, string input): string/null","text":"<p>Returns the results of an XPath query on XML document <code>input</code> as an array.</p> <p>Given a request with the following content:</p> <pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;organization name=\"ExampleCo\"&gt;\n&lt;employees&gt;\n&lt;employee id=\"1\"&gt;Jack&lt;/employee&gt;\n&lt;employee id=\"2\"&gt;Ann&lt;/employee&gt;\n&lt;/employees&gt;\n&lt;/organization&gt;\n</code></pre> <ul> <li><code>xpath_all(var('$request.content$'), '//employee]') // returns [0: \"Jack\", 1: \"Ann\"]</code></li> </ul> <p>More information and examples regarding XPath.</p>"},{"location":"webhookscript/functions/string.html#special-string-functions","title":"Special string functions","text":""},{"location":"webhookscript/functions/string.html#convert_kanastring-mode-string","title":"convert_kana(string, mode) : string","text":"<p>Performs a \"han-kaku\" - \"zen-kaku\" conversion for string string. This function is only useful for Japanese. See here for more info.</p>"},{"location":"webhookscript/functions/variables.html","title":"Custom Action Variables","text":"<p>These functions lets you interface with other Custom Actions by getting and setting variables from them. These functions are also how you retrieve Global Variables defined in the Control Panel.</p>"},{"location":"webhookscript/functions/variables.html#varstring-variable_name-stringnumber-default-mixed","title":"var(string variable_name, ?string/number default) : mixed","text":"<p>Retrieves the value of a Variable or Global Variable (defined in the Control Panel). The surrounding dollar signs are not mandatory.</p> <p>Returns <code>null</code> (or the value of <code>default</code>) if the variable does not exist.</p> <pre><code>var('request.header.x-request-verification') // returns value of the `x-request-verification` header\n</code></pre>"},{"location":"webhookscript/functions/variables.html#setstring-variable_name-string-variable_value","title":"set(string variable_name, string variable_value)","text":"<p>Exports a Variable for use in downstream actions, like the Set Runtime Variable action.</p> <p>For example, the following code:</p> <pre><code>set('myvar', 'Hello world')\n</code></pre> <p>Would cause the string <code>$myvar$</code> to be replaced with <code>Hello world</code> in all subsequent actions.</p>"},{"location":"webhookscript/functions/variables.html#storestring-global_variable_name-any-value-any","title":"store(string global_variable_name, any value): any","text":"<p>Permanently creates or updates a Global Variable (as defined in Control Panel.)</p> <p>The value can also be retrieved with the <code>var()</code> function in subsequent action executions.</p>"},{"location":"webhookscript/functions/variables.html#deletestring-global_variable_name","title":"delete(string global_variable_name)","text":"<p>Deletes a global variable.</p>"},{"location":"webhookscript/functions/variables.html#variables-array","title":"variables : array","text":"<p>A variable (not a function) containing an associative array with all available Webhook.site variables.</p> <pre><code>user_agent = variables['request.header.user-agent']\n</code></pre>"}]}